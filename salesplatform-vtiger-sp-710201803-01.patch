diff --git a/config.inc.php b/config.inc.php
index 6255c8f..fab965c 100644
--- a/config.inc.php
+++ b/config.inc.php
@@ -180,5 +180,7 @@ if(isset($default_timezone) && function_exists('date_default_timezone_set')) {
 //Set the default layout 
 $default_layout = 'v7';
 
+$sp_check_site_url = 'true';
+
 include_once 'config.security.php';
 ?>
diff --git a/config.template.php b/config.template.php
index 5e58ee2..258a7c8 100644
--- a/config.template.php
+++ b/config.template.php
@@ -180,5 +180,7 @@ if(isset($default_timezone) && function_exists('date_default_timezone_set')) {
 //Set the default layout 
 $default_layout = 'v7';
 
+$sp_check_site_url = 'true';
+
 include_once 'config.security.php';
 ?>
diff --git a/cron/modules/SalesOrder/RecurringInvoice.service b/cron/modules/SalesOrder/RecurringInvoice.service
index 13fd4b7..545ee86 100644
--- a/cron/modules/SalesOrder/RecurringInvoice.service
+++ b/cron/modules/SalesOrder/RecurringInvoice.service
@@ -54,18 +54,34 @@ for($i=0; $i<$no_of_salesorder;$i++) {
 		}
 
 		if ($recurringDatesList) {
-			foreach ($recurringDatesList as $recurringDate) {
-				createInvoice($salesorder_id, $recurringDate);
-			}
-			$adb->pquery('UPDATE vtiger_invoice_recurring_info SET last_recurring_date = ? WHERE salesorderid = ?', array($validNextRecurringDate, $salesorder_id));
+            try {
+                foreach ($recurringDatesList as $recurringDate) {
+                    createInvoice($salesorder_id, $recurringDate);
+                }
+                $adb->pquery('UPDATE vtiger_invoice_recurring_info SET last_recurring_date = ? WHERE salesorderid = ?', array($validNextRecurringDate, $salesorder_id));
+            } catch(Exception $ex) {
+                $log->error(
+                    "Error on recurring invoice create: \n" . 
+                    $ex->getMessage() . "\n" . 
+                    $ex->getTraceAsString()
+                );
+            }
 		}
 
 	} elseif($recurringDateStrTime == $currentDateStrTime && $recurringDateStrTime <= $endDateStrTime) {
-		createInvoice($salesorder_id, $recurringDate);
-
-		$nextRecurringDatesInfo = getRecurringDate($recurring_date, $recurringFrequency);
-		$nextRecurringDate = $nextRecurringDatesInfo['validDate'];
-		$adb->pquery('UPDATE vtiger_invoice_recurring_info SET last_recurring_date = ? WHERE salesorderid = ?', array($nextRecurringDate, $salesorder_id));
+        try {
+            createInvoice($salesorder_id, $recurringDate);
+
+            $nextRecurringDatesInfo = getRecurringDate($recurring_date, $recurringFrequency);
+            $nextRecurringDate = $nextRecurringDatesInfo['validDate'];
+            $adb->pquery('UPDATE vtiger_invoice_recurring_info SET last_recurring_date = ? WHERE salesorderid = ?', array($nextRecurringDate, $salesorder_id));
+        } catch(Exception $ex) {
+            $log->error(
+                "Error on recurring invoice create: \n" . 
+                $ex->getMessage() . "\n" . 
+                $ex->getTraceAsString()
+            );
+        }
 	}
 }
 
@@ -134,7 +150,7 @@ function createInvoice($salesorder_id, $recurringDate = false) {
 		'assigned_user_id' => 'assigned_user_id',
 		'currency_id' => 'currency_id',
 		'conversion_rate' => 'conversion_rate',
-		'balance' => 'hdnGrandTotal'
+		'balance' => 'hdnGrandTotal',
         // SalesPlatform.ru begin: Added company to recurring invoices 
         'spcompany' => 'spcompany', 
         // SalesPlatform.ru end 
@@ -144,11 +160,8 @@ function createInvoice($salesorder_id, $recurringDate = false) {
 	}
 	$focus->_salesorderid = $salesorder_id;
 	$focus->_recurring_mode = 'recurringinvoice_from_so';
-	try {
-		$focus->save("Invoice");
-	} catch (Exception $e) {
-		//TODO - Review
-	}
+
+    $focus->save("Invoice");
 }
 
 function getRecurringDate($recurringDate, $recurringFrequency) {
diff --git a/include/QueryGenerator/EnhancedQueryGenerator.php b/include/QueryGenerator/EnhancedQueryGenerator.php
index a9f8c3f..5dd3efc 100644
--- a/include/QueryGenerator/EnhancedQueryGenerator.php
+++ b/include/QueryGenerator/EnhancedQueryGenerator.php
@@ -530,11 +530,18 @@ class EnhancedQueryGenerator extends QueryGenerator {
 			$tableList[$table] = $table;
 			$tableJoinMapping[$table] = 'INNER JOIN';
 		}
-		$ownerFields = $this->meta->getOwnerFields();
-		if (count($ownerFields) > 0) {
-			$ownerField = $ownerFields[0];
-		}
-
+		$tableOwnerFields = $this->meta->getOwnerFields();
+                $ownerFields = array();
+                foreach ($this->conditionals as $conditionalsField) {
+                        foreach ($tableOwnerFields as $tableOwnerField) {
+                                if ($conditionalsField['name'] === $tableOwnerField) {
+                                        $ownerFields[] = $tableOwnerField;
+                                }
+                        }
+                }
+                if (count($ownerFields) == 0) {
+                        $ownerFields = $tableOwnerFields;
+                }
 		$sqlTablesList = array();
 		$sql = " FROM $baseTable ";
 		unset($tableList[$baseTable]);
@@ -546,13 +553,17 @@ class EnhancedQueryGenerator extends QueryGenerator {
 
 		foreach ($tableList as $tableName) {
 			if ($tableName == 'vtiger_users') {
-				$field = $moduleFields[$ownerField];
-				$sql .= " $tableJoinMapping[$tableName] $tableName ON ".$field->getTableName()."." .
-						$field->getColumnName()." = $tableName.id";
+                                foreach($ownerFields as $tableIndex => $currentOwnerField) {
+                                        $sql .=' '.$tableJoinMapping[$tableName].' '.$tableName.' AS '.$tableName.'_table'.$tableIndex.' ON ';
+                                        $field = $moduleFields[$currentOwnerField];
+                                        $sql .= $field->getTableName().".".$field->getColumnName().' = '.$tableName.'_table'.$tableIndex.'.id';
+                                }
 			} elseif ($tableName == 'vtiger_groups') {
-				$field = $moduleFields[$ownerField];
-				$sql .= " $tableJoinMapping[$tableName] $tableName ON ".$field->getTableName()."." .
-						$field->getColumnName()." = $tableName.groupid";
+                                foreach($ownerFields as $tableIndex => $currentOwnerField) {
+                                        $sql .=' '.$tableJoinMapping[$tableName].' '.$tableName.' AS '.$tableName.'_table'.$tableIndex.' ON ';
+                                        $field = $moduleFields[$currentOwnerField];
+                                        $sql .= $field->getTableName()."." .$field->getColumnName().' = '.$tableName.'_table'.$tableIndex.'.groupid';
+                                }
 			} elseif ($tableName == 'vtiger_freetagged_objects') {
 				$sql .= " $tableJoinMapping[$tableName] $tableName ON $baseTable.$baseTableIndex = $tableName.object_id " .
 						"INNER JOIN vtiger_freetags ON $tableName.tag_id = vtiger_freetags.id ";
@@ -607,11 +618,6 @@ class EnhancedQueryGenerator extends QueryGenerator {
 		if ($deletedQuery) {
 			$sql .= " WHERE $deletedQuery";
 		}
-		if ($this->conditionInstanceCount > 0) {
-			$sql .= ' AND ';
-		} elseif (empty($deletedQuery)) {
-			$sql .= ' WHERE ';
-		}
 		$baseModule = $this->getModule();
 		$moduleFieldList = $this->getModuleFields();
 		$baseTable = $this->meta->getEntityBaseTable();
@@ -619,8 +625,50 @@ class EnhancedQueryGenerator extends QueryGenerator {
 		$baseTableIndex = $moduleTableIndexList[$baseTable];
 		$groupSql = $this->groupInfo;
 		$fieldSqlList = array();
-
-		foreach ($this->conditionals as $index => $conditionInfo) {
+                $ownerConditionals = array();
+                $tableIndex = 0;
+                $fieldSql = ' AND (';
+                $ownerFieldSQL = '';
+                foreach ($this->conditionals as $index => $conditionInfo) {
+                        if (in_array($conditionInfo['name'], $this->ownerFields)) {                               
+                                $ownerConditionals[] = $conditionInfo['name'];
+                                $field = $moduleFieldList[$conditionInfo['name']];
+                                $valueSqlList = $this->getConditionValue($conditionInfo['value'], $conditionInfo['operator'], $field);
+                                reset($valueSqlList);
+                                $fieldGlue = '';
+                                if ($tableIndex > 0)  $fieldSql .= ' AND ';
+                                $fieldSql .= '( ';
+                                foreach ($valueSqlList as $valueSql) {
+                                        $ownerTableName = '';
+                                        $concatSql = getSqlForNameInDisplayFormat(array('first_name' => 'vtiger_users_table'.$tableIndex.$ownerTableName.'.first_name',
+                                                'last_name' => 'vtiger_users_table'.$tableIndex.$ownerTableName.'.last_name'), 'Users');
+
+                                        if ($conditionInfo['operator'] == 'y') {
+                                                $fieldSql .= "$fieldGlue (trim($concatSql) $valueSql) AND (vtiger_groups_table$tableIndex$ownerTableName.groupname $valueSql)";     
+                                        } else {
+                                                $fieldSql .= "$fieldGlue (trim($concatSql) $valueSql or vtiger_groups_table$tableIndex$ownerTableName.groupname $valueSql) ";
+                                        }
+                                        $fieldGlue = ' OR ';
+                                }
+                                $fieldSql .= ') ';
+                                $tableIndex++;
+                                unset($this->conditionals[$index]);
+                                $this->conditionInstanceCount--;
+                        }
+                }
+                if ($tableIndex > 0) {
+                        $fieldSql .= ')';
+                        $ownerFieldSQL .= $fieldSql;    
+                }
+                
+                if ($this->conditionInstanceCount > 0) {
+			$sql .= ' AND ';
+		} elseif (empty($deletedQuery)) {
+			$sql .= ' WHERE ';
+		}
+                
+                $conditionals = array_values($this->conditionals);
+		foreach ($conditionals as $index => $conditionInfo) {
 			$parentReferenceField = '';
 			$baseFieldName = $fieldName = $conditionInfo['name'];
 			$field = $moduleFieldList[$fieldName];
@@ -664,7 +712,7 @@ class EnhancedQueryGenerator extends QueryGenerator {
 			if (!is_array($valueSqlList)) {
 				$valueSqlList = array($valueSqlList);
 			}
-			foreach ($valueSqlList as $valueSql) {
+			foreach ($valueSqlList as $valueSql) {                       
 				if (in_array($baseFieldName, $this->referenceFieldList)) {
 					if ($conditionInfo['operator'] == 'y') {
 						$columnName = $field->getColumnName();
@@ -688,20 +736,7 @@ class EnhancedQueryGenerator extends QueryGenerator {
 						}
 						$fieldSql .= "$fieldGlue trim($columnSql) $valueSql";
 						$fieldGlue = ' OR';
-					}
-				} elseif (in_array($baseFieldName, $this->ownerFields)) {
-					if ($parentReferenceField)
-						$ownerTableName = $parentReferenceField.$fieldName;
-					else
-						$ownerTableName = '';
-					$concatSql = getSqlForNameInDisplayFormat(array('first_name' => 'vtiger_users'.$ownerTableName.'.first_name',
-						'last_name' => 'vtiger_users'.$ownerTableName.'.last_name'), 'Users');
-					if ($conditionInfo['operator'] == 'y') {
-						//if both user name and group name empty, then only should list in isempty condition
-						$fieldSql .= "$fieldGlue ((trim($concatSql) $valueSql) AND (vtiger_groups$ownerTableName.groupname $valueSql))";
-					} else {
-						$fieldSql .= "$fieldGlue (trim($concatSql) $valueSql or vtiger_groups$ownerTableName.groupname $valueSql)";
-					}
+					}				
 				} elseif ($field->getFieldDataType() == 'date' && ($baseModule == 'Events' || $baseModule == 'Calendar') && ($fieldName == 'date_start' || $fieldName == 'due_date')) {
 					$value = $conditionInfo['value'];
 					if ($fieldName == 'date_start') {
@@ -852,6 +887,9 @@ class EnhancedQueryGenerator extends QueryGenerator {
 			$sql .= $groupSql;
 		}
 		$sql .= " AND $baseTable.$baseTableIndex > 0";
+                if ($ownerFieldSQL !== '') {
+                    $sql .= $ownerFieldSQL;
+                }
 		$this->whereClause = $sql;
 		return $sql;
 	}
diff --git a/include/utils/InventoryUtils.php b/include/utils/InventoryUtils.php
index ca557c0..230550d 100644
--- a/include/utils/InventoryUtils.php
+++ b/include/utils/InventoryUtils.php
@@ -1347,7 +1347,9 @@ function createRecords($obj) {
 		$lineItems = array();
 		$subject = $row['subject'];
 		$subject = str_replace("\\", "\\\\", $subject);
-		$subject = str_replace('"', '""', $subject);
+                /* SalesPlatform begin #5836 */
+//		$subject = str_replace('"', '""', $subject);
+                /* SalesPlatform end */
 		$sql = "SELECT * FROM $tableName WHERE status = ".Import_Data_Action::$IMPORT_RECORD_NONE." AND subject = '$subject'";
 		$subjectResult = $adb->query($sql);
 		$count = $adb->num_rows($subjectResult);
diff --git a/includes/SalesPlatform/PDF/ProductListPDFController.php b/includes/SalesPlatform/PDF/ProductListPDFController.php
index ec4d82a..e860d78 100644
--- a/includes/SalesPlatform/PDF/ProductListPDFController.php
+++ b/includes/SalesPlatform/PDF/ProductListPDFController.php
@@ -253,12 +253,12 @@ class SalesPlatform_PDF_ProductListDocumentPDFController extends
 		//To calculate the group tax amount
 		if($final_details['taxtype'] == 'group') {
 			$group_tax_details = $final_details['taxes'];
-			for($i=0;$i<count($group_tax_details);$i++) {
-				$group_total_tax_percent += $group_tax_details[$i]['percentage'];
+			foreach($group_tax_details as $taxDetail) {
+				$group_total_tax_percent += $taxDetail['percentage'];
 			}
 			$summaryModel->set("summaryTax", $this->formatPrice($final_details['tax_totalamount']));
 			$summaryModel->set("summaryTaxLiteral", $this->num2str($final_details['tax_totalamount'], false, $currency));
-			$summaryModel->set("summaryTaxPercent", $group_total_tax_percent);
+			$summaryModel->set("summaryTaxPercent", $this->formatPrice($group_total_tax_percent));
                         $overall_tax += $final_details['tax_totalamount'];
 
                         $summaryModel->set("summaryTaxGoods", $this->formatPrice(($netTotalGoods - $discountGoods) * $group_total_tax_percent / 100.0));
@@ -273,12 +273,12 @@ class SalesPlatform_PDF_ProductListDocumentPDFController extends
 		}
 		else if($final_details['taxtype'] == 'group_tax_inc') {
 			$group_tax_details = $final_details['taxes'];
-			for($i=0;$i<count($group_tax_details);$i++) {
-				$group_total_tax_percent += $group_tax_details[$i]['percentage'];
+			foreach($group_tax_details as $taxDetail) {
+				$group_total_tax_percent += $taxDetail['percentage'];
 			}
 			$summaryModel->set("summaryTax", $this->formatPrice($final_details['tax_totalamount']));
 			$summaryModel->set("summaryTaxLiteral", $this->num2str($final_details['tax_totalamount'], false, $currency));
-			$summaryModel->set("summaryTaxPercent", $group_total_tax_percent);
+			$summaryModel->set("summaryTaxPercent", $this->formatPrice($group_total_tax_percent));
                         $overall_tax += $final_details['tax_totalamount'];
                         $summaryModel->set("summaryNetTotal", $this->formatPrice($netTotal - $final_details['tax_totalamount']));
 
@@ -298,7 +298,7 @@ class SalesPlatform_PDF_ProductListDocumentPDFController extends
 		    $summaryModel->set("summaryTax", $this->formatPrice($this->totaltaxes));
     		    $summaryModel->set("summaryTaxLiteral", $this->num2str($this->totaltaxes, false, $currency));
 		    if($netTotal > 0) {
-			$summaryModel->set("summaryTaxPercent", $this->totaltaxes / $netTotal * 100);
+			$summaryModel->set("summaryTaxPercent", $this->formatPrice($this->totaltaxes / $netTotal * 100));
 		    }
 		    else {
 			$summaryModel->set("summaryTaxPercent", 0);
@@ -327,8 +327,8 @@ class SalesPlatform_PDF_ProductListDocumentPDFController extends
                 }
 		//Shipping & Handling taxes
 		$sh_tax_details = $final_details['sh_taxes'];
-		for($i=0;$i<count($sh_tax_details);$i++) {
-			$sh_tax_percent = $sh_tax_percent + $sh_tax_details[$i]['percentage'];
+                foreach($sh_tax_details as $taxDetail) {
+			$sh_tax_percent = $sh_tax_percent + $taxDetail['percentage'];
 		}
 		//obtain the Currency Symbol
 		$currencySymbol = $this->buildCurrencySymbol();
diff --git a/languages/en_us/Install.php b/languages/en_us/Install.php
index 7d9f30e..5fe6821 100644
--- a/languages/en_us/Install.php
+++ b/languages/en_us/Install.php
@@ -233,7 +233,7 @@ $languageStrings = array(
         'LBL_ENABLED_FOR_THIS_FEATURE'           => 'These Modules will be enabled for this feature',
         'LBL_NOTE'                   => 'Note',
         'LBL_NOTE_ABOUT_MODULE_MANAGER'          => 'You can Enable/Disable modules from module manager later',
-        'LBL_PDF_INVOICE_BODY'  => ',\'Invoice\',\'Invoice\',\'{header}\n\n<p style="font-weight: bold; text-decoration: underline">{$orgName}</p>\n\n<p style="font-weight: bold">Address: {$orgBillingAddress}, phone: {$orgPhone}</p>\n\n\n<br/>\n<h1 style="text-align: center">INVOICE № {$invoice_no} from {$invoice_invoicedate}</h1>\n<br/><br/>\n<table border="0">\n<tr>\n<td width="100">Payer:</td><td width="450"><span style="font-weight: bold">{$account_accountname}</span></td>\n</tr>\n<tr>\n<td width="100">Consignee:</td><td width="450"><span style="font-weight: bold">{$account_accountname}</span></td>\n</tr>\n</table>\n\n{/header}\n\n{table_head}\n<table border="1" style="font-size: 8pt" cellpadding="2">\n    <tr style="text-align: center; font-weight: bold">\n	<td width="30">№</td>\n      <td width="260">Name of<br/>product</td>\n      <td width="65">Unit</td>\n      <td width="35">Quantity</td>\n	<td width="70">Price</td>\n	<td width="70">Amount</td>\n	</tr>\n{/table_head}\n\n{table_row}\n    <tr>\n	<td width="30">{$productNumber}</td>\n      <td width="260">{$productName} {$productComment}</td>\n	<td width="65" style="text-align: center">{$productUnits}</td>\n	<td width="35" style="text-align: right">{$productQuantityInt}</td>\n	<td width="70" style="text-align: right">{$productPriceWithTax}</td>\n	<td width="70" style="text-align: right">{$productTotal}</td>\n    </tr>\n{/table_row}\n\n{summary}\n</table>\n<table border="0" style="font-size: 8pt;font-weight: bold">\n    <tr>\n      <td width="460">\n        <table border="0" cellpadding="2">\n          <tr><td width="460" style="text-align: right">In total:</td></tr>\n          <tr><td width="460" style="text-align: right">Including tax:</td></tr>\n          <tr><td width="460" style="text-align: right">Total to pay:</td></tr>\n        </table>\n      </td>\n      <td width="70">\n        <table border="1" cellpadding="2">\n          <tr><td width="70" style="text-align: right">{$summaryGrandTotal}</td></tr>\n          <tr><td width="70" style="text-align: right">{$summaryTax}</td></tr>\n          <tr><td width="70" style="text-align: right">{$summaryGrandTotal}</td></tr>\n        </table>\n      </td>\n  </tr>\n</table>\n\n<p>\nTotal items {$summaryTotalItems}, to amount {$summaryGrandTotal}<br/>\n<span style="font-weight: bold">{$summaryGrandTotalLiteral}</span>\n</p>\n\n{/summary}\n\n{ending}\n<br/>\n    <p>Directior  __________________ ( {$orgDirector} ) <br/>\n    <br/>\n    General bookkeeper  __________________ ( {$orgBookkeeper} )\n    </p>\n{/ending}\',110,50,\'P\'',
+        'LBL_PDF_INVOICE_BODY'  => ',\'Invoice\',\'Invoice\',\'{header}\n\n<p style="font-weight: bold; text-decoration: underline">{$orgName}</p>\n\n<p style="font-weight: bold">Address: {$orgBillingAddress}, phone: {$orgPhone}</p>\n\n\n<br/>\n<h1 style="text-align: center">INVOICE № {$invoice_no} from {$invoice_invoicedate}</h1>\n<br/><br/>\n<table border="0">\n<tr>\n<td width="100">Payer:</td><td width="450"><span style="font-weight: bold">{$account_accountname}</span></td>\n</tr>\n<tr>\n<td width="100">Consignee:</td><td width="450"><span style="font-weight: bold">{$account_accountname}</span></td>\n</tr>\n</table>\n\n{/header}\n\n{table_head}\n<table border="1" style="font-size: 8pt" cellpadding="2">\n    <tr style="text-align: center; font-weight: bold">\n	<td width="30">№</td>\n      <td width="260">Name of<br/>product</td>\n      <td width="65">Unit</td>\n      <td width="35">Quantity</td>\n	<td width="70">Price</td>\n	<td width="70">Amount</td>\n	</tr>\n{/table_head}\n\n{table_row}\n    <tr>\n	<td width="30">{$productNumber}</td>\n      <td width="260">{$productName} {$productComment}</td>\n	<td width="65" style="text-align: center">{$productUnits}</td>\n	<td width="35" style="text-align: right">{$productQuantity}</td>\n	<td width="70" style="text-align: right">{$productPriceWithTax}</td>\n	<td width="70" style="text-align: right">{$productTotal}</td>\n    </tr>\n{/table_row}\n\n{summary}\n</table>\n<table border="0" style="font-size: 8pt;font-weight: bold">\n    <tr>\n      <td width="460">\n        <table border="0" cellpadding="2">\n          <tr><td width="460" style="text-align: right">In total:</td></tr>\n          <tr><td width="460" style="text-align: right">Including tax:</td></tr>\n          <tr><td width="460" style="text-align: right">Total to pay:</td></tr>\n        </table>\n      </td>\n      <td width="70">\n        <table border="1" cellpadding="2">\n          <tr><td width="70" style="text-align: right">{$summaryGrandTotal}</td></tr>\n          <tr><td width="70" style="text-align: right">{$summaryTax}</td></tr>\n          <tr><td width="70" style="text-align: right">{$summaryGrandTotal}</td></tr>\n        </table>\n      </td>\n  </tr>\n</table>\n\n<p>\nTotal items {$summaryTotalItems}, to amount {$summaryGrandTotal}<br/>\n<span style="font-weight: bold">{$summaryGrandTotalLiteral}</span>\n</p>\n\n{/summary}\n\n{ending}\n<br/>\n    <p>Directior  __________________ ( {$orgDirector} ) <br/>\n    <br/>\n    General bookkeeper  __________________ ( {$orgBookkeeper} )\n    </p>\n{/ending}\',110,50,\'P\'',
         'LBL_SEND_NOTIFICATION_TO_INVITED_USERS' => 'Send e-mail to invited users',
         'LBL_EVENT' => 'Event',
         'LBL_EVENT_DETAILS' => 'Event Details',
diff --git a/languages/en_us/Settings/LayoutEditor.php b/languages/en_us/Settings/LayoutEditor.php
index 5b95989..e7bfb45 100644
--- a/languages/en_us/Settings/LayoutEditor.php
+++ b/languages/en_us/Settings/LayoutEditor.php
@@ -172,8 +172,9 @@ $languageStrings = array(
     //SalesPlatform.ru end
     //SalesPlatform.ru begin initializing the field with uitype 19 with the CKEditor editor
     'LBL_CKE_FIELD' => 'CKEditor',
-    'SPTextArea' => 'Text area'
+    'SPTextArea' => 'Text area',
     //SalesPlatform.ru end initializing the field with uitype 19 with the CKEditor editor
+    'LBL_SYSTEM_NAME' => 'System name',
 );
 
 $jsLanguageStrings = array(
@@ -242,4 +243,5 @@ $jsLanguageStrings = array(
     'JS_CKE_FIELD' => 'CKEditor',
     'JS_SPTextArea' => 'Text area',
     //SalesPlatform.ru end initializing the field with uitype 19 with the CKEditor editor
+    'JS_SYSTEM_NAME' => 'System name',
 );
diff --git a/languages/en_us/Settings/SPTips.php b/languages/en_us/Settings/SPTips.php
index 2b25af8..0a62b65 100644
--- a/languages/en_us/Settings/SPTips.php
+++ b/languages/en_us/Settings/SPTips.php
@@ -20,7 +20,7 @@ $languageStrings = array(
     'LBL_SELECTED_FIELD' => 'Selected field',
     'LBL_FILL_IN_FIELDS' => 'Fill in the fields',
     'LBL_ADD_PROVIDER' => 'Add a new provider',
-    'LBL_EDIT_PROVIDER' => 'Edit provider',
+    'LBL_EDIT_PROVIDER' => 'Edit provider settings',
     'LBL_PROVIDER_NAME' => 'Provider name',
     'LBL_API_KEY' => 'API key',
     'LBL_TOKEN' => 'Token',
@@ -35,7 +35,7 @@ $languageStrings = array(
     'LBL_CREATE_RULE' => 'Create rule',
     'LBL_LIST_RULES' => 'List of rules',
     'LBL_ADD_FIELD' => 'Add field',
-    'LBL_DIFFERENT_RULES_FOR_PROVIDERS' => 'Note! Rules are created for a specific provider.',
+    'LBL_DIFFERENT_RULES_FOR_PROVIDERS' => 'Note! Rules are created for a specific selected provider.',
     'LBL_SELECT_PROVIDER' => 'Select provider!',
     'LBL_CREATE_RULE_WITHOUT_PROVIDER' => 'Need to add provider and select it before creating rules!',
     'LBL_INFORMATION' => 'Information',
@@ -130,6 +130,46 @@ $languageStrings = array(
     'country' => 'Country',
     'postal_code' => 'Postal code',
     // Google label end
+    
+    'LBL_CRM_FIELD' => 'CRM field',
+    'LBL_PROVIDER_FIELD' => 'Provider field',
+    'LBL_SELECT_AS_DEFAULT' => 'Select as default',
+    'api_key' => 'API key',
+    'token' => 'Token',
+    'LBL_SELECTED_AUTOCFOMPLETE_FIELD' => 'Tip field',
+    'LBL_AUTOCOMPLETE_MAPPING' => 'Mapping for other fild to fill in by tip data',
+    'LBL_ADD_MAPPING' => 'Add mapping',
+    'LBL_TIP_TYPE' => 'Tip type',
+    'address' => 'Address',
+    'organization' => 'Organization',
+    
+    /* Dadata organization search */
+    'address.value' => 'Address',
+    'address.unrestricted_value' => 'Full address',
+    'address.data.source' => 'EGRUL address',
+    'branch_count' => 'Branch count',
+    'branch_type' => 'Branch type',
+    'inn' => 'INN',
+    'kpp' => 'KPP',
+    'ogrn' => 'OGRN',
+    'ogrn_date' => 'OGRN date',
+    'management.name' => 'Managment name',
+    'management.post' => 'Managment post',
+    'name.full_with_opf' => 'Full name with opf',
+    'name.short_with_opf' => 'Short name with opf',
+    'name.full' => 'Full name',
+    'name.short' => 'Short name',
+    'okved' => 'OKVED',
+    'okved_type' => 'OKVED help version',
+    'opf.code' => 'OPF code',
+    'opf.full' => 'OPF full name',
+    'opf.short' => 'OPF short name',
+    'opf.type' => 'OPF help version OKVED for OPF',
+    'state.actuality_date' => 'Data actual date',
+    'state.registration_date' => 'Registration date',
+    'state.liquidation_date' => 'Liquidation date',
+    'state.status' => 'Status',
+    'type' => 'Organization type',
 );
 
 $jsLanguageStrings = array(
diff --git a/languages/en_us/Settings/SPVoipIntegration.php b/languages/en_us/Settings/SPVoipIntegration.php
index 9e94770..13480bb 100644
--- a/languages/en_us/Settings/SPVoipIntegration.php
+++ b/languages/en_us/Settings/SPVoipIntegration.php
@@ -17,4 +17,5 @@ $languageStrings = array(
     'VoipIntegration' => 'Voip integration',
     'LBL_VOIP_PROVIDER_PARAMETERS' => 'Parameters',
     'LBL_SP_VOIP_SETTINGS' => 'Voip settings',
+    'LBL_USE_CLICK_TO_CALL' => 'Use this provider for click2call',
 );
\ No newline at end of file
diff --git a/languages/ru_ru/Home.php b/languages/ru_ru/Home.php
index 083d0e0..93938e3 100644
--- a/languages/ru_ru/Home.php
+++ b/languages/ru_ru/Home.php
@@ -12,7 +12,7 @@ $languageStrings = array(
 	'PLVT'                         => 'Последние Сделки', // KEY 5.x: Top Potentials
 	'QLTQ'                         => 'Последние Предложения', // KEY 5.x: Top Quotes
 	'CVLVT'                        => 'Ключевые Показатели', // KEY 5.x: Key Metrics
-	'HLT'                          => 'Топ Билеты Поддержка'         , 
+	'HLT'                          => 'Топ Билеты Поддержка'         ,
 	'GRT'                          => 'Положение Моей Группы', // KEY 5.x: My Group Allocation
 	'OLTSO'                        => 'Последние Заказы', // KEY 5.x: Top Sales Orders
 	'ILTI'                         => 'Последние Счета', // KEY 5.x: Top Invoices
@@ -26,7 +26,8 @@ $languageStrings = array(
     'Tag Cloud'                    => 'Облако Тегов',
         'LBL_SAVE_ORDER' => 'Сохранить Порядок',
         'LBL_ADD_NEW_DASHBOARD' => 'Добавить новую панель',
-	'LBL_MAX_CHARACTERS_ALLOWED_DASHBOARD' => 'Максимум 30 символов разрешено для имени панели.',        
+	'LBL_MAX_CHARACTERS_ALLOWED_DASHBOARD' => 'Максимум 30 символов разрешено для имени панели.',
+    'Community' => 'Сообщество'
 );
 
 // SalesPlatform.ru begin SPConfiguration fix
diff --git a/languages/ru_ru/Install.php b/languages/ru_ru/Install.php
index 206151a..43d6605 100644
--- a/languages/ru_ru/Install.php
+++ b/languages/ru_ru/Install.php
@@ -239,10 +239,10 @@ $languageStrings = array(
         'LBL_ENABLED_FOR_THIS_FEATURE'           => 'Для данной возможности будут включены следующие модули', 
         'LBL_NOTE'                   => 'Примечание',
         'LBL_NOTE_ABOUT_MODULE_MANAGER'          => 'Позже вы можете включить/выключить модули через Менеджер модулей',
-        'LBL_PDF_INVOICE_BODY'  =>   ',\'Счет\',\'Invoice\',\'{header}\n\n<p style="font-weight: bold; text-decoration: underline">{$orgName}</p>\n\n<p style="font-weight: bold">Адрес: {$orgBillingAddress}, тел.: {$orgPhone}</p>\n\n<div style="font-weight: bold; text-align: center">Образец заполнения платежного поручения</div>\n\n<table border="1" cellpadding="2">\n<tr>\n  <td width="140">ИНН {$orgInn}</td><td width="140">КПП {$orgKpp}</td><td rowspan="2" width="50"><br/><br/>Сч. №</td><td rowspan="2" width="200"><br/><br/>{$orgBankAccount}</td>\n</tr>\n<tr>\n<td colspan="2" width="280"><span style="font-size: 8pt">Получатель</span><br/>{$orgName}</td>\n</tr>\n<tr>\n<td colspan="2" rowspan="2" width="280"><span style="font-size: 8pt">Банк получателя</span><br/>{$orgBankName}</td>\n<td width="50">БИК</td>\n<td rowspan="2" width="200">{$orgBankId}<br/>{$orgCorrAccount}</td>\n</tr>\n<tr>\n<td width="50">Сч. №</td>\n</tr>\n</table>\n<br/>\n<h1 style="text-align: center">СЧЕТ № {$invoice_no} от {$invoice_invoicedate}</h1>\n<br/><br/>\n<table border="0">\n<tr>\n<td width="100">Плательщик:</td><td width="450"><span style="font-weight: bold">{$account_accountname}</span></td>\n</tr>\n<tr>\n<td width="100">Грузополучатель:</td><td width="450"><span style="font-weight: bold">{$account_accountname}</span></td>\n</tr>\n</table>\n\n{/header}\n\n{table_head}\n<table border="1" style="font-size: 8pt" cellpadding="2">\n    <tr style="text-align: center; font-weight: bold">\n	<td width="30">№</td>\n      <td width="260">Наименование<br/>товара</td>\n      <td width="65">Единица<br/>изме-<br/>рения</td>\n      <td width="35">Коли-<br/>чество</td>\n	<td width="70">Цена</td>\n	<td width="70">Сумма</td>\n	</tr>\n{/table_head}\n\n{table_row}\n    <tr>\n	<td width="30">{$productNumber}</td>\n      <td width="260">{$productName} {$productComment}</td>\n	<td width="65" style="text-align: center">{$productUnits}</td>\n	<td width="35" style="text-align: right">{$productQuantityInt}</td>\n	<td width="70" style="text-align: right">{$productPriceWithTax}</td>\n	<td width="70" style="text-align: right">{$productTotal}</td>\n    </tr>\n{/table_row}\n\n{summary}\n</table>\n<table border="0" style="font-size: 8pt;font-weight: bold">\n    <tr>\n      <td width="460">\n        <table border="0" cellpadding="2">\n          <tr><td width="460" style="text-align: right">Итого:</td></tr>\n          <tr><td width="460" style="text-align: right">В т.ч. НДС:</td></tr>\n          <tr><td width="460" style="text-align: right">Всего к оплате:</td></tr>\n        </table>\n      </td>\n      <td width="70">\n        <table border="1" cellpadding="2">\n          <tr><td width="70" style="text-align: right">{$summaryGrandTotal}</td></tr>\n          <tr><td width="70" style="text-align: right">{$summaryTax}</td></tr>\n          <tr><td width="70" style="text-align: right">{$summaryGrandTotal}</td></tr>\n        </table>\n      </td>\n  </tr>\n</table>\n\n<p>\nВсего наименований {$summaryTotalItems}, на сумму {$summaryGrandTotal} руб.<br/>\n<span style="font-weight: bold">{$summaryGrandTotalLiteral}</span>\n</p>\n\n{/summary}\n\n{ending}\n<br/>\n    <p>Руководитель предприятия  __________________ ( {$orgDirector} ) <br/>\n    <br/>\n    Главный бухгалтер  __________________ ( {$orgBookkeeper} )\n    </p>\n{/ending}\',110,50,\'P\'',
-        'LBL_PDF_WAYBILL_BODY'  =>   ',\'Накладная\',\'SalesOrder\',\'{header}\n<h1 style=\"font-size: 14pt\">Расходная накладная № {$salesorder_no}</h1>\n<hr>\n<table border=\"0\" style=\"font-size: 9pt\">\n<tr>\n<td width=\"80\">Поставщик:</td><td width=\"450\"><span style=\"font-weight: bold\">{$orgName}</span></td>\n</tr>\n<tr>\n<td width=\"80\">Покупатель:</td><td width=\"450\"><span style=\"font-weight: bold\">{$account_accountname}</span></td>\n</tr>\n</table>\n{/header}\n\n{table_head}\n<table border=\"1\" style=\"font-size: 8pt\" cellpadding=\"2\">\n    <tr style=\"text-align: center; font-weight: bold\">\n	<td width=\"30\" rowspan=\"2\">№</td>\n	<td width=\"200\" rowspan=\"2\">Товар</td>\n	<td width=\"50\" rowspan=\"2\" colspan=\"2\">Мест</td>\n	<td width=\"60\" rowspan=\"2\" colspan=\"2\">Количество</td>\n	<td width=\"60\" rowspan=\"2\">Цена</td>\n	<td width=\"60\" rowspan=\"2\">Сумма</td>\n	<td width=\"70\">Номер ГТД</td>\n    </tr>\n    <tr style=\"text-align: center; font-weight: bold\">\n	<td width=\"70\">Страна<br/>происхождения</td>\n    </tr>\n{/table_head}\n\n{table_row}\n    <tr>\n	<td width=\"30\" rowspan=\"2\">{$productNumber}</td>\n	<td width=\"200\" rowspan=\"2\">{$productName}</td>\n	<td width=\"25\" rowspan=\"2\"></td>\n	<td width=\"25\" rowspan=\"2\">шт.</td>\n	<td width=\"30\" rowspan=\"2\" style=\"text-align: right\">{$productQuantityInt}</td>\n	<td width=\"30\" rowspan=\"2\">{$productUnits}</td>\n	<td width=\"60\" rowspan=\"2\" style=\"text-align: right\">{$productPrice}</td>\n	<td width=\"60\" rowspan=\"2\" style=\"text-align: right\">{$productNetTotal}</td>\n	<td width=\"70\">{$customsId}</td>\n    </tr>\n    <tr>\n	<td width=\"70\">{$manufCountry}</td>\n    </tr>\n{/table_row}\n\n{summary}\n</table>\n<p></p>\n<table border=\"0\" style=\"font-weight: bold\">\n    <tr>\n	<td width=\"400\" style=\"text-align: right\">Итого:</td>\n	<td width=\"60\" style=\"text-align: right\">{$summaryNetTotal}</td>\n    </tr>\n    <tr>\n	<td width=\"400\" style=\"text-align: right\">Сумма НДС:</td>\n	<td width=\"60\" style=\"text-align: right\">{$summaryTax}</td>\n    </tr>\n</table>\n\n<p>\nВсего наименований {$summaryTotalItems}, на сумму {$summaryGrandTotal} руб.<br/>\n<span style=\"font-weight: bold\">{$summaryGrandTotalLiteral}</span>\n</p>\n\n{/summary}\n\n{ending}\n    <hr size=\"2\">\n    <table border=\"0\">\n    <tr>\n	<td>Отпустил  __________ </td><td>Получил  __________ </td>\n    </tr>\n    </table>\n{/ending}\n\',50,0,\'P\'',
+        'LBL_PDF_INVOICE_BODY'  =>   ',\'Счет\',\'Invoice\',\'{header}\n\n<p style="font-weight: bold; text-decoration: underline">{$orgName}</p>\n\n<p style="font-weight: bold">Адрес: {$orgBillingAddress}, тел.: {$orgPhone}</p>\n\n<div style="font-weight: bold; text-align: center">Образец заполнения платежного поручения</div>\n\n<table border="1" cellpadding="2">\n<tr>\n  <td width="140">ИНН {$orgInn}</td><td width="140">КПП {$orgKpp}</td><td rowspan="2" width="50"><br/><br/>Сч. №</td><td rowspan="2" width="200"><br/><br/>{$orgBankAccount}</td>\n</tr>\n<tr>\n<td colspan="2" width="280"><span style="font-size: 8pt">Получатель</span><br/>{$orgName}</td>\n</tr>\n<tr>\n<td colspan="2" rowspan="2" width="280"><span style="font-size: 8pt">Банк получателя</span><br/>{$orgBankName}</td>\n<td width="50">БИК</td>\n<td rowspan="2" width="200">{$orgBankId}<br/>{$orgCorrAccount}</td>\n</tr>\n<tr>\n<td width="50">Сч. №</td>\n</tr>\n</table>\n<br/>\n<h1 style="text-align: center">СЧЕТ № {$invoice_no} от {$invoice_invoicedate}</h1>\n<br/><br/>\n<table border="0">\n<tr>\n<td width="100">Плательщик:</td><td width="450"><span style="font-weight: bold">{$account_accountname}</span></td>\n</tr>\n<tr>\n<td width="100">Грузополучатель:</td><td width="450"><span style="font-weight: bold">{$account_accountname}</span></td>\n</tr>\n</table>\n\n{/header}\n\n{table_head}\n<table border="1" style="font-size: 8pt" cellpadding="2">\n    <tr style="text-align: center; font-weight: bold">\n	<td width="30">№</td>\n      <td width="260">Наименование<br/>товара</td>\n      <td width="65">Единица<br/>изме-<br/>рения</td>\n      <td width="35">Коли-<br/>чество</td>\n	<td width="70">Цена</td>\n	<td width="70">Сумма</td>\n	</tr>\n{/table_head}\n\n{table_row}\n    <tr>\n	<td width="30">{$productNumber}</td>\n      <td width="260">{$productName} {$productComment}</td>\n	<td width="65" style="text-align: center">{$productUnits}</td>\n	<td width="35" style="text-align: right">{$productQuantity}</td>\n	<td width="70" style="text-align: right">{$productPriceWithTax}</td>\n	<td width="70" style="text-align: right">{$productTotal}</td>\n    </tr>\n{/table_row}\n\n{summary}\n</table>\n<table border="0" style="font-size: 8pt;font-weight: bold">\n    <tr>\n      <td width="460">\n        <table border="0" cellpadding="2">\n          <tr><td width="460" style="text-align: right">Итого:</td></tr>\n          <tr><td width="460" style="text-align: right">В т.ч. НДС:</td></tr>\n          <tr><td width="460" style="text-align: right">Всего к оплате:</td></tr>\n        </table>\n      </td>\n      <td width="70">\n        <table border="1" cellpadding="2">\n          <tr><td width="70" style="text-align: right">{$summaryGrandTotal}</td></tr>\n          <tr><td width="70" style="text-align: right">{$summaryTax}</td></tr>\n          <tr><td width="70" style="text-align: right">{$summaryGrandTotal}</td></tr>\n        </table>\n      </td>\n  </tr>\n</table>\n\n<p>\nВсего наименований {$summaryTotalItems}, на сумму {$summaryGrandTotal} руб.<br/>\n<span style="font-weight: bold">{$summaryGrandTotalLiteral}</span>\n</p>\n\n{/summary}\n\n{ending}\n<br/>\n    <p>Руководитель предприятия  __________________ ( {$orgDirector} ) <br/>\n    <br/>\n    Главный бухгалтер  __________________ ( {$orgBookkeeper} )\n    </p>\n{/ending}\',110,50,\'P\'',
+        'LBL_PDF_WAYBILL_BODY'  =>   ',\'Накладная\',\'SalesOrder\',\'{header}\n<h1 style=\"font-size: 14pt\">Расходная накладная № {$salesorder_no}</h1>\n<hr>\n<table border=\"0\" style=\"font-size: 9pt\">\n<tr>\n<td width=\"80\">Поставщик:</td><td width=\"450\"><span style=\"font-weight: bold\">{$orgName}</span></td>\n</tr>\n<tr>\n<td width=\"80\">Покупатель:</td><td width=\"450\"><span style=\"font-weight: bold\">{$account_accountname}</span></td>\n</tr>\n</table>\n{/header}\n\n{table_head}\n<table border=\"1\" style=\"font-size: 8pt\" cellpadding=\"2\">\n    <tr style=\"text-align: center; font-weight: bold\">\n	<td width=\"30\" rowspan=\"2\">№</td>\n	<td width=\"200\" rowspan=\"2\">Товар</td>\n	<td width=\"50\" rowspan=\"2\" colspan=\"2\">Мест</td>\n	<td width=\"60\" rowspan=\"2\" colspan=\"2\">Количество</td>\n	<td width=\"60\" rowspan=\"2\">Цена</td>\n	<td width=\"60\" rowspan=\"2\">Сумма</td>\n	<td width=\"70\">Номер ГТД</td>\n    </tr>\n    <tr style=\"text-align: center; font-weight: bold\">\n	<td width=\"70\">Страна<br/>происхождения</td>\n    </tr>\n{/table_head}\n\n{table_row}\n    <tr>\n	<td width=\"30\" rowspan=\"2\">{$productNumber}</td>\n	<td width=\"200\" rowspan=\"2\">{$productName}</td>\n	<td width=\"25\" rowspan=\"2\"></td>\n	<td width=\"25\" rowspan=\"2\">шт.</td>\n	<td width=\"30\" rowspan=\"2\" style=\"text-align: right\">{$productQuantity}</td>\n	<td width=\"30\" rowspan=\"2\">{$productUnits}</td>\n	<td width=\"60\" rowspan=\"2\" style=\"text-align: right\">{$productPrice}</td>\n	<td width=\"60\" rowspan=\"2\" style=\"text-align: right\">{$productNetTotal}</td>\n	<td width=\"70\">{$customsId}</td>\n    </tr>\n    <tr>\n	<td width=\"70\">{$manufCountry}</td>\n    </tr>\n{/table_row}\n\n{summary}\n</table>\n<p></p>\n<table border=\"0\" style=\"font-weight: bold\">\n    <tr>\n	<td width=\"400\" style=\"text-align: right\">Итого:</td>\n	<td width=\"60\" style=\"text-align: right\">{$summaryNetTotal}</td>\n    </tr>\n    <tr>\n	<td width=\"400\" style=\"text-align: right\">Сумма НДС:</td>\n	<td width=\"60\" style=\"text-align: right\">{$summaryTax}</td>\n    </tr>\n</table>\n\n<p>\nВсего наименований {$summaryTotalItems}, на сумму {$summaryGrandTotal} руб.<br/>\n<span style=\"font-weight: bold\">{$summaryGrandTotalLiteral}</span>\n</p>\n\n{/summary}\n\n{ending}\n    <hr size=\"2\">\n    <table border=\"0\">\n    <tr>\n	<td>Отпустил  __________ </td><td>Получил  __________ </td>\n    </tr>\n    </table>\n{/ending}\n\',50,0,\'P\'',
         'LBL_PDF_QUOTE_BODY'  =>   ',\'Предложение\',\'Quotes\',\'\n{header}\n\n<p align="right">{$orgLogo}</p>\n<p style=\"font-weight: bold\">\n{$orgName}<br/>\nИНН {$orgInn}<br/>\nКПП {$orgKpp}<br/>\n{$orgBillingAddress}<br/>\nТел.: {$orgPhone}<br/>\nФакс: {$orgFax}<br/>\n{$orgWebsite}\n</p>\n\n<h1>Коммерческое предложение № {$quote_no}</h1>\n<p>Действительно до: {$quote_validtill}</p>\n<hr size=\"2\">\n\n<p style=\"font-weight: bold\">\n{$account_accountname}<br/>\n{$billingAddress}\n</p>\n{/header}\n\n{table_head}\n<table border=\"1\" style=\"font-size: 8pt\" cellpadding=\"2\">\n    <tr style=\"text-align: center; font-weight: bold\">\n	<td width=\"30\">№</td>\n	<td width=\"260\">Товары (работы, услуги)</td>\n	<td width=\"70\">Ед.</td>\n	<td width=\"30\">Кол-во</td>\n	<td width=\"70\">Цена</td>\n	<td width=\"70\">Сумма</td>\n	</tr>\n{/table_head}\n\n{table_row}\n    <tr>\n	<td width=\"30\">{$productNumber}</td>\n	<td width=\"260\">{$productName}</td>\n	<td width=\"70\">{$productUnits}</td>\n	<td width=\"30\" style=\"text-align: right\">{$productQuantity}</td>\n	<td width=\"70\" style=\"text-align: right\">{$productPrice}</td>\n	<td width=\"70\" style=\"text-align: right\">{$productNetTotal}</td>\n    </tr>\n{/table_row}\n\n{summary}\n</table>\n<p></p>\n<table border=\"0\">\n    <tr>\n	<td width=\"460\" style=\"text-align: right\">Итого:</td>\n	<td width=\"70\" style=\"text-align: right\">{$summaryNetTotal}</td>\n    </tr>\n    <tr>\n	<td width=\"460\" style=\"text-align: right\">Сумма НДС:</td>\n	<td width=\"70\" style=\"text-align: right\">{$summaryTax}</td>\n    </tr>\n</table>\n\n<p style=\"font-weight: bold\">\nВсего: {$summaryGrandTotal} руб. ( {$summaryGrandTotalLiteral} )\n</p>\n\n{/summary}\n\n{ending}\n    <hr size=\"2\">\n    <p>Руководитель предприятия  __________ ( {$orgDirector} ) <br/>\n    </p>\n{/ending}\n\',100,0,\'P\'',
-        'LBL_PDF_PURCHASE_ORDER_BODY'  =>   ',\'Заказ на закупку\',\'PurchaseOrder\',\'{header}\n<h1 style=\"font-size: 14pt\">Заказ на закупку № {$purchaseorder_no}</h1>\n<hr>\n<table border=\"0\" style=\"font-size: 9pt\">\n<tr>\n<td width=\"80\">Поставщик:</td><td width=\"450\"><span style=\"font-weight: bold\">{$vendor_vendorname}</span></td>\n</tr>\n<tr>\n<td width=\"80\">Покупатель:</td><td width=\"450\"><span style=\"font-weight: bold\">{$orgName}</span></td>\n</tr>\n</table>\n{/header}\n{table_head}\n<table border=\"1\" style=\"font-size: 8pt\" cellpadding=\"2\">\n<tr style=\"text-align: center; font-weight: bold\">\n<td width=\"30\">№</td>\n<td width=\"200\">Товар</td>\n<td width=\"60\" colspan=\"2\">Количество</td>\n<td width=\"60\">Цена</td>\n<td width=\"60\">Сумма</td>\n</tr>\n{/table_head}\n{table_row}\n<tr>\n<td width=\"30\">{$productNumber}</td>\n<td width=\"200\">{$productName}</td>\n<td width=\"30\" style=\"text-align: right\">{$productQuantityInt}</td>\n<td width=\"30\">{$productUnits}</td>\n<td width=\"60\" style=\"text-align: right\">{$productPrice}</td>\n<td width=\"60\" style=\"text-align: right\">{$productNetTotal}</td>\n</tr>\n{/table_row}\n{summary}\n</table>\n<p></p>\n<table border=\"0\" style=\"font-weight: bold\">\n<tr>\n<td width=\"350\" style=\"text-align: right\">Итого:</td>\n<td width=\"60\" style=\"text-align: right\">{$summaryNetTotal}</td>\n</tr>\n<tr>\n<td width=\"350\" style=\"text-align: right\">Сумма НДС:</td>\n<td width=\"60\" style=\"text-align: right\">{$summaryTax}</td>\n</tr>\n</table>\n<p>\nВсего наименований {$summaryTotalItems}, на сумму {$summaryGrandTotal} руб.<br/>\n<span style=\"font-weight: bold\">{$summaryGrandTotalLiteral}</span>\n</p>\n{/summary}\n{ending}\n{/ending}\',50,0,\'P\'',
+        'LBL_PDF_PURCHASE_ORDER_BODY'  =>   ',\'Заказ на закупку\',\'PurchaseOrder\',\'{header}\n<h1 style=\"font-size: 14pt\">Заказ на закупку № {$purchaseorder_no}</h1>\n<hr>\n<table border=\"0\" style=\"font-size: 9pt\">\n<tr>\n<td width=\"80\">Поставщик:</td><td width=\"450\"><span style=\"font-weight: bold\">{$vendor_vendorname}</span></td>\n</tr>\n<tr>\n<td width=\"80\">Покупатель:</td><td width=\"450\"><span style=\"font-weight: bold\">{$orgName}</span></td>\n</tr>\n</table>\n{/header}\n{table_head}\n<table border=\"1\" style=\"font-size: 8pt\" cellpadding=\"2\">\n<tr style=\"text-align: center; font-weight: bold\">\n<td width=\"30\">№</td>\n<td width=\"200\">Товар</td>\n<td width=\"60\" colspan=\"2\">Количество</td>\n<td width=\"60\">Цена</td>\n<td width=\"60\">Сумма</td>\n</tr>\n{/table_head}\n{table_row}\n<tr>\n<td width=\"30\">{$productNumber}</td>\n<td width=\"200\">{$productName}</td>\n<td width=\"30\" style=\"text-align: right\">{$productQuantity}</td>\n<td width=\"30\">{$productUnits}</td>\n<td width=\"60\" style=\"text-align: right\">{$productPrice}</td>\n<td width=\"60\" style=\"text-align: right\">{$productNetTotal}</td>\n</tr>\n{/table_row}\n{summary}\n</table>\n<p></p>\n<table border=\"0\" style=\"font-weight: bold\">\n<tr>\n<td width=\"350\" style=\"text-align: right\">Итого:</td>\n<td width=\"60\" style=\"text-align: right\">{$summaryNetTotal}</td>\n</tr>\n<tr>\n<td width=\"350\" style=\"text-align: right\">Сумма НДС:</td>\n<td width=\"60\" style=\"text-align: right\">{$summaryTax}</td>\n</tr>\n</table>\n<p>\nВсего наименований {$summaryTotalItems}, на сумму {$summaryGrandTotal} руб.<br/>\n<span style=\"font-weight: bold\">{$summaryGrandTotalLiteral}</span>\n</p>\n{/summary}\n{ending}\n{/ending}\',50,0,\'P\'',
         'LBL_SEND_NOTIFICATION_TO_INVITED_USERS' => 'Отправляет письмо с уведомлением приглашенным пользователям',
         'LBL_EVENT' => 'Событие',
         'LBL_EVENT_DETAILS' => 'Детали события',
diff --git a/languages/ru_ru/Migration.php b/languages/ru_ru/Migration.php
index d48be9a..b132b03 100644
--- a/languages/ru_ru/Migration.php
+++ b/languages/ru_ru/Migration.php
@@ -51,5 +51,8 @@ $languageStrings = array(
     'Finish' => 'Завершить',
     'Vtiger CRM Setup' => 'Миграция',
     'Start Migration' => 'Начать миграцию',
+    'You need grant write access for this files and folders for migration process' => 'На время миграции необходимо выдать права на запись для следующих файлов и каталогов',
+    'Or you can add write permission to all files and folders in system and restore them then migration finished' => 'Либо вы можете дать права на запись на все файлы и каталоги и восстановить права доступа после окончания миграции',
+    'For recheck files and folder permissions, refresh page' => 'Для повторной проверки прав доступа на файлы и каталоги обновите страницу',
     // SalesPlatform.ru end
 );
\ No newline at end of file
diff --git a/languages/ru_ru/Settings/LayoutEditor.php b/languages/ru_ru/Settings/LayoutEditor.php
index da8ab12..cb30615 100644
--- a/languages/ru_ru/Settings/LayoutEditor.php
+++ b/languages/ru_ru/Settings/LayoutEditor.php
@@ -156,8 +156,9 @@ $languageStrings = array(
         //SalesPlatform.ru begin initializing the field with uitype 19 with the CKEditor editor
         'LBL_CKE_FIELD' => 'CKEditor',
         'SPTextArea' => 'Текстовая область',
-        'LBL_SYNC_TOOLTIP_MESSAGE' => 'Предпочтительна последняя запись - самая последняя измененная запись будет сохранена <br/> Предпочтительна внутренняя запись - текущая запись будет сохранена <br/> Предпочтительна внешняя запись - будут сохранены данные из внешнего приложения'
+        'LBL_SYNC_TOOLTIP_MESSAGE' => 'Предпочтительна последняя запись - самая последняя измененная запись будет сохранена <br/> Предпочтительна внутренняя запись - текущая запись будет сохранена <br/> Предпочтительна внешняя запись - будут сохранены данные из внешнего приложения',
         //SalesPlatform.ru end initializing the field with uitype 19 with the CKEditor editor
+        'LBL_SYSTEM_NAME' => 'Системное имя',
     );
 $jsLanguageStrings = array(
 	'JS_BLOCK_VISIBILITY_SHOW'     => 'Отображение блока включено'          , 
@@ -227,4 +228,5 @@ $jsLanguageStrings = array(
         'JS_SPTextArea' => 'Текстовая область',
         'JS_DUPLICATE_CHECK_DISABLED' => 'Проверка дублирования выключена',
         //SalesPlatform.ru end initializing the field with uitype 19 with the CKEditor editor
+        'JS_SYSTEM_NAME' => 'Системное имя',
 );
\ No newline at end of file
diff --git a/languages/ru_ru/Settings/SPTips.php b/languages/ru_ru/Settings/SPTips.php
index dd7b52e..b5cfb06 100644
--- a/languages/ru_ru/Settings/SPTips.php
+++ b/languages/ru_ru/Settings/SPTips.php
@@ -19,10 +19,9 @@ $languageStrings = array(
     'LBL_SELECTED_FIELD' => 'Выбранное поле',
     'LBL_FILL_IN_FIELDS' => 'Заполнить поля',
     'LBL_ADD_PROVIDER' => 'Добавление нового провайдера',
-    'LBL_EDIT_PROVIDER' => 'Редактирование провайдера',
+    'LBL_EDIT_PROVIDER' => 'Редактирование настроек провайдера',
     'LBL_PROVIDER_NAME' => 'Имя провайдера',
     'LBL_API_KEY' => 'API key',
-    'LBL_TOKEN' => 'Токен',
     'LBL_DEPENDEND_FIELD' => 'Зависимое поле',
     'LBL_FILL_IN_FIELD' => 'Заполнить поле',
     'LBL_AVAILABLE_PROVIDERS' => 'Доступные провайдеры',
@@ -34,7 +33,7 @@ $languageStrings = array(
     'LBL_CREATE_RULE' => 'Создать правило',
     'LBL_LIST_RULES' => 'Список правил',
     'LBL_ADD_FIELD' => 'Добавить ещё поле',
-    'LBL_DIFFERENT_RULES_FOR_PROVIDERS' => 'Обратите внимание! Правила создаются для конкретного провайдера.',
+    'LBL_DIFFERENT_RULES_FOR_PROVIDERS' => 'Обратите внимание! Правила создаются для конкретного провайдера, выбранного в списке.',
     'LBL_CREATE_RULE_WITHOUT_PROVIDER' => 'Нужно добавить провайдера в систему и выбрать его до того, как создавать правила!',
     'LBL_INFORMATION' => 'Информация',
     'LBL_RETURN' => 'Вернуться',
@@ -128,7 +127,47 @@ $languageStrings = array(
     'country' => 'Страна',
     'postal_code' => 'Индекс',
     // Google label end
-);
+    
+    
+    'LBL_CRM_FIELD' => 'Поле в CRM',
+    'LBL_PROVIDER_FIELD' => 'Поле провайдера',
+    'api_key' => 'API key',
+    'token' => 'Токен',
+    'LBL_SELECTED_AUTOCFOMPLETE_FIELD' => 'Поле-подсказка',
+    'LBL_AUTOCOMPLETE_MAPPING' => 'Автоматическое заполнение других полей по данным из подсказки',
+    'LBL_ADD_MAPPING' => 'Добавить соответствие',
+    'LBL_TIP_TYPE' => 'Тип подсказки',
+    'address' => 'Адрес',
+    'organization' => 'Организация',
+    
+    /* Dadata search organization */
+    'address.value' => 'Адрес одной строкой',
+    'address.unrestricted_value' => 'Адрес одной строкой (полный, от региона)',
+    'address.data.source' => 'Адрес одной строкой как в ЕГРЮЛ',
+    'branch_count' => 'Количество филиалов',
+    'branch_type' => 'Тип подразделения',
+    'inn' => 'ИНН',
+    'kpp' => 'КПП',
+    'ogrn' => 'ОГРН',
+    'ogrn_date' => 'Дата выдачи ОГРН',
+    'management.name' => 'ФИО руководителя',
+    'management.post' => 'Должность руководителя',
+    'name.full_with_opf' => 'Полное наименование с ОПФ',
+    'name.short_with_opf' => 'Краткое наименование с ОПФ',
+    'name.full' => 'Полное наименование',
+    'name.short' => 'Краткое наименование',
+    'okved' => 'Код ОКВЭД',
+    'okved_type' => 'Версия справочника ОКВЭД (2001 или 2014) для кода ОКВЭД',
+    'opf.code' => 'Код ОКОПФ',
+    'opf.full' => 'Полное название ОПФ',
+    'opf.short' => 'Краткое название ОПФ',
+    'opf.type' => 'Версия справочника ОКВЭД (2001 или 2014) для ОПФ',
+    'state.actuality_date' => 'Дата актуальности сведений',
+    'state.registration_date' => 'Дата регистрации',
+    'state.liquidation_date' => 'Дата ликвидации',
+    'state.status' => 'Статус организации',
+    'type' => 'Тип организации',
+ );
 
 $jsLanguageStrings = array(
     'JS_UNSUCCESSFULL' => 'Ошибка',
diff --git a/languages/ru_ru/Settings/SPVoipIntegration.php b/languages/ru_ru/Settings/SPVoipIntegration.php
index 2dac247..49a9ce4 100644
--- a/languages/ru_ru/Settings/SPVoipIntegration.php
+++ b/languages/ru_ru/Settings/SPVoipIntegration.php
@@ -25,6 +25,7 @@ $languageStrings = array(
     'To number' => 'Номер, на который позвонили',
     'LBL_REGISTER_WEBHOOKS' => 'Зарегистрировать уведомления от Зебра телеком',
     'LBL_SP_VOIP_SETTINGS' => 'Настройки ВАТС',
+    'LBL_USE_CLICK_TO_CALL' => 'Использовать данного провайдера ВАТС при осуществлении click2call',
 );
 $jsLanguageStrings = array(
     'JS_WEBHOOKS_REGISTERED' => 'Уведомления зарегистрированы',
diff --git a/languages/ru_ru/Vtiger.php b/languages/ru_ru/Vtiger.php
index 5967e07..15d9e63 100644
--- a/languages/ru_ru/Vtiger.php
+++ b/languages/ru_ru/Vtiger.php
@@ -486,9 +486,9 @@ $languageStrings = array(
 	'LBL_BASE_CURRENCY'            => 'Базовая валюта',
 	'Discount Percent'             => 'Процент скидки', 
 	'Discount Amount'              => 'Сумма скидки',
-	'Item Discount Amount'         => 'Сумма скидки',
+	'Item Discount Amount'         => 'Сумма скидки на товар',
         //'Item Discount Amount'         => 'Item Discount Amount'        , // TODO: Review
-	'Item Discount Percent'        => 'Процент скидки',
+	'Item Discount Percent'        => 'Процент скидки на товар',
 	'Due Date'                     => 'Срок оплаты'       ,
 	'Due Date & Time'              => 'Due Date & Time'             , // TODO: Review
 	'Email'                        => 'E-mail'                      ,
@@ -2100,13 +2100,17 @@ $jsLanguageStrings = array(
     'JS_WIDGET_RESIZING_WAIT_MSG' => 'Виджет будет загружен после изменения размеров',
     'JS_FOLLOW_RECORD' => 'Подписка успешно оформлена',
     'JS_UNFOLLOW_RECORD' => 'Подписка прекращена',
+    'JS_FOLLOWING' => 'Подписка успешно оформлена',
+    'JS_UNFOLLOWING' => 'Подписка прекращена',
+    'Potentials' => 'Сделки',
     'JS_LIST_DELETE_CONFIRMATION' => 'Вы уверены, что хотите удалить?',
     'JS_DOCUMENT_CREATED' => 'Документ создан',
     'JS_UPLOAD_SUCCESSFUL' => 'Файл успешно добавлен',
     'Import Completed.' => 'Импорт завершен',
     'JS_UPDATED' => 'Обновлено',
     'JS_THIS_FILE_HAS_ALREADY_BEEN_SELECTED' => 'Этот файл уже был выбран',
-    'No Results Found' => 'Не найдено'
+    'No Results Found' => 'Не найдено',
+    'Community' => 'Сообщество'
     //SalesPlatform.ru end
 );
 
diff --git a/layouts/v7/modules/Calendar/QuickCreate.tpl b/layouts/v7/modules/Calendar/QuickCreate.tpl
index 1450c14..8d170f1 100644
--- a/layouts/v7/modules/Calendar/QuickCreate.tpl
+++ b/layouts/v7/modules/Calendar/QuickCreate.tpl
@@ -52,6 +52,11 @@
 					{else}
 						<input type="hidden" name="record" value="">
 					{/if}
+                    
+                    {assign var="PARENT_ID" value=$RECORD_MODEL->get('parent_id')}
+                    {if !empty($PARENT_ID)}
+                        <input type="hidden" name="parent_id" value="{$PARENT_ID}">
+                    {/if}
 
 					{assign var="RECORD_STRUCTURE_MODEL" value=$QUICK_CREATE_CONTENTS[$MODULE]['recordStructureModel']}
 					{assign var="RECORD_STRUCTURE" value=$QUICK_CREATE_CONTENTS[$MODULE]['recordStructure']}
diff --git a/layouts/v7/modules/EmailTemplates/DetailViewActions.tpl b/layouts/v7/modules/EmailTemplates/DetailViewActions.tpl
index 3f2ca9f..e09e81c 100644
--- a/layouts/v7/modules/EmailTemplates/DetailViewActions.tpl
+++ b/layouts/v7/modules/EmailTemplates/DetailViewActions.tpl
@@ -23,6 +23,7 @@
 				</button>
 			{/foreach}
 			{if $DETAILVIEW_LINKS['DETAILVIEW']|@count gt 0}
+                                {*SalesPlatform.ru begin
 				<button class="btn btn-default dropdown-toggle" data-toggle="dropdown" href="javascript:void(0);">
 					{vtranslate('LBL_MORE', $MODULE_NAME)}&nbsp;&nbsp;<i class="caret"></i>
 				</button>
@@ -36,7 +37,24 @@
 							</li>
 						{/if}
 					{/foreach}
-				</ul>
+				</ul>*}
+                                <div class="btn-group">
+                                    <button class="btn btn-default dropdown-toggle" data-toggle="dropdown" href="javascript:void(0);">
+                                            {vtranslate('LBL_MORE', $MODULE_NAME)}&nbsp;&nbsp;<i class="caret"></i>
+                                    </button>
+                                    <ul class="dropdown-menu pull-right">
+                                            {foreach item=DETAIL_VIEW_LINK from=$DETAILVIEW_LINKS['DETAILVIEW']}
+                                                    {if $DETAIL_VIEW_LINK->getLabel() eq ""} 
+                                                            <li class="divider"></li>	
+                                                            {else}
+                                                            <li id="{$MODULE_NAME}_detailView_moreAction_{Vtiger_Util_Helper::replaceSpaceWithUnderScores($DETAIL_VIEW_LINK->getLabel())}">
+                                                                    <a href={$DETAIL_VIEW_LINK->getUrl()} >{vtranslate($DETAIL_VIEW_LINK->getLabel(), $MODULE_NAME)}</a>
+                                                            </li>
+                                                    {/if}
+                                            {/foreach}
+                                    </ul>
+                                </div>
+                                {*SalesPlatform.ru end*}
 			{/if}
 		</div>
 	</div>
diff --git a/layouts/v7/modules/ExtensionStore/Promotions.tpl b/layouts/v7/modules/ExtensionStore/Promotions.tpl
deleted file mode 100644
index 934daca..0000000
--- a/layouts/v7/modules/ExtensionStore/Promotions.tpl
+++ /dev/null
@@ -1,37 +0,0 @@
-{*+**********************************************************************************
-* The contents of this file are subject to the vtiger CRM Public License Version 1.1
-* ("License"); You may not use this file except in compliance with the License
-* The Original Code is: vtiger CRM Open Source
-* The Initial Developer of the Original Code is vtiger.
-* Portions created by vtiger are Copyright (C) vtiger.
-* All Rights Reserved.
-*************************************************************************************}
-
-{strip}
-	{foreach $HEADER_SCRIPTS as $SCRIPT}
-		<script type="{$SCRIPT->getType()}" src="{$SCRIPT->getSrc()}" />
-	{/foreach}
-        {* SalesPlatform begin*}
-	{*<div class="banner-container" style="margin: 0px 10px;">
-		<div class="row"></div>
-		<div class="banner">
-			<ul class="bxslider">
-				{foreach $PROMOTIONS as $PROMOTION}
-					{if is_object($PROMOTION)}
-					<li>
-						{assign var=SUMMARY value=$PROMOTION->get('summary')}
-						{assign var=EXTENSION_NAME value=$PROMOTION->get('label')}
-						{if is_numeric($SUMMARY)}
-							{assign var=LOCATION_URL value=$PROMOTION->getLocationUrl($SUMMARY, $EXTENSION_NAME)}
-						{else}
-							{assign var=LOCATION_URL value={$SUMMARY}}
-						{/if}
-						<a onclick="window.open('{$LOCATION_URL}')"><img src="{if $PROMOTION->get('bannerURL')}{$PROMOTION->get('bannerURL')}{/if}" title="{$PROMOTION->get('label')}" /></a>
-					</li>
-					{/if}
-				{/foreach}
-			</ul>
-		</div>
-	</div>*}
-        {* SalesPlatform end*}
-{/strip}
diff --git a/layouts/v7/modules/Google/ContactSyncSettingsContents.tpl b/layouts/v7/modules/Google/ContactSyncSettingsContents.tpl
index e180d89..96542e3 100644
--- a/layouts/v7/modules/Google/ContactSyncSettingsContents.tpl
+++ b/layouts/v7/modules/Google/ContactSyncSettingsContents.tpl
@@ -133,11 +133,11 @@
                             {assign var="GOOGLE_TYPES" value=$GOOGLE_FIELDS[$FLDNAME]['types']}
                             <select class="select2 google-type" style="width:200px;" data-category="email">
                                 {foreach item=TYPE from=$GOOGLE_TYPES}
-                                    <option value="{$TYPE}" {if $FIELD_MAPPING[{$FLDNAME}]['google_field_type'] eq $TYPE}selected{/if}>{vtranslate('Email',$MODULENAME)} ({vtranslate($TYPE,$MODULENAME)})</option>
+                                    <option value="{$TYPE}" {if $FIELD_MAPPING[{$FLDNAME}]['google_field_type'][0] eq $TYPE}selected{/if}>{vtranslate('Email',$MODULENAME)} ({vtranslate($TYPE,$MODULENAME)})</option>
                                 {/foreach}
                             </select>&nbsp;&nbsp;
-                            <input type="text" class="google-custom-label" style="visibility:{if $FIELD_MAPPING[$FLDNAME]['google_field_type'] neq 'custom'}hidden{else}visible{/if};width:190px;" 
-                                   value="{if $FIELD_MAPPING[$FLDNAME]['google_field_type'] eq 'custom'}{$FIELD_MAPPING[$FLDNAME]['google_custom_label']}{/if}" 
+                            <input type="text" class="google-custom-label" style="visibility:{if $FIELD_MAPPING[$FLDNAME]['google_field_type'][0] neq 'custom'}hidden{else}visible{/if};width:190px;" 
+                                   value="{if $FIELD_MAPPING[$FLDNAME]['google_field_type'][0] eq 'custom'}{$FIELD_MAPPING[$FLDNAME]['google_custom_label']}{/if}" 
                                    data-validation-engine="validate[required,funcCall[Vtiger_Base_Validator_Js.invokeValidation]]" />
                         </td>
                     </tr>
@@ -152,11 +152,11 @@
                             {assign var=GOOGLE_TYPES value=$GOOGLE_FIELDS['email']['types']}
                             <select class="select2 google-type" style="width:200px;" data-category="email">
                                 {foreach item=TYPE from=$GOOGLE_TYPES}
-                                    <option value="{$TYPE}" {if $FIELD_MAPPING['secondaryemail']['google_field_type'] eq $TYPE}selected{/if}>{vtranslate('Email',$MODULENAME)} ({vtranslate($TYPE,$MODULENAME)})</option>
+                                    <option value="{$TYPE}" {if $FIELD_MAPPING['secondaryemail']['google_field_type'][0] eq $TYPE}selected{/if}>{vtranslate('Email',$MODULENAME)} ({vtranslate($TYPE,$MODULENAME)})</option>
                                 {/foreach}
                             </select>&nbsp;&nbsp;
-                            <input type="text" class="google-custom-label" style="visibility:{if $FIELD_MAPPING[$FLDNAME]['google_field_type'] neq 'custom'}hidden{else}visible{/if};width:190px;" 
-                                   value="{if $FIELD_MAPPING[$FLDNAME]['google_field_type'] eq 'custom'}{$FIELD_MAPPING[$FLDNAME]['google_custom_label']}{/if}" 
+                            <input type="text" class="google-custom-label" style="visibility:{if $FIELD_MAPPING[$FLDNAME]['google_field_type'][0] neq 'custom'}hidden{else}visible{/if};width:190px;" 
+                                   value="{if $FIELD_MAPPING[$FLDNAME]['google_field_type'][0] eq 'custom'}{$FIELD_MAPPING[$FLDNAME]['google_custom_label']}{/if}" 
                                    data-validation-engine="validate[required,funcCall[Vtiger_Base_Validator_Js.invokeValidation]]"/>
                         </td>
                     </tr>
@@ -171,11 +171,11 @@
                             {assign var=GOOGLE_TYPES value=$GOOGLE_FIELDS['phone']['types']}
                             <select class="select2 stretched google-type" style="width:200px;" data-category="phone">
                                 {foreach item=TYPE from=$GOOGLE_TYPES}
-                                    <option value="{$TYPE}" {if $FIELD_MAPPING[$FLDNAME]['google_field_type'] eq $TYPE}selected{/if}>{vtranslate('Phone',$MODULENAME)} ({vtranslate($TYPE,$MODULENAME)})</option>
+                                    <option value="{$TYPE}" {if $FIELD_MAPPING[$FLDNAME]['google_field_type'][0] eq $TYPE}selected{/if}>{vtranslate('Phone',$MODULENAME)} ({vtranslate($TYPE,$MODULENAME)})</option>
                                 {/foreach}
                             </select>&nbsp;&nbsp;
-                            <input type="text" class="google-custom-label" style="visibility:{if $FIELD_MAPPING[$FLDNAME]['google_field_type'] neq 'custom'}hidden{else}visible{/if};width:190px;" 
-                                   value="{if $FIELD_MAPPING[$FLDNAME]['google_field_type'] eq 'custom'}{$FIELD_MAPPING[$FLDNAME]['google_custom_label']}{/if}" 
+                            <input type="text" class="google-custom-label" style="visibility:{if $FIELD_MAPPING[$FLDNAME]['google_field_type'][0] neq 'custom'}hidden{else}visible{/if};width:190px;" 
+                                   value="{if $FIELD_MAPPING[$FLDNAME]['google_field_type'][0] eq 'custom'}{$FIELD_MAPPING[$FLDNAME]['google_custom_label']}{/if}" 
                                    data-validation-engine="validate[required,funcCall[Vtiger_Base_Validator_Js.invokeValidation]]"/>
                         </td>
                     </tr>
@@ -190,11 +190,11 @@
                             {assign var=GOOGLE_TYPES value=$GOOGLE_FIELDS['phone']['types']}
                             <select class="select2 stretched google-type" style="width:200px;" data-category="phone">
                                 {foreach item=TYPE from=$GOOGLE_TYPES}
-                                    <option value="{$TYPE}" {if $FIELD_MAPPING[$FLDNAME]['google_field_type'] eq $TYPE}selected{/if}>{vtranslate('Phone',$MODULENAME)} ({vtranslate($TYPE,$MODULENAME)})</option>
+                                    <option value="{$TYPE}" {if $FIELD_MAPPING[$FLDNAME]['google_field_type'][0] eq $TYPE}selected{/if}>{vtranslate('Phone',$MODULENAME)} ({vtranslate($TYPE,$MODULENAME)})</option>
                                 {/foreach}
                             </select>&nbsp;&nbsp;
-                            <input type="text" class="google-custom-label" style="visibility:{if $FIELD_MAPPING[$FLDNAME]['google_field_type'] neq 'custom'}hidden{else}visible{/if};width:190px;" 
-                                   value="{if $FIELD_MAPPING[$FLDNAME]['google_field_type'] eq 'custom'}{$FIELD_MAPPING[$FLDNAME]['google_custom_label']}{/if}"
+                            <input type="text" class="google-custom-label" style="visibility:{if $FIELD_MAPPING[$FLDNAME]['google_field_type'][0] neq 'custom'}hidden{else}visible{/if};width:190px;" 
+                                   value="{if $FIELD_MAPPING[$FLDNAME]['google_field_type'][0] eq 'custom'}{$FIELD_MAPPING[$FLDNAME]['google_custom_label']}{/if}"
                                    data-validation-engine="validate[required,funcCall[Vtiger_Base_Validator_Js.invokeValidation]]"/>
                         </td>
                     </tr>
@@ -209,11 +209,11 @@
                             {assign var=GOOGLE_TYPES value=$GOOGLE_FIELDS['phone']['types']}
                             <select class="select2 stretched google-type" style="width:200px;" data-category="phone">
                                 {foreach item=TYPE from=$GOOGLE_TYPES}
-                                    <option value="{$TYPE}" {if $FIELD_MAPPING[$FLDNAME]['google_field_type'] eq $TYPE}selected{/if}>{vtranslate('Phone',$MODULENAME)} ({vtranslate($TYPE,$MODULENAME)})</option>
+                                    <option value="{$TYPE}" {if $FIELD_MAPPING[$FLDNAME]['google_field_type'][0] eq $TYPE}selected{/if}>{vtranslate('Phone',$MODULENAME)} ({vtranslate($TYPE,$MODULENAME)})</option>
                                 {/foreach}
                             </select>&nbsp;&nbsp;
-                            <input type="text" class="google-custom-label" style="visibility:{if $FIELD_MAPPING[$FLDNAME]['google_field_type'] neq 'custom'}hidden{else}visible{/if};width:190px;" 
-                                   value="{if $FIELD_MAPPING[$FLDNAME]['google_field_type'] eq 'custom'}{$FIELD_MAPPING[$FLDNAME]['google_custom_label']}{/if}" 
+                            <input type="text" class="google-custom-label" style="visibility:{if $FIELD_MAPPING[$FLDNAME]['google_field_type'][0] neq 'custom'}hidden{else}visible{/if};width:190px;" 
+                                   value="{if $FIELD_MAPPING[$FLDNAME]['google_field_type'][0] eq 'custom'}{$FIELD_MAPPING[$FLDNAME]['google_custom_label']}{/if}" 
                                    data-validation-engine="validate[required,funcCall[Vtiger_Base_Validator_Js.invokeValidation]]"/>
                         </td>
                     </tr>
@@ -228,11 +228,11 @@
                             {assign var=GOOGLE_TYPES value=$GOOGLE_FIELDS['address']['types']}
                             <select class="select2 stretched google-type" style="width:200px;" data-category="address">
                                 {foreach item=TYPE from=$GOOGLE_TYPES}
-                                    <option value="{$TYPE}" {if $FIELD_MAPPING[$FLDNAME]['google_field_type'] eq $TYPE}selected{/if}>{vtranslate('Address',$MODULENAME)} ({vtranslate($TYPE,$MODULENAME)})</option>
+                                    <option value="{$TYPE}" {if $FIELD_MAPPING[$FLDNAME]['google_field_type'][0] eq $TYPE}selected{/if}>{vtranslate('Address',$MODULENAME)} ({vtranslate($TYPE,$MODULENAME)})</option>
                                 {/foreach}
                             </select>&nbsp;&nbsp;
-                            <input type="text" class="google-custom-label" style="visibility:{if $FIELD_MAPPING[$FLDNAME]['google_field_type'] neq 'custom'}hidden{else}visible{/if};width:190px;" 
-                                   value="{if $FIELD_MAPPING[$FLDNAME]['google_field_type'] eq 'custom'}{$FIELD_MAPPING[$FLDNAME]['google_custom_label']}{/if}" 
+                            <input type="text" class="google-custom-label" style="visibility:{if $FIELD_MAPPING[$FLDNAME]['google_field_type'][0] neq 'custom'}hidden{else}visible{/if};width:190px;" 
+                                   value="{if $FIELD_MAPPING[$FLDNAME]['google_field_type'][0] eq 'custom'}{$FIELD_MAPPING[$FLDNAME]['google_custom_label']}{/if}" 
                                    data-validation-engine="validate[required,funcCall[Vtiger_Base_Validator_Js.invokeValidation]]"/>
                         </td>
                     </tr>
@@ -247,11 +247,11 @@
                             {assign var=GOOGLE_TYPES value=$GOOGLE_FIELDS['address']['types']}
                             <select class="select2 stretched google-type" style="width:200px;" data-category="address">
                                 {foreach item=TYPE from=$GOOGLE_TYPES}
-                                    <option value="{$TYPE}" {if $FIELD_MAPPING[$FLDNAME]['google_field_type'] eq $TYPE}selected{/if}>{vtranslate('Address',$MODULENAME)} ({vtranslate($TYPE,$MODULENAME)})</option>
+                                    <option value="{$TYPE}" {if $FIELD_MAPPING[$FLDNAME]['google_field_type'][0] eq $TYPE}selected{/if}>{vtranslate('Address',$MODULENAME)} ({vtranslate($TYPE,$MODULENAME)})</option>
                                 {/foreach}
                             </select>&nbsp;&nbsp;
-                            <input type="text" class="google-custom-label" style="visibility:{if $FIELD_MAPPING[$FLDNAME]['google_field_type'] neq 'custom'}hidden{else}visible{/if};width:190px;" 
-                                   value="{if $FIELD_MAPPING[$FLDNAME]['google_field_type'] eq 'custom'}{$FIELD_MAPPING[$FLDNAME]['google_custom_label']}{/if}" 
+                            <input type="text" class="google-custom-label" style="visibility:{if $FIELD_MAPPING[$FLDNAME]['google_field_type'][0] neq 'custom'}hidden{else}visible{/if};width:190px;" 
+                                   value="{if $FIELD_MAPPING[$FLDNAME]['google_field_type'][0] eq 'custom'}{$FIELD_MAPPING[$FLDNAME]['google_custom_label']}{/if}" 
                                    data-validation-engine="validate[required,funcCall[Vtiger_Base_Validator_Js.invokeValidation]]"/>
                         </td>
                     </tr>
@@ -301,20 +301,20 @@
                                     {assign var=GOOGLE_TYPES value=$GOOGLE_FIELDS['email']['types']}
                                     <select class="select2 google-type" style="width:200px;" data-category="email">
                                         {foreach item=TYPE from=$GOOGLE_TYPES}
-                                            <option value="{$TYPE}" {if $CUSTOM_FIELD_MAP['google_field_type'] eq $TYPE}selected{/if}>{vtranslate('Email',$MODULENAME)} ({vtranslate($TYPE,$MODULENAME)})</option>
+                                            <option value="{$TYPE}" {if $CUSTOM_FIELD_MAP['google_field_type'][0] eq $TYPE}selected{/if}>{vtranslate('Email',$MODULENAME)} ({vtranslate($TYPE,$MODULENAME)})</option>
                                         {/foreach}
                                     </select>&nbsp;&nbsp;
-                                    <input type="text" class="google-custom-label" style="visibility:{if $CUSTOM_FIELD_MAP['google_field_type'] neq 'custom'}hidden{else}visible{/if};width:190px;" 
-                                           value="{if $CUSTOM_FIELD_MAP['google_field_type'] eq 'custom'}{$CUSTOM_FIELD_MAP['google_custom_label']}{/if}" data-validation-engine="validate[required,funcCall[Vtiger_Base_Validator_Js.invokeValidation]]"/>
+                                    <input type="text" class="google-custom-label" style="visibility:{if $CUSTOM_FIELD_MAP['google_field_type'][0] neq 'custom'}hidden{else}visible{/if};width:190px;" 
+                                           value="{if $CUSTOM_FIELD_MAP['google_field_type'][0] eq 'custom'}{$CUSTOM_FIELD_MAP['google_custom_label']}{/if}" data-validation-engine="validate[required,funcCall[Vtiger_Base_Validator_Js.invokeValidation]]"/>
                                 {else if $CUSTOM_FIELD_MAP['google_field_name'] eq 'gd:phoneNumber'}
                                     {assign var=GOOGLE_TYPES value=$GOOGLE_FIELDS['phone']['types']}
                                     <select class="select2 google-type" style="width:200px;" data-category="phone">
                                         {foreach item=TYPE from=$GOOGLE_TYPES}
-                                            <option value="{$TYPE}" {if $CUSTOM_FIELD_MAP['google_field_type'] eq $TYPE}selected{/if}>{vtranslate('Phone',$MODULENAME)} ({vtranslate($TYPE,$MODULENAME)})</option>
+                                            <option value="{$TYPE}" {if $CUSTOM_FIELD_MAP['google_field_type'][0] eq $TYPE}selected{/if}>{vtranslate('Phone',$MODULENAME)} ({vtranslate($TYPE,$MODULENAME)})</option>
                                         {/foreach}
                                     </select>&nbsp;&nbsp;
-                                    <input type="text" class="google-custom-label" style="visibility:{if $CUSTOM_FIELD_MAP['google_field_type'] neq 'custom'}hidden{else}visible{/if};width:190px;" 
-                                           value="{if $CUSTOM_FIELD_MAP['google_field_type'] eq 'custom'}{$CUSTOM_FIELD_MAP['google_custom_label']}{/if}" data-validation-engine="validate[required,funcCall[Vtiger_Base_Validator_Js.invokeValidation]]"/>
+                                    <input type="text" class="google-custom-label" style="visibility:{if $CUSTOM_FIELD_MAP['google_field_type'][0] neq 'custom'}hidden{else}visible{/if};width:190px;" 
+                                           value="{if $CUSTOM_FIELD_MAP['google_field_type'][0] eq 'custom'}{$CUSTOM_FIELD_MAP['google_custom_label']}{/if}" data-validation-engine="validate[required,funcCall[Vtiger_Base_Validator_Js.invokeValidation]]"/>
                                 {else if $CUSTOM_FIELD_MAP['google_field_name'] eq 'gContact:userDefinedField'}
                                     <input type="hidden" class="google-type" value="{$CUSTOM_FIELD_MAP['google_field_type']}">
                                     <input type="text" class="google-custom-label" value="{$CUSTOM_FIELD_MAP['google_custom_label']}" style="width:190px;" data-validation-engine="validate[required,funcCall[Vtiger_Base_Validator_Js.invokeValidation]]"/>
@@ -322,11 +322,11 @@
                                     {assign var=GOOGLE_TYPES value=$GOOGLE_FIELDS['url']['types']}
                                     <select class="select2 google-type" style="width:200px;" data-category="url">
                                         {foreach item=TYPE from=$GOOGLE_TYPES}
-                                            <option value="{$TYPE}" {if $CUSTOM_FIELD_MAP['google_field_type'] eq $TYPE}selected{/if}>{vtranslate('URL',$MODULENAME)} ({vtranslate($TYPE,$MODULENAME)})</option>
+                                            <option value="{$TYPE}" {if $CUSTOM_FIELD_MAP['google_field_type'][0] eq $TYPE}selected{/if}>{vtranslate('URL',$MODULENAME)} ({vtranslate($TYPE,$MODULENAME)})</option>
                                         {/foreach}
                                     </select>&nbsp;&nbsp;
-                                    <input type="text" class="google-custom-label" style="visibility:{if $CUSTOM_FIELD_MAP['google_field_type'] neq 'custom'}hidden{else}visible{/if};width:190px;" 
-                                           value="{if $CUSTOM_FIELD_MAP['google_field_type'] eq 'custom'}{$CUSTOM_FIELD_MAP['google_custom_label']}{/if}" data-validation-engine="validate[required,funcCall[Vtiger_Base_Validator_Js.invokeValidation]]"/>
+                                    <input type="text" class="google-custom-label" style="visibility:{if $CUSTOM_FIELD_MAP['google_field_type'][0] neq 'custom'}hidden{else}visible{/if};width:190px;" 
+                                           value="{if $CUSTOM_FIELD_MAP['google_field_type'][0] eq 'custom'}{$CUSTOM_FIELD_MAP['google_custom_label']}{/if}" data-validation-engine="validate[required,funcCall[Vtiger_Base_Validator_Js.invokeValidation]]"/>
                                 {/if}
                                 <a class="deleteCustomMapping pull-right"><i title="Delete" class="icon-trash"></i></a>
                             </td>
diff --git a/layouts/v7/modules/Google/ContactsSyncSettings.tpl b/layouts/v7/modules/Google/ContactsSyncSettings.tpl
index f069c4a..aadc7fb 100644
--- a/layouts/v7/modules/Google/ContactsSyncSettings.tpl
+++ b/layouts/v7/modules/Google/ContactsSyncSettings.tpl
@@ -123,11 +123,11 @@
                                     {assign var="GOOGLE_TYPES" value=$GOOGLE_FIELDS[$FLDNAME]['types']}
                                     <select class="select2 google-type col-sm-5" data-category="email">
                                         {foreach item=TYPE from=$GOOGLE_TYPES}
-                                            <option value="{$TYPE}" {if $FIELD_MAPPING[{$FLDNAME}]['google_field_type'] eq $TYPE}selected{/if}>{vtranslate('Email',$MODULENAME)} ({vtranslate($TYPE,$MODULENAME)})</option>
+                                            <option value="{$TYPE}" {if $FIELD_MAPPING[$FLDNAME]['google_field_type'][0] eq $TYPE}selected{/if}>{vtranslate('Email',$MODULENAME)} ({vtranslate($TYPE,$MODULENAME)})</option>
                                         {/foreach}
                                     </select>&nbsp;&nbsp;
-                                    <input type="text" class="google-custom-label inputElement" style="visibility:{if $FIELD_MAPPING[$FLDNAME]['google_field_type'] neq 'custom'}hidden{else}visible{/if};width:40%;" 
-                                           value="{if $FIELD_MAPPING[$FLDNAME]['google_field_type'] eq 'custom'}{$FIELD_MAPPING[$FLDNAME]['google_custom_label']}{/if}" 
+                                    <input type="text" class="google-custom-label inputElement" style="visibility:{if $FIELD_MAPPING[$FLDNAME]['google_field_type'][0]  neq 'custom'}hidden{else}visible{/if};width:40%;" 
+                                           value="{if $FIELD_MAPPING[$FLDNAME]['google_field_type'][0]  eq 'custom'}{$FIELD_MAPPING[$FLDNAME]['google_custom_label']}{/if}" 
                                            data-rule-required="true" />
                                 </td>
                             </tr>
@@ -142,11 +142,11 @@
                                     {assign var=GOOGLE_TYPES value=$GOOGLE_FIELDS['email']['types']}
                                     <select class="select2 google-type col-sm-5" data-category="email">
                                         {foreach item=TYPE from=$GOOGLE_TYPES}
-                                            <option value="{$TYPE}" {if $FIELD_MAPPING['secondaryemail']['google_field_type'] eq $TYPE}selected{/if}>{vtranslate('Email',$MODULENAME)} ({vtranslate($TYPE,$MODULENAME)})</option>
+                                            <option value="{$TYPE}" {if $FIELD_MAPPING[$FLDNAME]['google_field_type'][0] eq $TYPE}selected{/if}>{vtranslate('Email',$MODULENAME)} ({vtranslate($TYPE,$MODULENAME)})</option>
                                         {/foreach}
                                     </select>&nbsp;&nbsp;
-                                    <input type="text" class="google-custom-label inputElement" style="visibility:{if $FIELD_MAPPING[$FLDNAME]['google_field_type'] neq 'custom'}hidden{else}visible{/if};width:40%;" 
-                                           value="{if $FIELD_MAPPING[$FLDNAME]['google_field_type'] eq 'custom'}{$FIELD_MAPPING[$FLDNAME]['google_custom_label']}{/if}" 
+                                    <input type="text" class="google-custom-label inputElement" style="visibility:{if $FIELD_MAPPING[$FLDNAME]['google_field_type'][0]  neq 'custom'}hidden{else}visible{/if};width:40%;" 
+                                           value="{if $FIELD_MAPPING[$FLDNAME]['google_field_type'][0]  eq 'custom'}{$FIELD_MAPPING[$FLDNAME]['google_custom_label']}{/if}" 
                                            data-rule-required="true"/>
                                 </td>
                             </tr>
@@ -161,11 +161,11 @@
                                     {assign var=GOOGLE_TYPES value=$GOOGLE_FIELDS['phone']['types']}
                                     <select class="select2 stretched google-type col-sm-5" data-category="phone">
                                         {foreach item=TYPE from=$GOOGLE_TYPES}
-                                            <option value="{$TYPE}" {if $FIELD_MAPPING[$FLDNAME]['google_field_type'] eq $TYPE}selected{/if}>{vtranslate('Phone',$MODULENAME)} ({vtranslate($TYPE,$MODULENAME)})</option>
+                                            <option value="{$TYPE}" {if $FIELD_MAPPING[$FLDNAME]['google_field_type'][0] eq $TYPE}selected{/if}>{vtranslate('Phone',$MODULENAME)} ({vtranslate($TYPE,$MODULENAME)})</option>
                                         {/foreach}
                                     </select>&nbsp;&nbsp;
-                                    <input type="text" class="google-custom-label inputElement" style="visibility:{if $FIELD_MAPPING[$FLDNAME]['google_field_type'] neq 'custom'}hidden{else}visible{/if};width:40%;" 
-                                           value="{if $FIELD_MAPPING[$FLDNAME]['google_field_type'] eq 'custom'}{$FIELD_MAPPING[$FLDNAME]['google_custom_label']}{/if}" 
+                                    <input type="text" class="google-custom-label inputElement" style="visibility:{if $FIELD_MAPPING[$FLDNAME]['google_field_type'][0]  neq 'custom'}hidden{else}visible{/if};width:40%;" 
+                                           value="{if $FIELD_MAPPING[$FLDNAME]['google_field_type'][0]  eq 'custom'}{$FIELD_MAPPING[$FLDNAME]['google_custom_label']}{/if}" 
                                            data-rule-required="true"/>
                                 </td>
                             </tr>
@@ -180,11 +180,11 @@
                                     {assign var=GOOGLE_TYPES value=$GOOGLE_FIELDS['phone']['types']}
                                     <select class="select2 stretched google-type col-sm-5" data-category="phone">
                                         {foreach item=TYPE from=$GOOGLE_TYPES}
-                                            <option value="{$TYPE}" {if $FIELD_MAPPING[$FLDNAME]['google_field_type'] eq $TYPE}selected{/if}>{vtranslate('Phone',$MODULENAME)} ({vtranslate($TYPE,$MODULENAME)})</option>
+                                            <option value="{$TYPE}" {if $FIELD_MAPPING[$FLDNAME]['google_field_type'][0] eq $TYPE}selected{/if}>{vtranslate('Phone',$MODULENAME)} ({vtranslate($TYPE,$MODULENAME)})</option>
                                         {/foreach}
                                     </select>&nbsp;&nbsp;
-                                    <input type="text" class="google-custom-label inputElement" style="visibility:{if $FIELD_MAPPING[$FLDNAME]['google_field_type'] neq 'custom'}hidden{else}visible{/if};width:40%;" 
-                                           value="{if $FIELD_MAPPING[$FLDNAME]['google_field_type'] eq 'custom'}{$FIELD_MAPPING[$FLDNAME]['google_custom_label']}{/if}"
+                                    <input type="text" class="google-custom-label inputElement" style="visibility:{if $FIELD_MAPPING[$FLDNAME]['google_field_type'][0]  neq 'custom'}hidden{else}visible{/if};width:40%;" 
+                                           value="{if $FIELD_MAPPING[$FLDNAME]['google_field_type'][0]  eq 'custom'}{$FIELD_MAPPING[$FLDNAME]['google_custom_label']}{/if}"
                                            data-rule-required="true"/>
                                 </td>
                             </tr>
@@ -199,11 +199,11 @@
                                     {assign var=GOOGLE_TYPES value=$GOOGLE_FIELDS['phone']['types']}
                                     <select class="select2 stretched google-type col-sm-5" data-category="phone">
                                         {foreach item=TYPE from=$GOOGLE_TYPES}
-                                            <option value="{$TYPE}" {if $FIELD_MAPPING[$FLDNAME]['google_field_type'] eq $TYPE}selected{/if}>{vtranslate('Phone',$MODULENAME)} ({vtranslate($TYPE,$MODULENAME)})</option>
+                                            <option value="{$TYPE}" {if $FIELD_MAPPING[$FLDNAME]['google_field_type'][0] eq $TYPE}selected{/if}>{vtranslate('Phone',$MODULENAME)} ({vtranslate($TYPE,$MODULENAME)})</option>
                                         {/foreach}
                                     </select>&nbsp;&nbsp;
-                                    <input type="text" class="google-custom-label inputElement" style="visibility:{if $FIELD_MAPPING[$FLDNAME]['google_field_type'] neq 'custom'}hidden{else}visible{/if};width:40%;" 
-                                           value="{if $FIELD_MAPPING[$FLDNAME]['google_field_type'] eq 'custom'}{$FIELD_MAPPING[$FLDNAME]['google_custom_label']}{/if}" 
+                                    <input type="text" class="google-custom-label inputElement" style="visibility:{if $FIELD_MAPPING[$FLDNAME]['google_field_type'][0]  neq 'custom'}hidden{else}visible{/if};width:40%;" 
+                                           value="{if $FIELD_MAPPING[$FLDNAME]['google_field_type'][0]  eq 'custom'}{$FIELD_MAPPING[$FLDNAME]['google_custom_label']}{/if}" 
                                            data-rule-required="true"/>
                                 </td>
                             </tr>
@@ -218,11 +218,11 @@
                                     {assign var=GOOGLE_TYPES value=$GOOGLE_FIELDS['address']['types']}
                                     <select class="select2 stretched google-type col-sm-5" data-category="address">
                                         {foreach item=TYPE from=$GOOGLE_TYPES}
-                                            <option value="{$TYPE}" {if $FIELD_MAPPING[$FLDNAME]['google_field_type'] eq $TYPE}selected{/if}>{vtranslate('Address',$MODULENAME)} ({vtranslate($TYPE,$MODULENAME)})</option>
+                                            <option value="{$TYPE}" {if $FIELD_MAPPING[$FLDNAME]['google_field_type'][0] eq $TYPE}selected{/if}>{vtranslate('Address',$MODULENAME)} ({vtranslate($TYPE,$MODULENAME)})</option>
                                         {/foreach}
                                     </select>&nbsp;&nbsp;
-                                    <input type="text" class="google-custom-label inputElement" style="visibility:{if $FIELD_MAPPING[$FLDNAME]['google_field_type'] neq 'custom'}hidden{else}visible{/if};width:40%;" 
-                                           value="{if $FIELD_MAPPING[$FLDNAME]['google_field_type'] eq 'custom'}{$FIELD_MAPPING[$FLDNAME]['google_custom_label']}{/if}" 
+                                    <input type="text" class="google-custom-label inputElement" style="visibility:{if $FIELD_MAPPING[$FLDNAME]['google_field_type'][0]  neq 'custom'}hidden{else}visible{/if};width:40%;" 
+                                           value="{if $FIELD_MAPPING[$FLDNAME]['google_field_type'][0]  eq 'custom'}{$FIELD_MAPPING[$FLDNAME]['google_custom_label']}{/if}" 
                                            data-rule-required="true"/>
                                 </td>
                             </tr>
@@ -237,11 +237,11 @@
                                     {assign var=GOOGLE_TYPES value=$GOOGLE_FIELDS['address']['types']}
                                     <select class="select2 stretched google-type col-sm-5" data-category="address">
                                         {foreach item=TYPE from=$GOOGLE_TYPES}
-                                            <option value="{$TYPE}" {if $FIELD_MAPPING[$FLDNAME]['google_field_type'] eq $TYPE}selected{/if}>{vtranslate('Address',$MODULENAME)} ({vtranslate($TYPE,$MODULENAME)})</option>
+                                            <option value="{$TYPE}" {if $FIELD_MAPPING[$FLDNAME]['google_field_type'][0] eq $TYPE}selected{/if}>{vtranslate('Address',$MODULENAME)} ({vtranslate($TYPE,$MODULENAME)})</option>
                                         {/foreach}
                                     </select>&nbsp;&nbsp;
-                                    <input type="text" class="google-custom-label inputElement" style="visibility:{if $FIELD_MAPPING[$FLDNAME]['google_field_type'] neq 'custom'}hidden{else}visible{/if};width:40%;" 
-                                           value="{if $FIELD_MAPPING[$FLDNAME]['google_field_type'] eq 'custom'}{$FIELD_MAPPING[$FLDNAME]['google_custom_label']}{/if}" 
+                                    <input type="text" class="google-custom-label inputElement" style="visibility:{if $FIELD_MAPPING[$FLDNAME]['google_field_type'][0]  neq 'custom'}hidden{else}visible{/if};width:40%;" 
+                                           value="{if $FIELD_MAPPING[$FLDNAME]['google_field_type'][0]  eq 'custom'}{$FIELD_MAPPING[$FLDNAME]['google_custom_label']}{/if}" 
                                            data-rule-required="true"/>
                                 </td>
                             </tr>
@@ -291,32 +291,32 @@
                                             {assign var=GOOGLE_TYPES value=$GOOGLE_FIELDS['email']['types']}
                                             <select class="select2 google-type col-sm-5" data-category="email">
                                                 {foreach item=TYPE from=$GOOGLE_TYPES}
-                                                    <option value="{$TYPE}" {if $CUSTOM_FIELD_MAP['google_field_type'] eq $TYPE}selected{/if}>{vtranslate('Email',$MODULENAME)} ({vtranslate($TYPE,$MODULENAME)})</option>
+                                                    <option value="{$TYPE}" {if $CUSTOM_FIELD_MAP['google_field_type'][0]  eq $TYPE}selected{/if}>{vtranslate('Email',$MODULENAME)} ({vtranslate($TYPE,$MODULENAME)})</option>
                                                 {/foreach}
                                             </select>&nbsp;&nbsp;
-                                            <input type="text" class="google-custom-label inputElement" style="visibility:{if $CUSTOM_FIELD_MAP['google_field_type'] neq 'custom'}hidden{else}visible{/if};width:40%;" 
-                                                   value="{if $CUSTOM_FIELD_MAP['google_field_type'] eq 'custom'}{$CUSTOM_FIELD_MAP['google_custom_label']}{/if}" data-rule-required="true"/>
+                                            <input type="text" class="google-custom-label inputElement" style="visibility:{if $CUSTOM_FIELD_MAP['google_field_type'][0]  neq 'custom'}hidden{else}visible{/if};width:40%;" 
+                                                   value="{if $CUSTOM_FIELD_MAP['google_field_type'][0]  eq 'custom'}{$CUSTOM_FIELD_MAP['google_custom_label']}{/if}" data-rule-required="true"/>
                                         {else if $CUSTOM_FIELD_MAP['google_field_name'] eq 'gd:phoneNumber'}
                                             {assign var=GOOGLE_TYPES value=$GOOGLE_FIELDS['phone']['types']}
                                             <select class="select2 google-type col-sm-5" data-category="phone">
                                                 {foreach item=TYPE from=$GOOGLE_TYPES}
-                                                    <option value="{$TYPE}" {if $CUSTOM_FIELD_MAP['google_field_type'] eq $TYPE}selected{/if}>{vtranslate('Phone',$MODULENAME)} ({vtranslate($TYPE,$MODULENAME)})</option>
+                                                    <option value="{$TYPE}" {if $CUSTOM_FIELD_MAP['google_field_type'][0]  eq $TYPE}selected{/if}>{vtranslate('Phone',$MODULENAME)} ({vtranslate($TYPE,$MODULENAME)})</option>
                                                 {/foreach}
                                             </select>&nbsp;&nbsp;
-                                            <input type="text" class="google-custom-label inputElement" style="visibility:{if $CUSTOM_FIELD_MAP['google_field_type'] neq 'custom'}hidden{else}visible{/if};width:40%;" 
-                                                   value="{if $CUSTOM_FIELD_MAP['google_field_type'] eq 'custom'}{$CUSTOM_FIELD_MAP['google_custom_label']}{/if}" data-rule-required="true"/>
+                                            <input type="text" class="google-custom-label inputElement" style="visibility:{if $CUSTOM_FIELD_MAP['google_field_type'][0]  neq 'custom'}hidden{else}visible{/if};width:40%;" 
+                                                   value="{if $CUSTOM_FIELD_MAP['google_field_type'][0]  eq 'custom'}{$CUSTOM_FIELD_MAP['google_custom_label']}{/if}" data-rule-required="true"/>
                                         {else if $CUSTOM_FIELD_MAP['google_field_name'] eq 'gContact:userDefinedField'}
-                                            <input type="hidden" class="google-type" value="{$CUSTOM_FIELD_MAP['google_field_type']}">
+                                            <input type="hidden" class="google-type" value="{$CUSTOM_FIELD_MAP['google_field_type'][0] }">
                                             <input type="text" class="google-custom-label inputElement" value="{$CUSTOM_FIELD_MAP['google_custom_label']}" style="width:40%;" data-rule-required="true"/>
                                         {else if $CUSTOM_FIELD_MAP['google_field_name'] eq 'gContact:website'}
                                             {assign var=GOOGLE_TYPES value=$GOOGLE_FIELDS['url']['types']}
                                             <select class="select2 google-type col-sm-5" data-category="url">
                                                 {foreach item=TYPE from=$GOOGLE_TYPES}
-                                                    <option value="{$TYPE}" {if $CUSTOM_FIELD_MAP['google_field_type'] eq $TYPE}selected{/if}>{vtranslate('URL',$MODULENAME)} ({vtranslate($TYPE,$MODULENAME)})</option>
+                                                    <option value="{$TYPE}" {if $CUSTOM_FIELD_MAP['google_field_type'][0]  eq $TYPE}selected{/if}>{vtranslate('URL',$MODULENAME)} ({vtranslate($TYPE,$MODULENAME)})</option>
                                                 {/foreach}
                                             </select>&nbsp;&nbsp;
-                                            <input type="text" class="google-custom-label inputElement" style="visibility:{if $CUSTOM_FIELD_MAP['google_field_type'] neq 'custom'}hidden{else}visible{/if};width:40%;" 
-                                                   value="{if $CUSTOM_FIELD_MAP['google_field_type'] eq 'custom'}{$CUSTOM_FIELD_MAP['google_custom_label']}{/if}" data-rule-required="true"/>
+                                            <input type="text" class="google-custom-label inputElement" style="visibility:{if $CUSTOM_FIELD_MAP['google_field_type'][0]  neq 'custom'}hidden{else}visible{/if};width:40%;" 
+                                                   value="{if $CUSTOM_FIELD_MAP['google_field_type'][0]  eq 'custom'}{$CUSTOM_FIELD_MAP['google_custom_label']}{/if}" data-rule-required="true"/>
                                         {/if}
                                         <a class="deleteCustomMapping marginTop7px pull-right"><i title="Delete" class="fa fa-trash"></i></a>
                                     </td>
diff --git a/layouts/v7/modules/Inventory/LineItemsDetail.tpl b/layouts/v7/modules/Inventory/LineItemsDetail.tpl
index 3f3e901..fef8d46 100644
--- a/layouts/v7/modules/Inventory/LineItemsDetail.tpl
+++ b/layouts/v7/modules/Inventory/LineItemsDetail.tpl
@@ -250,7 +250,10 @@
             </td>
         </tr>
         {if $DISCOUNT_AMOUNT_VIEWABLE || $DISCOUNT_PERCENT_VIEWABLE}
-            <tr>
+            {* SalesPlatform.ru begin *}
+            <tr {if $FINAL_DETAILS.taxtype eq 'group_tax_inc'} class="hide" {/if}>
+			{* <tr> *}
+            {* SalesPlatform.ru end *}
                 <td width="83%">
                     <div align="right">
                         {assign var=FINAL_DISCOUNT_INFO value="{vtranslate('LBL_FINAL_DISCOUNT_AMOUNT',$MODULE_NAME)} = {if $DISCOUNT_PERCENT_VIEWABLE && $FINAL_DETAILS['discount_type_final'] == 'percentage'} {$FINAL_DETAILS['discount_percentage_final']}	% {vtranslate('LBL_OF',$MODULE_NAME)} {$FINAL_DETAILS['hdnSubTotal']} = {/if}{$FINAL_DETAILS['discountTotal_final']}"}
@@ -299,7 +302,11 @@
             <tr>
                 <td width="83%">
                     <div align="right">
-                        {assign var=GROUP_TAX_INFO value="{vtranslate('LBL_TOTAL_AFTER_DISCOUNT',$MODULE_NAME)} = {$FINAL_DETAILS['totalAfterDiscount']}<br /><br />{foreach item=tax_details from=$FINAL_DETAILS['taxes']}{$tax_details['taxlabel']} : \t{$tax_details['percentage']}% {vtranslate('LBL_OF',$MODULE_NAME)} {if $tax_details['method'] eq 'Compound'}({/if}{$FINAL_DETAILS['totalAfterDiscount']}{if $tax_details['method'] eq 'Compound'}{foreach item=COMPOUND_TAX_ID from=$tax_details['compoundon']}{if $FINAL_DETAILS['taxes'][$COMPOUND_TAX_ID]['taxlabel']} + {$FINAL_DETAILS['taxes'][$COMPOUND_TAX_ID]['taxlabel']}{/if}{/foreach}){/if} = {$tax_details['amount']}<br />{/foreach}<br />{vtranslate('LBL_TOTAL_TAX_AMOUNT',$MODULE_NAME)} = {$FINAL_DETAILS['tax_totalamount']}"}
+                        {if $FINAL_DETAILS.taxtype eq 'group'}
+                            {assign var=GROUP_TAX_INFO value="{vtranslate('LBL_TOTAL_AFTER_DISCOUNT',$MODULE_NAME)} = {$FINAL_DETAILS['totalAfterDiscount']}<br /><br />{foreach item=tax_details from=$FINAL_DETAILS['taxes']}{$tax_details['taxlabel']} : \t{$tax_details['percentage']}% {vtranslate('LBL_OF',$MODULE_NAME)} {if $tax_details['method'] eq 'Compound'}({/if}{$FINAL_DETAILS['totalAfterDiscount']}{if $tax_details['method'] eq 'Compound'}{foreach item=COMPOUND_TAX_ID from=$tax_details['compoundon']}{if $FINAL_DETAILS['taxes'][$COMPOUND_TAX_ID]['taxlabel']} + {$FINAL_DETAILS['taxes'][$COMPOUND_TAX_ID]['taxlabel']}{/if}{/foreach}){/if} = {$tax_details['amount']}<br />{/foreach}<br />{vtranslate('LBL_TOTAL_TAX_AMOUNT',$MODULE_NAME)} = {$FINAL_DETAILS['tax_totalamount']}"}
+                        {else}
+                            {assign var=GROUP_TAX_INFO value="{vtranslate('LBL_TOTAL_AFTER_DISCOUNT',$MODULE_NAME)} = {$FINAL_DETAILS['totalAfterDiscount']}<br />{vtranslate('LBL_TOTAL_TAX_AMOUNT',$MODULE_NAME)} = {$FINAL_DETAILS['tax_totalamount']}"}
+                        {/if}
                         (+)&nbsp;<strong><a class="inventoryLineItemDetails" tabindex="0" role="tooltip" href="javascript:void(0)" id="finalTax" data-trigger ="focus" data-placement ="left" title = "{vtranslate('LBL_TAX',$MODULE_NAME)}" data-toggle ="popover" data-content="{$GROUP_TAX_INFO}">{vtranslate('LBL_TAX',$MODULE_NAME)}</a></strong>
                     </div>
                 </td>
diff --git a/layouts/v7/modules/Inventory/partials/LineItemsEdit.tpl b/layouts/v7/modules/Inventory/partials/LineItemsEdit.tpl
index 3f28ef1..a2945f9 100644
--- a/layouts/v7/modules/Inventory/partials/LineItemsEdit.tpl
+++ b/layouts/v7/modules/Inventory/partials/LineItemsEdit.tpl
@@ -254,7 +254,10 @@
 					</td>
 				</tr>
 				{if $DISCOUNT_AMOUNT_EDITABLE || $DISCOUNT_PERCENT_EDITABLE}
-					<tr>
+                    {* SalesPlatform.ru begin *}
+                    <tr {if $IS_GROUP_TAX_INC_TYPE} class="hide" {/if}>
+					{* <tr> *}
+                    {* SalesPlatform.ru end *}
 						<td width="83%">
 							<span class="pull-right">(-)&nbsp;
 								<strong><a href="javascript:void(0)" id="finalDiscount">{vtranslate('LBL_OVERALL_DISCOUNT',$MODULE)}&nbsp;
diff --git a/layouts/v7/modules/Inventory/resources/Edit.js b/layouts/v7/modules/Inventory/resources/Edit.js
index 47acd7e..b5ae2e8 100644
--- a/layouts/v7/modules/Inventory/resources/Edit.js
+++ b/layouts/v7/modules/Inventory/resources/Edit.js
@@ -1899,13 +1899,42 @@ Vtiger_Edit_Js("Inventory_Edit_Js", {
 		
 		this.taxTypeElement.on('change', function(e){
 			if(self.isIndividualTaxMode()) {
+                //SalesPlatform.ru begin
+                self.finalDiscountEle.closest("tr").removeClass('hide');
+                //SalesPlatform.ru end
 				jQuery('#group_tax_row').addClass('hide');
 				self.lineItemsHolder.find('tr.'+self.lineItemDetectingClass).each(function(index,domElement){
 					var lineItemRow = jQuery(domElement);
 					lineItemRow.find('.individualTaxContainer,.productTaxTotal').removeClass('hide');
 					self.lineItemRowCalculations(lineItemRow);
 				});
+            //SalesPlatform.ru begin
+            } else if(self.isGroupIncTaxMode()) {
+                
+                /* Block total discount for group tax inc mode - maybe troubles with tax calculation with different rate */
+                self.finalDiscountEle.closest("tr").addClass('hide');
+                jQuery('#group_tax_row').removeClass('hide');
+                
+				self.lineItemsHolder.find('tr.'+ self.lineItemDetectingClass).each(function(index,domElement){
+					var lineItemRow = jQuery(domElement);
+					lineItemRow.find('.individualTaxContainer,.productTaxTotal').addClass('hide');
+					self.calculateLineItemNetPrice(lineItemRow);
+				});
+                
+                /* For group inc mode no common discount - cause can be different tax rates for line items */
+                $('[name="radioSelectionName"]').removeAttr('checked');
+                self.finalDiscountUIEle.find('[name="discount_final"]').removeAttr('checked');
+                self.finalDiscountUIEle.find('[name="discount_final"]').each(function(index) {
+                    var discountType = $(this).data('discountType');
+                    if(discountType === 'zero') {
+                        $(this).attr('checked', 'checked');
+                    }
+                });
+            //SalesPlatform.ru end
 			}else{
+                //SalesPlatform.ru begin
+                self.finalDiscountEle.closest("tr").removeClass('hide');
+                //SalesPlatform.ru end
 				jQuery('#group_tax_row').removeClass('hide');
 				self.lineItemsHolder.find('tr.'+ self.lineItemDetectingClass).each(function(index,domElement){
 					var lineItemRow = jQuery(domElement);
@@ -2262,7 +2291,15 @@ Vtiger_Edit_Js("Inventory_Edit_Js", {
 
         finalTaxTriggerer.on('click', function(e){
 			self.getForm().find('.popover.lineItemPopover').css('opacity', 0).css('z-index', '-1');
-
+            
+            //SalesPlatform.ru begin
+            if(self.isGroupIncTaxMode()) {
+                finalTaxTriggerer.popover('hide');
+				popOverEle.css('opacity',0).css('z-index','-1');
+                return;
+            }
+            //SalesPlatform.ru end 
+            
 			if(popOverEle.css('opacity') == '0') {
 				finalTaxTriggerer.popover('show');
 				popOverEle.css('opacity',1).css('z-index','');
diff --git a/layouts/v7/modules/Migration/MigrationStep2.tpl b/layouts/v7/modules/Migration/MigrationStep2.tpl
index 1bffc0c..67345f4 100644
--- a/layouts/v7/modules/Migration/MigrationStep2.tpl
+++ b/layouts/v7/modules/Migration/MigrationStep2.tpl
@@ -26,7 +26,7 @@
 			<div class="col-lg-12 inner-container">
 				<div class="row">
 					<div class="col-lg-10">
-						<h4> {vtranslate('LBL_MIGRATION_COMPLETED', $MODULE)} </h4> 
+						<h4> {vtranslate('LBL_MIGRATION_COMPLETED', $MODULE)} </h4>
 					</div>
 				</div>
 				<hr>
@@ -44,8 +44,10 @@
 						{vtranslate('LBL_DISCUSS_WITH_US_AT_BLOGS', $MODULE)}<br><br>
                                                 {*SalesPlatform.ru begin*}
 						{vtranslate('LBL_CONNECT_WITH_US', 'Users')}&nbsp;&nbsp;
-                                                <a href="http://community.salesplatform.ru/" target="_blank"><img src="layouts/vlayout/skins/images/forum.png"></a>&nbsp;&nbsp;
-                                                <a href="https://twitter.com/salesplatformru" target="_blank"><img src="layouts/vlayout/skins/images/twitter.png"></a>
+                                                <a href="http://community.salesplatform.ru/" target="_blank" title="{vtranslate('Community', $MODULE)}"><i class="fa fa-comments"></i></a>
+                                                <a href="https://twitter.com/salesplatformru" target="_blank" title="Twitter"><i class="fa fa-twitter"></i></a>
+                                                <a href="https://vk.com/salesplatform" target="_blank" title="Vk"><i class="fa fa-vk"></i></a>
+                                                <a href="https://youtube.com/salesplatform" target="_blank" title="YouTube"><i class="fa fa-youtube-play"></i></a>
 						{*Connect with us &nbsp;&nbsp;*}
 						{*<a href="https://www.facebook.com/vtiger" target="_blank"><img src="{vimage_path('facebook.png')}"></a>&nbsp;&nbsp;*}
 						{*<a href="https://twitter.com/vtigercrm" target="_blank"><img src="{vimage_path('twitter.png')}"></a>&nbsp;&nbsp;*}
diff --git a/layouts/v7/modules/Products/DetailViewBlockView.tpl b/layouts/v7/modules/Products/DetailViewBlockView.tpl
index 05a4411..d4761a9 100644
--- a/layouts/v7/modules/Products/DetailViewBlockView.tpl
+++ b/layouts/v7/modules/Products/DetailViewBlockView.tpl
@@ -15,7 +15,10 @@
 	{foreach key=BLOCK_LABEL_KEY item=FIELD_MODEL_LIST from=$RECORD_STRUCTURE}
 		{assign var=BLOCK value=$BLOCK_LIST[$BLOCK_LABEL_KEY]}
 		{if $BLOCK eq null or $FIELD_MODEL_LIST|@count lte 0}{continue}{/if}
-		<div class="block block_{$BLOCK_LABEL_KEY}">
+        {* SalesPlatform.ru begin *}
+        <div class="block block_{$BLOCK_LABEL_KEY}" data-block="{$BLOCK_LABEL_KEY}" data-blockid="{$BLOCK_LIST[$BLOCK_LABEL_KEY]->get('id')}">
+		{* <div class="block block_{$BLOCK_LABEL_KEY}"> *}
+        {* SalesPlatform.ru end *}    
 			{assign var=IS_HIDDEN value=$BLOCK->isHidden()}
 			{assign var=WIDTHTYPE value=$USER_MODEL->get('rowheight')}
 			<input type=hidden name="timeFormatOptions" data-value='{$DAY_STARTS}' />
diff --git a/layouts/v7/modules/SMSNotifier/StatusWidget.tpl b/layouts/v7/modules/SMSNotifier/StatusWidget.tpl
index b0a0923..be14161 100644
--- a/layouts/v7/modules/SMSNotifier/StatusWidget.tpl
+++ b/layouts/v7/modules/SMSNotifier/StatusWidget.tpl
@@ -1,39 +1,46 @@
 {*<!--
 /*********************************************************************************
-  ** The contents of this file are subject to the vtiger CRM Public License Version 1.0
-   * ("License"); You may not use this file except in compliance with the License
-   * The Original Code is:  vtiger CRM Open Source
-   * The Initial Developer of the Original Code is vtiger.
-   * Portions created by vtiger are Copyright (C) vtiger.
-   * All Rights Reserved.
-  *
- ********************************************************************************/
+** The contents of this file are subject to the vtiger CRM Public License Version 1.0
+* ("License"); You may not use this file except in compliance with the License
+* The Original Code is:  vtiger CRM Open Source
+* The Initial Developer of the Original Code is vtiger.
+* Portions created by vtiger are Copyright (C) vtiger.
+* All Rights Reserved.
+*
+********************************************************************************/
 -->*}
-<div class="modal-body">
-    {* SalesPlatform.ru begin *}
-	<table  cellpadding="3" cellspacing="1" border="0" class="table table-bordered detailview-table">
-    {* <table width="100%" cellpadding="3" cellspacing="1" border="0" class="lvt small"> *}
-    {* SalesPlatform.ru end *}
+<div class="modal-dialog modal-lg">
+    <div id="accountHierarchyContainer" class="modelContainer modal-content">
         {* SalesPlatform.ru begin *}
-        <tr>
-            <th>{vtranslate('LBL_NUMBER', $MODULE)}</th>
-            <th>{vtranslate('LBL_STATUS', $MODULE)}</th>
-            <th>{vtranslate('LBL_STATUS_MESSAGE', $MODULE)}</th>
-        </tr> 
-        {if $RECORDS|@count ne 0}
-            {foreach item=RECORD from=$RECORDS}
-            <tr bgcolor="{SMSNotifier_Record_Model::getBackgroundColorForStatus($RECORD['status'])}">
-                <td nowrap="nowrap" width="33%">{$RECORD['tonumber']}</td>
-                <td nowrap="nowrap" width="33%">{vtranslate($RECORD['status'], $MODULE)}</td>
-                <td nowrap="nowrap" width="33%">{$RECORD['statusmessage']}</td>
-                {*<td nowrap="nowrap" bgcolor="{$RECORD->get('statuscolor')}" width="25%">{$RECORD->get('tonumber')}</td>*}
-            </tr>
-            {/foreach}
-        {else}
+        <table  cellpadding="3" cellspacing="1" border="0" class="table table-bordered detailview-table">
+            {* <table width="100%" cellpadding="3" cellspacing="1" border="0" class="lvt small"> *}
+            {* SalesPlatform.ru end *}
+            {* SalesPlatform.ru begin *}
             <tr>
-                <td nowrap="nowrap" width="100%" colspan="3">{vtranslate('LBL_NO_NUMBERS_TO_SEND_SMS', $MODULE)}</td>
-            </tr>
-        {/if}
-        {* SalesPlatform.ru end *}
-	</table>
+                <th>{vtranslate('LBL_NUMBER', $MODULE)}</th>
+                <th>{vtranslate('LBL_STATUS', $MODULE)}</th>
+                <th>{vtranslate('LBL_STATUS_MESSAGE', $MODULE)}</th>
+            </tr> 
+            {if $RECORDS|@count ne 0}
+                {foreach item=RECORD from=$RECORDS}
+                    <tr bgcolor="{SMSNotifier_Record_Model::getBackgroundColorForStatus($RECORD['status'])}">
+                        <td nowrap="nowrap" width="33%">{$RECORD['tonumber']}</td>
+                        <td nowrap="nowrap" width="33%">{vtranslate($RECORD['status'], $MODULE)}</td>
+                        <td nowrap="nowrap" width="33%">{$RECORD['statusmessage']}</td>
+                        {*<td nowrap="nowrap" bgcolor="{$RECORD->get('statuscolor')}" width="25%">{$RECORD->get('tonumber')}</td>*}
+                    </tr>
+                {/foreach}
+            {else}
+                <tr>
+                    <td nowrap="nowrap" width="100%" colspan="3">{vtranslate('LBL_NO_NUMBERS_TO_SEND_SMS', $MODULE)}</td>
+                </tr>
+            {/if}
+            {* SalesPlatform.ru end *}
+        </table>
+        <div class="modal-footer">
+            <div class="pull-right cancelLinkContainer">
+                <button class="btn btn-primary" type="reset" data-dismiss="modal"><strong>{vtranslate('LBL_CLOSE', $MODULE)}</strong></button>
+            </div>
+        </div>
+    </div>
 </div>
\ No newline at end of file
diff --git a/layouts/v7/modules/SMSNotifier/resources/Detail.js b/layouts/v7/modules/SMSNotifier/resources/Detail.js
index db787f1..c25728a 100644
--- a/layouts/v7/modules/SMSNotifier/resources/Detail.js
+++ b/layouts/v7/modules/SMSNotifier/resources/Detail.js
@@ -12,11 +12,14 @@ Vtiger_Detail_Js("SMSNotifier_Detail_Js",{
 	/*
 	 * Checks statuses of sms
 	 */
-	checkStatus : function(checkStatusUrl, currentElement) {
-            console.log(checkStatusUrl);
-        AppConnector.request(checkStatusUrl).then(
-            function(data) {
-                app.showModalWindow(data);
+	checkStatus : function(checkStatusUrl) {
+        app.request.get({
+            url : checkStatusUrl
+        }).then(
+            function(error, data) {
+                if(error === null) {
+                    app.helper.showModal(data);
+                }   
             },
             function(error,err){
 
diff --git a/layouts/v7/modules/Settings/LayoutEditor/FieldsList.tpl b/layouts/v7/modules/Settings/LayoutEditor/FieldsList.tpl
index b1cdf6f..c7256df 100755
--- a/layouts/v7/modules/Settings/LayoutEditor/FieldsList.tpl
+++ b/layouts/v7/modules/Settings/LayoutEditor/FieldsList.tpl
@@ -95,7 +95,10 @@
 															</span>
 															<div class="col-sm-9" style="word-wrap: break-word;">
 																<div class="fieldLabelContainer row">
-																	<span class="fieldLabel">
+                                                                    {* SalesPlatform.ru begin *}
+																	{* <span class="fieldLabel"> *}
+                                                                    <span class="fieldLabel" data-toggle="tooltip" data-placement="right" title="{vtranslate('LBL_SYSTEM_NAME', $QUALIFIED_MODULE)}: {$FIELD_MODEL->get('name')}">
+                                                                    {* SalesPlatform.ru end *}
 																		<b>{vtranslate($FIELD_MODEL->get('label'), $SELECTED_MODULE_NAME)}</b>
 																		&nbsp;{if $IS_MANDATORY}<span class="redColor">*</span>{/if}
 																	</span><br>
@@ -292,7 +295,10 @@
 															</span>
 															<div class="col-sm-9" style="word-wrap: break-word;">
 																<div class="fieldLabelContainer row">
-																	<span class="fieldLabel">
+																	{* SalesPlatform.ru begin *}
+																	{* <span class="fieldLabel"> *}
+                                                                    <span class="fieldLabel" data-toggle="tooltip" data-placement="right" title="{vtranslate('LBL_SYSTEM_NAME', $QUALIFIED_MODULE)}: {$FIELD_MODEL->get('name')}">
+                                                                    {* SalesPlatform.ru end *}
 																		<b>{vtranslate($FIELD_MODEL->get('label'), $SELECTED_MODULE_NAME)}</b>
 																		{if $IS_MANDATORY}&nbsp;<span class="redColor">*</span>{/if}
 																	</span><br>
@@ -518,7 +524,7 @@
 						</span>
 						<div class="col-sm-9" style="word-wrap: break-word;">
 							<div class="fieldLabelContainer row">
-								<span class="fieldLabel">
+                                <span class="fieldLabel">
 									<b></b>
 									&nbsp;
 								</span>
diff --git a/layouts/v7/modules/Settings/LayoutEditor/resources/LayoutEditor.js b/layouts/v7/modules/Settings/LayoutEditor/resources/LayoutEditor.js
index 38be7ed..bf496c1 100755
--- a/layouts/v7/modules/Settings/LayoutEditor/resources/LayoutEditor.js
+++ b/layouts/v7/modules/Settings/LayoutEditor/resources/LayoutEditor.js
@@ -1052,6 +1052,13 @@ Vtiger.Class('Settings_LayoutEditor_Js', {
 		}
 		//SalesPlatform.ru end
         
+        //SalesPlatform.ru begin tooltip
+        fieldCopy.find(".fieldLabel")
+            .attr('title', app.vtranslate('JS_SYSTEM_NAME') + ": " + result['name'])
+            .attr('data-toggle', 'tooltip')
+            .attr('data-placement', 'right');
+        //SalesPlatform.ru end tooltip
+        
 		var block = relatedBlock.find('.blockFieldsList');
 		var sortable1 = block.find('ul[name=sortable1]');
 		var sortable2 = block.find('ul[name=sortable2]');
@@ -1519,7 +1526,7 @@ Vtiger.Class('Settings_LayoutEditor_Js', {
 					for (var index in data) {
 						thisInstance.showCustomField(data[index]);
 					}
-					app.helper.showSuccessNotification({'message': app.vtranslate('JS_SELECTED_FIELDS_REACTIVATED')})
+					app.helper.showSuccessNotification({'message': app.vtranslate('JS_SELECTED_FIELDS_REACTIVATED')})          
 				}
 
 			});
@@ -2276,6 +2283,12 @@ Vtiger.Class('Settings_LayoutEditor_Js', {
 
 		var selectedTab = jQuery('.selectedTab').val();
 		jQuery('#layoutEditorContainer').find('.contents').find('.'+selectedTab).trigger('click');
+        
+        //SalesPlatform.ru begin fieldname tooltip
+        jQuery('[data-toggle="tooltip"]').tooltip({
+            template: '<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner" style="width: 200px;"></div></div>'
+        });
+        //SalesPlatform.ru end
 	}
 });
 
diff --git a/layouts/v7/modules/Settings/SPTips/EditProvider.tpl b/layouts/v7/modules/Settings/SPTips/EditProvider.tpl
index c627299..d1f537e 100644
--- a/layouts/v7/modules/Settings/SPTips/EditProvider.tpl
+++ b/layouts/v7/modules/Settings/SPTips/EditProvider.tpl
@@ -1,32 +1,21 @@
 {*
 /*+**********************************************************************************
- * The contents of this file are subject to the vtiger CRM Public License Version 1.1
- * ("License"); You may not use this file except in compliance with the License
- * The Original Code is: SalesPlatform Ltd
- * The Initial Developer of the Original Code is SalesPlatform Ltd.
- * All Rights Reserved.
- * If you have any questions or comments, please email: devel@salesplatform.ru
- ************************************************************************************/
+* The contents of this file are subject to the vtiger CRM Public License Version 1.1
+* ("License"); You may not use this file except in compliance with the License
+* The Original Code is: SalesPlatform Ltd
+* The Initial Developer of the Original Code is SalesPlatform Ltd.
+* All Rights Reserved.
+* If you have any questions or comments, please email: devel@salesplatform.ru
+************************************************************************************/
 *}
 {strip}
-    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
-        <div class=" vt-default-callout vt-info-callout">
-            <h4 class="vt-callout-header"><span class="fa fa-info-circle">&nbsp;&nbsp;</span>{vtranslate('LBL_INFORMATION', $QUALIFIED_MODULE)}</h4>
-            <p>{vtranslate('LBL_PROVIDERS_AVAILABLE_FOR_SELECTION', $QUALIFIED_MODULE)}</p>
-            <ul class="list-group">
-            {foreach item=AVAILABLE_PROVIDER from=$AVAILABLE_PROVIDERS}
-                <li class="list-group-item">{$AVAILABLE_PROVIDER}</li>
-            {/foreach}  
-            </ul>
-        </div>
-        
+    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12"> 
         <form class="form-horizontal recordEditView" id="EditView" name="EditView" method="post" action="index.php" enctype="multipart/form-data">
             <input type="hidden" name="module" value="{$MODULE}">
             <input type="hidden" name="parent" value="Settings" />
             <input type="hidden" name="action" value="SaveProvider" />
-            <input type="hidden" name="record" value="{$RECORD_STRUCTURE->get('provider_id')}" />
-            {assign var=RECORD_ID value=$RECORD_STRUCTURE->get('provider_id')}
-            
+            <input type="hidden" name="record" value="{$PROVIDER->getId()}" />
+
             <div class="editViewHeader">
                 <div class='row'>
                     <div class="col-lg-12 col-md-12 col-sm-12 ">
@@ -37,42 +26,24 @@
             <hr>
             <div class="editViewBody">
                 <div class="editViewContents" >
-                    
                     <table class="table table-borderless">
                         <tr>
                             <td>
                                 <label class="control-label fieldLabel col-sm-4">{vtranslate('LBL_PROVIDER_NAME', $QUALIFIED_MODULE)}</label>
-                                <input class="fieldValue inputElement" type="text" disabled="disabled" name="provider_name" value="{$RECORD_STRUCTURE->get('provider_name')}"/>
-                            </td>
-                        </tr>
-                        <tr>
-                            <td>
-                                <label class="control-label fieldLabel col-sm-4">{vtranslate('LBL_API_KEY', $QUALIFIED_MODULE)}</label>
-                                <input class="fieldValue inputElement" type="text" name="api_key" value="{$RECORD_STRUCTURE->get('api_key')}"/>
-                            </td>
-                        </tr>
-                        <tr>
-                            <td>
-                                <label class="control-label fieldLabel col-sm-4">{vtranslate('LBL_TOKEN', $QUALIFIED_MODULE)}</label>
-                                <input class="fieldValue inputElement" type="text" name="token" value="{$RECORD_STRUCTURE->get('token')}"/>
+                                <input class="fieldValue inputElement" type="text" disabled="disabled" name="provider_name" value="{$PROVIDER->getName()}"/>
                             </td>
                         </tr>
+                        {foreach key=FIELD_NAME item=VALUE from=$PROVIDER->getSettingsMap()}
+                            <tr>
+                                <td>
+                                    <label class="control-label fieldLabel col-sm-4">{vtranslate($FIELD_NAME, $QUALIFIED_MODULE)}</label>
+                                    <input class="fieldValue inputElement" type="text" name="{$FIELD_NAME}" value="{$VALUE}"/>
+                                </td>
+                            </tr>
+                        {/foreach}
                     </table>
-                    
                 </div>
             </div>
-                <div class="modal-overlay-footer">
-                        <div class="row clearfix">
-                            <div class='textAlignCenter col-lg-12 col-md-12 col-sm-12 '>
-                                {*SalesPlatform.ru begin
-                                <button class="btn btn-success saveButton" type="submit">{vtranslate('LBL_SAVE', $MODULE)}</button>
-                                <a class="cancelLink" href="javascript:history.back()" type="reset">{vtranslate('LBL_CANCEL', $MODULE)}</a>
-                                {*<button class="btn btn-success saveButton" type="submit">Save</button>
-                                <a class="cancelLink" href="javascript:history.back()" type="reset">Cancel</a>*}
-                                {*SalesPaltform.ru end*}
-                            </div>
-                        </div>
-                    </div>
             <div class='modal-overlay-footer clearfix'>
                 <div class="row clearfix">
                     <div class='textAlignCenter col-lg-12 col-md-12 col-sm-12 '>
diff --git a/layouts/v7/modules/Settings/SPTips/EditRules.tpl b/layouts/v7/modules/Settings/SPTips/EditRules.tpl
index a73e2e1..393af0e 100644
--- a/layouts/v7/modules/Settings/SPTips/EditRules.tpl
+++ b/layouts/v7/modules/Settings/SPTips/EditRules.tpl
@@ -1,137 +1,161 @@
 {*
 /*+**********************************************************************************
- * The contents of this file are subject to the vtiger CRM Public License Version 1.1
- * ("License"); You may not use this file except in compliance with the License
- * The Original Code is: SalesPlatform Ltd
- * The Initial Developer of the Original Code is SalesPlatform Ltd.
- * All Rights Reserved.
- * If you have any questions or comments, please email: devel@salesplatform.ru
- ************************************************************************************/
+* The contents of this file are subject to the vtiger CRM Public License Version 1.1
+* ("License"); You may not use this file except in compliance with the License
+* The Original Code is: SalesPlatform Ltd
+* The Initial Developer of the Original Code is SalesPlatform Ltd.
+* All Rights Reserved.
+* If you have any questions or comments, please email: devel@salesplatform.ru
+************************************************************************************/
 *}
 {strip}
-<div class="container-fluid">
-    <div class="col-sm-12 col-xs-12">
-        <div class=" vt-default-callout vt-info-callout">
-            <h4 class="vt-callout-header"><span class="fa fa-info-circle">&nbsp;</span>{vtranslate('LBL_INFORMATION', $QUALIFIED_MODULE)}</h4>
-            <p>{vtranslate('LBL_DIFFERENT_RULES_FOR_PROVIDERS', $QUALIFIED_MODULE)}</p>
-            <p>{vtranslate('LBL_CURRENT_PROVIDER', $QUALIFIED_MODULE)}&nbsp;<strong>{$PROVIDER_NAME}</strong></p>
-        </div>
-        <br>
-        <div class="editViewContainer">
-            <br>
-            <form id="rulesForm" class="form-horizontal" method="POST">
-                <div class="editViewBody">
-                    <div class="editViewContents">
-                        {* select with modules *}
-                        <div class="form-group">
-                            <label class="muted control-label col-sm-2 col-xs-2">{vtranslate('LBL_SELECT_MODULE', $QUALIFIED_MODULE)}</label>
-                            <div class="controls col-sm-3 col-xs-3">
-                                <select name="sourceModule" class="select2 form-control marginLeftZero">
-                                    {foreach item=MODULE_MODEL from=$AVAILABLE_MODULES}
-                                        {assign var=MODULE_NAME value=$MODULE_MODEL->get('name')}
-                                        <option value="{$MODULE_NAME}" {if $MODULE_NAME eq $SELECTED_MODULE} selected {/if}>
-                                            {vtranslate($MODULE_NAME, $MODULE_NAME)}
-                                        </option>
-                                    {/foreach}
-                                </select>
+    <div class="container-fluid">
+        <div class="col-sm-12 col-xs-12">
+            <div class=" vt-default-callout vt-info-callout">
+                <h4 class="vt-callout-header"><span class="fa fa-info-circle">&nbsp;</span>{vtranslate('LBL_INFORMATION', $QUALIFIED_MODULE)}</h4>
+                <p>{vtranslate('LBL_DIFFERENT_RULES_FOR_PROVIDERS', $QUALIFIED_MODULE)}</p>
+                <p>{vtranslate('LBL_CURRENT_PROVIDER', $QUALIFIED_MODULE)}&nbsp;<strong>{$PROVIDER->getName()}</strong></p>
+            </div>
+            <div class="editViewContainer marginTop10px">
+                <form id="rulesForm" class="form-horizontal" method="POST">
+                    <div class="editViewBody">
+                        <div class="editViewContents">
+                            {* select with modules *}
+                            <div class="form-group">
+                                <label class="muted control-label col-sm-2 col-xs-2">{vtranslate('LBL_SELECT_MODULE', $QUALIFIED_MODULE)}</label>
+                                <div class="controls col-sm-3 col-xs-3">
+                                    <select name="sourceModule" class="select2 form-control marginLeftZero" data-rule-required="true">
+                                        {foreach item=MODULE_MODEL from=$AVAILABLE_MODULES}
+                                            {assign var=MODULE_NAME value=$MODULE_MODEL->get('name')}
+                                            <option value="{$MODULE_NAME}" {if $MODULE_NAME eq $RECORD_MODEL->getModuleName()} selected {/if}>
+                                                {vtranslate($MODULE_NAME, $MODULE_NAME)}
+                                            </option>
+                                        {/foreach}
+                                    </select>
+                                </div>
                             </div>
-                        </div>
-                        {* select with mandatory source fields *}
-                        <div class="form-group">
-                            <label class="muted control-label col-sm-2 col-xs-2">{vtranslate('LBL_DEPENDEND_FIELD', $QUALIFIED_MODULE)}</label>
-                            <div class="controls col-sm-3 col-xs-3">
-                                <select name="sourceField" class="select2 form-control" data-placeholder="{vtranslate('LBL_SELECT_FIELD', $QUALIFIED_MODULE)}" data-rule-required="true">
-                                    <option value=''></option>
-                                {foreach key=FIELD_NAME item=FIELD_LABEL from=$PICKLIST_FIELDS}
-                                    <option value="{$FIELD_NAME}" {if $RECORD_MODEL->get('sourceField') eq $FIELD_NAME} selected {/if}>{vtranslate($FIELD_LABEL, $SELECTED_MODULE)}</option>
-                                {/foreach}
-                                </select>
+                            
+                            {* Tip type *}
+                            <div class="form-group">
+                                <label class="muted control-label col-sm-2 col-xs-2">
+                                    {vtranslate('LBL_TIP_TYPE', $QUALIFIED_MODULE)}
+                                </label>
+                                <div class="controls col-sm-3 col-xs-3">
+                                    <select name="type" class="select2 form-control" data-rule-required="true">
+                                        {foreach item=TIP_TYPE from=$SUPPORTED_TYPES}
+                                            <option value="{$TIP_TYPE}" {if $RECORD_MODEL->getType() eq $TIP_TYPE} selected {/if}>{vtranslate($TIP_TYPE, $QUALIFIED_MODULE)}</option>
+                                        {/foreach}
+                                    </select>
+                                </div>
+                            </div>
+                            
+                                    
+                            {* select with mandatory source fields *}
+                            <div class="form-group">
+                                <label class="muted control-label col-sm-2 col-xs-2">
+                                    {vtranslate('LBL_SELECTED_AUTOCFOMPLETE_FIELD', $QUALIFIED_MODULE)}
+                                </label>
+                                <div class="controls col-sm-3 col-xs-3">
+                                    <select name="sourceField" class="select2 form-control" data-placeholder="{vtranslate('LBL_SELECT_FIELD', $QUALIFIED_MODULE)}" data-rule-required="true">
+                                        <option value=''></option>
+                                        {foreach key=FIELD_NAME item=FIELD_LABEL from=$PICKLIST_FIELDS}
+                                            <option value="{$FIELD_NAME}" {if $RECORD_MODEL->getTipFieldName() eq $FIELD_NAME} selected {/if}>{vtranslate($FIELD_LABEL, $RECORD_MODEL->getModuleName())}</option>
+                                        {/foreach}
+                                    </select>
+                                </div>
                             </div>
-                            <div class="controls col-sm-3 col-xs-3">
-                                <select name="sourceProviderField" class="select2 form-control select2-offscreen" data-placeholder="{vtranslate('LBL_SELECT_FIELD', $QUALIFIED_MODULE)}">
-                                    <option value=''></option>
-                                    {foreach key=FIELD_NAME item=FIELD_LABEL from=$PROVIDER_PICKLIST_FIELDS}
-                                        <option value="{$FIELD_NAME}" {if $RECORD_MODEL->get('sourceProviderField') eq $FIELD_NAME} selected {/if}>{vtranslate($FIELD_NAME, $QUALIFIED_MODULE)}</option>
-                                    {/foreach}
-                                </select>
+
+
+                            {* Fill fields mapping *}
+                            <div style="margin-top: 50px;">
+                                <h4>{vtranslate('LBL_AUTOCOMPLETE_MAPPING', $QUALIFIED_MODULE)}</h4>
                             </div>
-                        </div>
-                        {if $RECORD_MODEL->get('targetFields') && $RECORD_MODEL->get('targetProviderFields')}
-                            {assign var=COUNTER value=0}
-                            {assign var=TARGET_PROVIDER_FIELDS value=$RECORD_MODEL->get('targetProviderFields')}
-                            {foreach key=KEY item=ITEM from=$RECORD_MODEL->get('targetFields')}
-                                <div class="form-group">
-                                    <label class="muted control-label col-sm-2 col-xs-2">{vtranslate('LBL_FILL_IN_FIELD', $QUALIFIED_MODULE)}</label>
-                                    <div class="controls col-sm-3 col-xs-3">
-                                        <select name="dependentFields[]" class="select2 form-control select2-offscreen" data-placeholder="{vtranslate('LBL_SELECT_FIELD', $QUALIFIED_MODULE)}">
-                                            {foreach key=FIELD_NAME item=FIELD_LABEL from=$PICKLIST_FIELDS}
-                                                <option value="{$FIELD_NAME}" {if $KEY eq $FIELD_NAME} selected {/if}>{vtranslate($FIELD_LABEL, $SELECTED_MODULE)}</option>
-                                            {/foreach}
-                                        </select>
-                                    </div>
-                                    <div class="controls col-sm-3 col-xs-3">
-                                        {assign var=TEST value=$RECORD_MODEL->get('targetProviderFields')}
-                                        <select name="providerFields[]" class="select2 form-control select2-offscreen" data-placeholder="{vtranslate('LBL_SELECT_FIELD', $QUALIFIED_MODULE)}">
-                                            <option value=''></option>
-                                            {foreach key=FIELD_NAME item=FIELD_LABEL from=$PROVIDER_PICKLIST_FIELDS}
-                                                <option value="{$FIELD_NAME}" {if $TARGET_PROVIDER_FIELDS[$KEY] eq $FIELD_NAME} selected {/if}>{vtranslate($FIELD_NAME, $QUALIFIED_MODULE)}</option>
-                                            {/foreach}
-                                        </select>
-                                    </div>
-                                    <a role="javascript:void(0)" class="deleteFieldsItemLine" data-rule-id="{$RULE_ID}">
-                                        <strong><i class="fa fa-trash" style="vertical-align: middle"></i></strong>
-                                    </a>
+                            <div class="btn-toolbar marginTop15px" style="margin-bottom: 15px;">
+                                <span class="btn-group">
+                                    <button type="button" class="btn btn-default" id="addDependendField" data-module-name="SPTips">
+                                        <i class="fa fa-plus"></i>
+                                        &nbsp;&nbsp;
+                                        <strong>{vtranslate('LBL_ADD_MAPPING', $QUALIFIED_MODULE)}</strong>
+                                    </button> 
+                                </span>
+                            </div>
+                            
+                            <div class="form-group">
+                                <div class="controls col-sm-3 col-xs-3">
+                                    <label class="muted">{vtranslate('LBL_CRM_FIELD', $QUALIFIED_MODULE)}</label>
+                                </div>
+                                <div class="controls col-sm-3 col-xs-3">
+                                    <label class="muted">{vtranslate('LBL_PROVIDER_FIELD', $QUALIFIED_MODULE)}</label>
                                 </div>
-                            {assign var=COUNTER value=COUNTER+1}
-                            {/foreach}
-                        {/if}
-                        {* template for adding new fields on page *}
-                        <div class="form-group hide lineItemCopy">
-                            <label class="muted control-label col-sm-2 col-xs-2">{vtranslate('LBL_FILL_IN_FIELD', $QUALIFIED_MODULE)}</label>
-                            <div class="controls col-sm-3 col-xs-3">
-                                <select name="dependentFields[]" class="select2 form-control select2-offscreen" data-placeholder="{vtranslate('LBL_SELECT_FIELD', $QUALIFIED_MODULE)}">
-                                    {foreach key=FIELD_NAME item=FIELD_LABEL from=$PICKLIST_FIELDS}
-                                        <option value="{$FIELD_NAME}" {if $RECORD_MODEL->get('targetfield') eq $FIELD_NAME} selected {/if}>{vtranslate($FIELD_LABEL, $SELECTED_MODULE)}</option>
-                                    {/foreach}
-                                </select>
                             </div>
-                            <div class="controls col-sm-3 col-xs-3">
-                                <select name="providerFields[]" class="select2 form-control select2-offscreen" data-placeholder="{vtranslate('LBL_SELECT_FIELD', $QUALIFIED_MODULE)}">
-                                    <option value=''></option>
-                                    {foreach key=FIELD_NAME item=FIELD_LABEL from=$PROVIDER_PICKLIST_FIELDS}
-                                        <option value="{$FIELD_NAME}" {if $RECORD_MODEL->get('sourcefield') eq $FIELD_NAME} selected {/if}>{vtranslate($FIELD_NAME, $QUALIFIED_MODULE)}</option>
-                                    {/foreach}
-                                </select>
+                                    
+                            {if !$SKIP_DEPENDENT}
+                                {foreach item=ITEM from=$RECORD_MODEL->getDependentFields()}
+                                    <div class="form-group">
+                                        <div class="controls col-sm-3 col-xs-3">
+                                            <select name="dependentFields[]" class="select2 form-control select2-offscreen" data-placeholder="{vtranslate('LBL_SELECT_FIELD', $QUALIFIED_MODULE)}" data-rule-required="true">
+                                                {foreach key=FIELD_NAME item=FIELD_LABEL from=$PICKLIST_FIELDS}
+                                                    <option value="{$FIELD_NAME}" {if $ITEM->getVtigerFieldName() eq $FIELD_NAME} selected {/if}>{vtranslate($FIELD_LABEL, $RECORD_MODEL->getModuleName())}</option>
+                                                {/foreach}
+                                            </select>
+                                        </div>
+                                        <div class="controls col-sm-3 col-xs-3">
+                                            <select name="providerFields[]" class="select2 form-control select2-offscreen" data-placeholder="{vtranslate('LBL_SELECT_FIELD', $QUALIFIED_MODULE)}" data-rule-required="true">
+                                                <option value=''></option>
+                                                {foreach key=FIELD_NAME item=FIELD_LABEL from=$PROVIDER_PICKLIST_FIELDS}
+                                                    <option value="{$FIELD_NAME}" {if $ITEM->getProviderFieldName() eq $FIELD_NAME} selected {/if}>{vtranslate($FIELD_NAME, $QUALIFIED_MODULE)}</option>
+                                                {/foreach}
+                                            </select>
+                                        </div>
+                                        <a role="javascript:void(0)" class="deleteFieldsItemLine">
+                                            <strong><i class="fa fa-trash" style="vertical-align: middle"></i></strong>
+                                        </a>
+                                    </div>
+                                {/foreach}
+                            {/if}
+
+
+                            {* template for adding new fields mapping *}
+                            <div class="form-group hide lineItemCopy">
+                                <div class="controls col-sm-3 col-xs-3">
+                                    <select name="dependentFields[]" class="select2 form-control select2-offscreen" data-placeholder="{vtranslate('LBL_SELECT_FIELD', $QUALIFIED_MODULE)}">
+                                        {foreach key=FIELD_NAME item=FIELD_LABEL from=$PICKLIST_FIELDS}
+                                            <option value="{$FIELD_NAME}">{vtranslate($FIELD_LABEL, $RECORD_MODEL->getModuleName())}</option>
+                                        {/foreach}
+                                    </select>
+                                </div>
+                                <div class="controls col-sm-3 col-xs-3">
+                                    <select name="providerFields[]" class="select2 form-control select2-offscreen" data-placeholder="{vtranslate('LBL_SELECT_FIELD', $QUALIFIED_MODULE)}">
+                                        <option value=''></option>
+                                        {foreach key=FIELD_NAME item=FIELD_LABEL from=$PROVIDER_PICKLIST_FIELDS}
+                                            <option value="{$FIELD_NAME}">{vtranslate($FIELD_NAME, $QUALIFIED_MODULE)}</option>
+                                        {/foreach}
+                                    </select>
+                                </div>
+                                <a role="javascript:void(0)" class="deleteFieldsItemLine">
+                                    <strong><i class="fa fa-trash" style="vertical-align: middle"></i></strong>
+                                </a>
                             </div>
-                            <a role="javascript:void(0)" class="deleteFieldsItemLine" data-rule-id="{$RULE_ID}">
-                                <strong><i class="fa fa-trash" style="vertical-align: middle"></i></strong>
-                            </a>
                         </div>
-                    </div>
 
-                    <div class="btn-toolbar">
-                        <span class="btn-group">
-                            <button type="button" class="btn btn-default" id="addDependendField" data-module-name="SPTips">
-                                <i class="fa fa-plus"></i>
-                                &nbsp;&nbsp;
-                                <strong>{vtranslate('LBL_ADD_FIELD', $QUALIFIED_MODULE)}</strong>
-                            </button> 
-                        </span>
-                    </div>
-                    <input type="hidden" name="module" value="SPTips"/>
-                    <input type="hidden" name="parent" value="Settings"/>
-                    <input type="hidden" name="action" value="SaveRule"/>
-                    <input type="hidden" name="record" value="{$RULE_ID}"/>
-                    <input type="hidden" name="providerId" value="{$CURRENT_PROVIDER_ID}"/>
-                    <div class='modal-overlay-footer clearfix'>
-                        <div class="row clearfix">
-                            <div class=' textAlignCenter col-lg-12 col-md-12 col-sm-12 '>
-                                <button type='submit' class='btn btn-success saveButton' >{vtranslate('LBL_SAVE', $MODULE)}</button>&nbsp;&nbsp;
-                                <a class='cancelLink'  href="javascript:history.back()" type="reset">{vtranslate('LBL_CANCEL', $MODULE)}</a>
+
+
+
+                        <input type="hidden" name="module" value="SPTips"/>
+                        <input type="hidden" name="parent" value="Settings"/>
+                        <input type="hidden" name="action" value="SaveRule"/>
+                        <input type="hidden" name="record" value="{$RECORD_MODEL->getId()}"/>
+                        <input type="hidden" name="providerId" value="{$PROVIDER->getId()}"/>
+                        <div class='modal-overlay-footer clearfix'>
+                            <div class="row clearfix">
+                                <div class=' textAlignCenter col-lg-12 col-md-12 col-sm-12 '>
+                                    <button type='submit' class='btn btn-success saveButton' >{vtranslate('LBL_SAVE', $MODULE)}</button>&nbsp;&nbsp;
+                                    <a class='cancelLink'  href="javascript:history.back()" type="reset">{vtranslate('LBL_CANCEL', $MODULE)}</a>
+                                </div>
                             </div>
                         </div>
-                    </div>
-            </form>
+                </form>
+            </div>
         </div>
     </div>
 </div>
diff --git a/layouts/v7/modules/Settings/SPTips/Index.tpl b/layouts/v7/modules/Settings/SPTips/Index.tpl
index 20090c1..83cb56b 100644
--- a/layouts/v7/modules/Settings/SPTips/Index.tpl
+++ b/layouts/v7/modules/Settings/SPTips/Index.tpl
@@ -1,42 +1,34 @@
 {strip}
     <div class="container-fluid">
-        <div class="contents tabbable">
-            <ul class="nav nav-tabs massEditTabs" style="margin-bottom: 0;">
-                <li class="active"><a href="#providersTab" data-toggle="tab"><strong>{vtranslate('LBL_AVAILABLE_PROVIDERS',$QUALIFIED_MODULE)}</strong></a></li>
-                <li id="assignedToRoleTab"><a href="#rulesTab" data-toggle="tab"><strong>{vtranslate('LBL_RULES',$QUALIFIED_MODULE)}</strong></a></li>
-            </ul>
-        </div>
-
         <div class="tab-content layoutContent padding20 themeTableColor overflowVisible">
             <div class="tab-pane active" id="providersTab">	
                 <div id="pickListValuesTable">
-                <div class=" vt-default-callout vt-info-callout">
-                    <h4 class="vt-callout-header"><span class="fa fa-info-circle">&nbsp;&nbsp;</span>{vtranslate('LBL_INFORMATION', $QUALIFIED_MODULE)}</h4>
-                    <p>{vtranslate('LBL_PROVIDERS_INFO', $QUALIFIED_MODULE)}</p>
-                </div>
-                
-                <div class="controls fieldValue col-sm-6">
-                    {if empty($CURRENT_PROVIDER_ID)}
-                        <h5>{vtranslate('LBL_SELECT_PROVIDER', $QUALIFIED_MODULE)}</h5>
-                    {/if}
-                    <select id="existingProviders" class="select2" name="modulesList" style="min-width: 250px;">
-                        {if empty($CURRENT_PROVIDER_ID)}
-                            <option value=''></option>
-                        {/if}
-                        {foreach item=CURRENT_PROVIDER key=KEY from=$EXISTING_PROVIDERS}
-                            <option value="{$CURRENT_PROVIDER}" data-viewmodule="{$CURRENT_PROVIDER}" data-provider_id="{$KEY}" 
-                                {if $KEY eq $CURRENT_PROVIDER_ID}selected{/if}>{vtranslate($CURRENT_PROVIDER, $MODULE_NAME)}</option>
-                        {/foreach}   
-                    </select>
-                        <button id="selectProvider" class="btn btn-default"><strong>{vtranslate('LBL_SELECT', $QUALIFIED_MODULE)}</strong></button>
-                </div>
+                    <div class=" vt-default-callout vt-info-callout">
+                        <h4 class="vt-callout-header"><span class="fa fa-info-circle">&nbsp;</span>{vtranslate('LBL_INFORMATION', $QUALIFIED_MODULE)}</h4>
+                        <ul>
+                            <li>{vtranslate('LBL_DIFFERENT_RULES_FOR_PROVIDERS', $QUALIFIED_MODULE)}</li>
+                            <li>{vtranslate('LBL_AUTOCOMPLETE_FIELDS', $QUALIFIED_MODULE)}</li>
+                        </ul>
+                    </div>
+
+                    <div class="controls fieldValue col-sm-6 marginTop10px">
+                        <select id="existingProviders" class="select2" name="modulesList" style="min-width: 250px;">
+                            {foreach item=PROVIDER from=$EXISTING_PROVIDERS}
+                                <option value="{$PROVIDER->getId()}" {if $PROVIDER->getId() eq $SELECTED_PROVIDER->getId()} selected {/if}> 
+                                    {vtranslate($PROVIDER->getName(), $MODULE_NAME)}
+                                </option>
+                            {/foreach}   
+                        </select>
+                        <button id="editProvider" type="button" class="btn btn-default marginLeft10px">
+                            <strong>{vtranslate('LBL_EDIT_PROVIDER', $QUALIFIED_MODULE)}</strong>
+                        </button>
+                    </div>
                 </div>
             </div>
-            <div class="tab-pane form-horizontal row" id="rulesTab">
-                <div id="rulesContainer">
-                    {include file="ListRules.tpl"|@vtemplate_path:$QUALIFIED_MODULE}
-                </div>	
-            </div>
+
+            <div id="rulesContainer">
+                {include file="ListRules.tpl"|@vtemplate_path:$QUALIFIED_MODULE}
+            </div>	
         </div>
     </div>
 {/strip}	
diff --git a/layouts/v7/modules/Settings/SPTips/ListRules.tpl b/layouts/v7/modules/Settings/SPTips/ListRules.tpl
index d15de03..36f60c9 100644
--- a/layouts/v7/modules/Settings/SPTips/ListRules.tpl
+++ b/layouts/v7/modules/Settings/SPTips/ListRules.tpl
@@ -1,52 +1,31 @@
 {*
 /*+**********************************************************************************
- * The contents of this file are subject to the vtiger CRM Public License Version 1.1
- * ("License"); You may not use this file except in compliance with the License
- * The Original Code is: SalesPlatform Ltd
- * The Initial Developer of the Original Code is SalesPlatform Ltd.
- * All Rights Reserved.
- * If you have any questions or comments, please email: devel@salesplatform.ru
- ************************************************************************************/
+* The contents of this file are subject to the vtiger CRM Public License Version 1.1
+* ("License"); You may not use this file except in compliance with the License
+* The Original Code is: SalesPlatform Ltd
+* The Initial Developer of the Original Code is SalesPlatform Ltd.
+* All Rights Reserved.
+* If you have any questions or comments, please email: devel@salesplatform.ru
+************************************************************************************/
 *}
 {strip}
     <div class="col-sm-12 col-xs-12 ">
-        <div class=" vt-default-callout vt-info-callout">
-            <h4 class="vt-callout-header"><span class="fa fa-info-circle">&nbsp;</span>{vtranslate('LBL_INFORMATION', $QUALIFIED_MODULE)}</h4>
-            <ul>
-                <li>{vtranslate('LBL_DIFFERENT_RULES_FOR_PROVIDERS', $QUALIFIED_MODULE)}</li>
-                <li>{vtranslate('LBL_AUTOCOMPLETE_FIELDS', $QUALIFIED_MODULE)}</li>
-            </ul>
-        </div>
-        
-        <div id="listview-actions" class="listview-actions-container">
-            <label class="muted control-label">{vtranslate('LBL_PROVIDER', $QUALIFIED_MODULE)}&nbsp;&nbsp;</label>
-            <select name="existingProviders" class="select2" style="min-width: 250px;">
-                {foreach item=CURRENT_PROVIDER key=KEY from=$EXISTING_PROVIDERS}
-                    {if empty($CURRENT_PROVIDER_ID)}
-                        <option value=''></option>
-                    {/if}
-                    <option value="{$CURRENT_PROVIDER}" data-viewmodule="{$CURRENT_PROVIDER}" data-provider_id="{$KEY}" 
-                        {if $KEY eq $CURRENT_PROVIDER_ID}selected{/if}>{vtranslate($CURRENT_PROVIDER, $MODULE_NAME)}</option>
-                {/foreach}
-            </select>
-            <button id="addRule" class="btn btn-default pull-right">
-                <strong>{vtranslate('LBL_CREATE_RULE', $QUALIFIED_MODULE)}</strong>
-            </button>
-            <br><br>
-            <button id="editProvider" type="button" class="btn btn-default pull-right">
-                <strong>{vtranslate('LBL_EDIT_PROVIDER', $QUALIFIED_MODULE)}</strong>
-            </button>
+        <div id="listview-actions" class="listview-actions-container marginTop10px">
+
             <div class="list-content row">
                 <div class="col-sm-12 col-xs-12 ">
-                    <div id="table-content" class="table-container" style="padding-top:0px !important;">
+                    <h4 style="margin-top: 30px;">{vtranslate('LBL_EXISTING_RULES', $QUALIFIED_MODULE)}</h4>
+                    
+                    <div class="marginTop15px">
+                        <button id="addRule" class="btn btn-default pull-left marginBottom10px">
+                            <strong>{vtranslate('LBL_CREATE_RULE', $QUALIFIED_MODULE)}</strong>
+                        </button>
                         {include file="RulesTable.tpl"|@vtemplate_path:$QUALIFIED_MODULE}
                     </div>
-                    <div id="scroller_wrapper" class="bottom-fixed-scroll">
-                        <div id="scroller" class="scroller-div"></div>
-                    </div>
+                    
                 </div>
             </div>
         </div>
     </div>
-    
+
 {/strip}
\ No newline at end of file
diff --git a/layouts/v7/modules/Settings/SPTips/RulesTable.tpl b/layouts/v7/modules/Settings/SPTips/RulesTable.tpl
index 1e8cf30..2592b98 100644
--- a/layouts/v7/modules/Settings/SPTips/RulesTable.tpl
+++ b/layouts/v7/modules/Settings/SPTips/RulesTable.tpl
@@ -1,63 +1,65 @@
 {*
 /*+**********************************************************************************
- * The contents of this file are subject to the vtiger CRM Public License Version 1.1
- * ("License"); You may not use this file except in compliance with the License
- * The Original Code is: SalesPlatform Ltd
- * The Initial Developer of the Original Code is SalesPlatform Ltd.
- * All Rights Reserved.
- * If you have any questions or comments, please email: devel@salesplatform.ru
- ************************************************************************************/
+* The contents of this file are subject to the vtiger CRM Public License Version 1.1
+* ("License"); You may not use this file except in compliance with the License
+* The Original Code is: SalesPlatform Ltd
+* The Initial Developer of the Original Code is SalesPlatform Ltd.
+* All Rights Reserved.
+* If you have any questions or comments, please email: devel@salesplatform.ru
+************************************************************************************/
 *}
 {strip}
-<table id="listview-table" class="table listview-table rulesTable">
-    <thead>
-        <tr class="listViewContentHeader">
-            <th style="width:25%">
-                {vtranslate('LBL_EXISTING_RULES', $QUALIFIED_MODULE)}
-            </th>
-        </tr>
-    </thead>
-    <tbody class="overflow-y">
-        <tr class="listViewEntries">
-            <td class="listViewEntryValue"></td>
-            <td class="listViewEntryValue">{vtranslate('LBL_MODULE', $QUALIFIED_MODULE)}</td>
-            <td class="listViewEntryValue">{vtranslate('LBL_SELECTED_FIELD', $QUALIFIED_MODULE)}</td>
-            <td class="listViewEntryValue">{vtranslate('LBL_FILL_IN_FIELDS', $QUALIFIED_MODULE)}</td>
-        </tr>
-
-        {foreach key=key item=ITEM from=$EXISTING_RULES}
-            {assign var=RULE_ID value=$ITEM->get('ruleId')}
-            {assign var=DEPENDENT_FIELDS value=$ITEM->get('targetFields')}
-            {assign var=PROVIDER_FIELDS value=$ITEM->get('targetProviderFields')}
-            {assign var=MODULE_NAME value=$ITEM->get('sourceModule')}
-            {assign var=SOURCE_FIELD value=$ITEM->get('sourceField')}
-            {assign var=SOURCE_PROVIDER_FIELD value=$ITEM->get('sourceProviderField')}
-
-            <tr class="listViewEntries">
-                <td width="10%">
-                    <div class="table-actions" style = "width:60px">
-                        <a href="index.php?module=SPTips&view=EditRules&parent=Settings&record={$RULE_ID}">
-                            <i class="fa fa-pencil"></i>
-                        </a>
-                        &nbsp;&nbsp;
-                        <a role="javascript:void(0)" class="deleteRule" data-rule-id="{$RULE_ID}">
-                            <i class="fa fa-trash"></i>
-                        </a>
-                    </div>
-                </td>
-                <td class="listViewEntryValue">{vtranslate($MODULE_NAME, $MODULE_NAME)}</td>
-                <td class="listViewEntryValue">{vtranslate($SOURCE_FIELD, $MODULE_NAME)}&nbsp;&nbsp;<i class="fa fa-arrow-left">&nbsp;&nbsp;</i>{vtranslate($SOURCE_PROVIDER_FIELD, $QUALIFIED_MODULE)}</td>
-                <td class="listViewEntryValue">
-                    <ul class="lists-menu">
-                        {foreach item=LABEL key=FIELD from=$DEPENDENT_FIELDS}
-                            <li style="font-size:12px;" class="listViewFilter" >
-                                {vtranslate($LABEL, $MODULE_NAME)}&nbsp;&nbsp;<i class="fa fa-arrow-left">&nbsp;&nbsp;</i> {vtranslate($PROVIDER_FIELDS[$FIELD], $QUALIFIED_MODULE)}
-                            </li>
-                        {/foreach}
-                    </ul>
-                </td>
+    <table class="table table-bordered rulesTable">
+        <thead>
+            <tr class="listViewContentHeader">
+                <th class="listViewEntryValue"></th>
+                <th class="listViewEntryValue">{vtranslate('LBL_MODULE', $QUALIFIED_MODULE)}</th>
+                <th class="listViewEntryValue">{vtranslate('LBL_TIP_TYPE', $QUALIFIED_MODULE)}</th>
+                <th class="listViewEntryValue">{vtranslate('LBL_SELECTED_AUTOCFOMPLETE_FIELD', $QUALIFIED_MODULE)}</th>
+                <th class="listViewEntryValue">{vtranslate('LBL_FILL_IN_FIELDS', $QUALIFIED_MODULE)}</th>
             </tr>
-        {/foreach}
-    </tbody>
-</table>
+        </thead>
+        <tbody>
+            {foreach key=key item=ITEM from=$EXISTING_RULES}
+                {assign var=TIP_FIELD value=$ITEM->getTipFieldModel()}
+
+                <tr class="listViewEntries">
+                    <td width="5%">
+                        <div class="table-actions text-center">
+                            <a href="index.php?module=SPTips&view=EditRules&parent=Settings&record={$ITEM->getId()}&providerId={$ITEM->get('provider_id')}">
+                                <i class="fa fa-pencil"></i>
+                            </a>
+                            &nbsp;&nbsp;
+                            <a href="#" class="deleteRule" data-rule-id="{$ITEM->getId()}">
+                                <i class="fa fa-trash"></i>
+                            </a>
+                        </div>
+                    </td>
+                    <td class="listViewEntryValue">{vtranslate($ITEM->getModuleName(), $ITEM->getModuleName())}</td>
+                    <td class="listViewEntryValue">{vtranslate($ITEM->getType(), $QUALIFIED_MODULE)}</td>
+                    <td class="listViewEntryValue">
+                        {if $TIP_FIELD}
+                            {vtranslate($TIP_FIELD->get('label'), $ITEM->getModuleName())}
+                        {else}
+                            {vtranslate($ITEM->getTipFieldName(), $ITEM->getModuleName())}
+                        {/if}
+                    </td>
+                    <td class="listViewEntryValue">
+                        <ul class="lists-menu">
+                            {foreach item=DEPENDENT_FIELD_MODEL from=$ITEM->getDependentFields()}
+                                {assign var=VTIGER_FIELD value=$DEPENDENT_FIELD_MODEL->getVtigerField()}
+                                <li style="font-size:12px;" class="listViewFilter" >
+                                    {if $VTIGER_FIELD}
+                                        {vtranslate($VTIGER_FIELD->get('label'), $ITEM->getModuleName())} &nbsp;&nbsp; <i class="fa fa-arrow-left"> &nbsp;&nbsp; </i> {vtranslate($DEPENDENT_FIELD_MODEL->getProviderFieldName(), $QUALIFIED_MODULE)}
+                                    {else}
+                                        {vtranslate($DEPENDENT_FIELD_MODEL->getVtigerFieldName(), $ITEM->getModuleName())}&nbsp;&nbsp;<i class="fa fa-arrow-left">&nbsp;&nbsp;</i> {vtranslate($DEPENDENT_FIELD_MODEL->getProviderFieldName(), $QUALIFIED_MODULE)}
+                                    {/if}
+                                </li>
+                            {/foreach}
+                        </ul>
+                    </td>
+                </tr>
+            {/foreach}
+        </tbody>
+    </table>
 {/strip}
\ No newline at end of file
diff --git a/layouts/v7/modules/Settings/SPTips/resources/EditRules.js b/layouts/v7/modules/Settings/SPTips/resources/EditRules.js
new file mode 100644
index 0000000..0c54c75
--- /dev/null
+++ b/layouts/v7/modules/Settings/SPTips/resources/EditRules.js
@@ -0,0 +1,154 @@
+/*+**********************************************************************************
+ * The Original Code is: SalesPlatform Ltd
+ * The Initial Developer of the Original Code is SalesPlatform Ltd.
+ * Copyright (C) 2011-2015 SalesPlatform Ltd
+ * All Rights Reserved.                                                              
+ * Source code may not be redistributed unless expressly permitted by SalesPlatform Ltd.
+ * If you have any questions or comments, please email: devel@salesplatform.ru
+ ************************************************************************************/
+
+Settings_Vtiger_Index_Js("Settings_SPTips_EditRules_Js", {}, {
+    
+    getCurrentModuleName : function() {
+        return jQuery('[name="module"]').val();
+    },
+
+    registerEventForChangingModule : function() {
+        var thisInstance = this;
+        var form = jQuery("#rulesForm");
+        form.find('[name="sourceModule"]').on('change', function() {
+            thisInstance.loadRuleSettings().then(
+                function(data) {
+                    thisInstance.registerEventForChangingModule();
+                    thisInstance.registerChangeTipType();
+                    thisInstance.registerEventForAddingNewField();
+                }
+            );
+        });
+    },
+    
+    registerChangeTipType : function() {
+        var thisInstance = this;
+        var form = jQuery("#rulesForm");
+        form.find('[name="type"]').on('change', function() {
+            thisInstance.loadRuleSettings().then(
+                function(data) {
+                    thisInstance.registerEventForChangingModule();
+                    thisInstance.registerChangeTipType();
+                    thisInstance.registerEventForAddingNewField();
+                }
+            );
+        });
+    },
+    
+    getSourceModule : function() {
+        return jQuery("#rulesForm").find('[name="sourceModule"]').val();
+    },
+    
+    getTipType : function() {
+        return jQuery("#rulesForm").find('[name="type"]').val();
+    },
+    
+    loadRuleSettings : function() {
+        var thisInstance = this;
+        var aDeferred = jQuery.Deferred();
+        app.helper.showProgress();
+        var data = {
+            module: thisInstance.getCurrentModuleName(),
+            parent: app.getParentModuleName(),
+            view: 'EditRules',
+            record: jQuery('[name="record"]').val(),
+            sourceModule: thisInstance.getSourceModule(),
+            type : thisInstance.getTipType(),
+            providerId: jQuery('[name="providerId"]').val()
+        };
+        
+        app.request.pjax({data: data}).then(
+            function(error, data) {
+                app.helper.hideProgress();
+                var container = jQuery('.settingsPageDiv div');
+                container.html(data);
+                vtUtils.showSelect2ElementView(container.find('select.select2'));
+                aDeferred.resolve(data);
+            },
+            function(error) {
+                app.helper.hideProgress();
+                aDeferred.reject(error);
+            }
+        );
+        return aDeferred.promise();
+        
+    },
+    
+    registerEventForAddingNewField : function() {
+        var thisInstance = this;
+        var lineItemCopy = jQuery('.lineItemCopy');
+        // before copy we need to disable select2 on the select element
+        lineItemCopy.find('select').each(function(index, elem) {
+            jQuery(elem).select2('destroy');
+            jQuery(elem).attr('disabled','disabled');
+        });
+        
+        jQuery("#addDependendField").on('click', function(e) {
+            // restore select2 after copy
+            var newElement = lineItemCopy.clone().appendTo('.editViewContents');
+            newElement.find('select').each(function(index, elem) {
+                jQuery(elem).attr("data-rule-required", "true");
+                jQuery(elem).select2();
+                jQuery(elem).removeAttr('disabled');
+            });
+            
+            newElement.removeClass('lineItemCopy');
+            newElement.removeClass('hide');
+            
+            thisInstance.registerEventForDeleteFieldsItemLine();
+        });
+    },
+    
+    registerEventForDeleteFieldsItemLine : function() {
+        jQuery('.deleteFieldsItemLine').on('click', function(e) {
+            var lineWithItems = jQuery(e.currentTarget).closest('div.form-group');
+            lineWithItems.remove();
+        });
+    },
+    
+    loadFieldsForNewProvider : function(selectedProvider) {
+        var aDeferred = jQuery.Deferred();
+        app.helper.showProgress();
+        var sourceModule = jQuery('[name="sourceModule"]').val();
+        var data = {
+            module: this.getCurrentModuleName(),
+            parent: app.getParentModuleName(),
+            view: 'EditRules',
+            selectedProvider: selectedProvider,
+            sourceModule: sourceModule
+        };
+        
+        app.request.pjax({data: data}).then(
+            function(error, data) {
+                app.helper.hideProgress();
+                var container = jQuery('.settingsPageDiv div');
+                container.html(data);
+                //register all select2 Elements
+                vtUtils.showSelect2ElementView(container.find('select.select2'));
+                aDeferred.resolve(data);
+            },
+            function(error) {
+                app.helper.hideProgress();
+                aDeferred.reject(error);
+            }
+        );
+        return aDeferred.promise();
+    },
+    
+    registerEvents: function () {
+        this.registerEventForChangingModule();
+        this.registerChangeTipType();
+        this.registerEventForAddingNewField();
+        this.registerEventForDeleteFieldsItemLine();
+    }
+});
+
+
+
+
diff --git a/layouts/v7/modules/Settings/SPTips/resources/Index.js b/layouts/v7/modules/Settings/SPTips/resources/Index.js
new file mode 100644
index 0000000..e31dcba
--- /dev/null
+++ b/layouts/v7/modules/Settings/SPTips/resources/Index.js
@@ -0,0 +1,116 @@
+/*+**********************************************************************************
+ * The Original Code is: SalesPlatform Ltd
+ * The Initial Developer of the Original Code is SalesPlatform Ltd.
+ * Copyright (C) 2011-2015 SalesPlatform Ltd
+ * All Rights Reserved.                                                              
+ * Source code may not be redistributed unless expressly permitted by SalesPlatform Ltd.
+ * If you have any questions or comments, please email: devel@salesplatform.ru
+ ************************************************************************************/
+
+Settings_Vtiger_Index_Js("Settings_SPTips_Index_Js", {}, {
+    
+    registerEventForEditProvider : function() {
+        var thisInstance = this;
+        jQuery('#editProvider').on('click', function() {
+            var selectedProviderId = thisInstance.getSelectedProviderId();
+            if (selectedProviderId) {
+                location.href = "index.php?module=SPTips&view=EditProvider&parent=Settings&providerId=" + selectedProviderId;
+            }
+        });
+    },
+    
+    registerEventForAddNewRule : function() {
+        var thisInstance = this;
+        jQuery('#addRule').on('click', function() {
+            var selectedProviderId = thisInstance.getSelectedProviderId();
+            if (selectedProviderId) {
+                location.href = "index.php?module=SPTips&view=EditRules&parent=Settings&providerId=" + selectedProviderId;
+            }
+        });
+    },
+    
+    getSelectedProviderId : function() {
+        return jQuery('#existingProviders').find(':selected').val();
+    },
+    
+    registerEventForLoadRulesTable : function() {
+        var thisInstance = this;
+        jQuery('#existingProviders').on('change', function() {
+            thisInstance.loadRulesTable();
+        });
+    },
+    
+    loadRulesTable : function() {
+        var thisInstance = this;
+        var params = {
+            module: 'Settings:SPTips',
+            view: 'ListRules',
+            selectedProvider : this.getSelectedProviderId()
+        };
+        
+        var aDeferred = jQuery.Deferred();
+        app.request.post({data:params}).then(
+            function(err, response){
+                if (empty(err) && !empty(response)) {
+                    jQuery('.rulesTable').html(response);
+                    thisInstance.registerEventForDeleteRule();
+                }
+                aDeferred.resolve(response);
+            },
+            function(error){
+                aDeferred.reject();
+            }
+        );
+
+        return aDeferred.promise();
+    },
+    
+    registerEventForDeleteRule : function() {
+        jQuery('.deleteRule').on('click', function(e) {
+            app.helper.showProgress();
+            e.preventDefault();
+            var ruleId = jQuery(e.currentTarget).attr('data-rule-id');
+            if (ruleId !== undefined) {
+                var data = {
+                    module: 'SPTips',
+                    parent: 'Settings',
+                    action: 'DeleteRule',
+                    record: ruleId
+                };
+            }
+            
+            
+            app.request.post({'data': data}).then(
+                function(error, responseObj) {
+                    if (empty(error) && !empty(responseObj)) {
+                        if (responseObj['success']) {
+                            jQuery(e.currentTarget).closest("tr").remove();
+                        }
+                        app.helper.hideProgress();
+                    } else {
+                        app.helper.hideProgress();
+                        app.helper.showErrorNotification({
+                            message: app.vtranslate('JS_UNSUCCESSFULL')
+                        });
+                    }
+                }, 
+                function error(error) {
+                    
+                }
+            );
+    
+            return false;
+        });
+    },
+    
+    registerEvents: function () {
+        this.registerEventForLoadRulesTable();
+        this.registerEventForEditProvider();
+        this.registerEventForAddNewRule();
+        this.registerEventForDeleteRule();
+    }
+});
+
+
+
+
diff --git a/layouts/v7/modules/Settings/SPVoipIntegration/Edit.tpl b/layouts/v7/modules/Settings/SPVoipIntegration/Edit.tpl
index 835eb27..be33603 100644
--- a/layouts/v7/modules/Settings/SPVoipIntegration/Edit.tpl
+++ b/layouts/v7/modules/Settings/SPVoipIntegration/Edit.tpl
@@ -14,7 +14,11 @@
                 <input type="hidden" name="action" value="SaveAjax"/>
                 <input type="hidden" name="parent" value="Settings"/>
 
-
+                <div class="pull-left marginBottom10px" style="width: 100%;"> 
+                    <label class="pull-left marginRight10px marginTop5px">{vtranslate('LBL_USE_CLICK_TO_CALL', $QUALIFIED_MODULE)}</label>
+                    <input type="checkbox" name="use_click_to_call" {if Settings_SPVoipIntegration_Record_Model::isClickToCallEnabled()} checked {/if} />
+                </div>
+                
                 <div class="pull-left" style="width: 100%;"> 
                     <label class="pull-left marginRight10px marginTop5px">{vtranslate('LBL_DEFAULT_PROVIDER', $QUALIFIED_MODULE)}</label>
                     <select name="default_provider" class="select2" style="min-width: 150px;">
@@ -23,7 +27,7 @@
                         {/foreach}
                     </select>
                 </div>
-
+                
                 {foreach key=PROVIDER_NAME item=PROVIDER_FIELDS_INFO from=$FIELDS_INFO}
                     <div class="widget_header row-fluid providerData {if $PROVIDER_NAME neq $DEFAULT_PROVIDER} hide {/if}" data-provider="{$PROVIDER_NAME}">
                         <div class="pull-left width100per">
diff --git a/layouts/v7/modules/Settings/SPVoipIntegration/Index.tpl b/layouts/v7/modules/Settings/SPVoipIntegration/Index.tpl
index d2cdae3..484b578 100644
--- a/layouts/v7/modules/Settings/SPVoipIntegration/Index.tpl
+++ b/layouts/v7/modules/Settings/SPVoipIntegration/Index.tpl
@@ -20,6 +20,20 @@
                 <tbody>
                     <tr>
                         <td width="25%">
+                            <label class="muted pull-right marginRight10px text-right">{vtranslate('LBL_USE_CLICK_TO_CALL', $QUALIFIED_MODULE)}</label>
+                        </td>
+                        <td style="border-left: none;">
+                            <span>
+                                {if Settings_SPVoipIntegration_Record_Model::isClickToCallEnabled()}  
+                                    {vtranslate('LBL_YES', $QUALIFIED_MODULE)}
+                                {else} 
+                                    {vtranslate('LBL_NO', $QUALIFIED_MODULE)}
+                                {/if}
+                            </span>
+                        </td>
+                    </tr>
+                    <tr>
+                        <td width="25%">
                             <label class="muted pull-right marginRight10px ">{vtranslate('LBL_DEFAULT_PROVIDER', $QUALIFIED_MODULE)}</label>
                         </td>
                         <td style="border-left: none;">
diff --git a/layouts/v7/modules/Users/Login.tpl b/layouts/v7/modules/Users/Login.tpl
index 5791dc2..a154fbd 100644
--- a/layouts/v7/modules/Users/Login.tpl
+++ b/layouts/v7/modules/Users/Login.tpl
@@ -91,7 +91,7 @@
                 SalesPlatform.ru begin
 			height: 110px;
                 SalesPlatform.ru end
-                
+
                 *}
 			margin: 0 auto;
 			padding-top: 40px;
@@ -182,7 +182,7 @@
 			overflow: hidden;
 			background: transparent;
 		}
-                
+
         {* SalesPlatform begin*}
                 .linksNavBar {
                     position: absolute;
@@ -190,7 +190,7 @@
                     right: 15px;
                 }
                 .helpLinks{
-                    float: right; 
+                    float: right;
                     margin-top: 20px;
                     background: #efefef;
                     border: 1px solid #fff;
@@ -199,14 +199,7 @@
                     box-shadow: -2px 0 3px;
                 }
                 .helpLinks a{
-                    padding: 10px; 
-                }
-                .footer-icons{
-                    position: absolute;
-                    bottom: -24px;
-                    right: 10px;
-                    text-align: right;
-                    min-width: 280px;
+                    padding: 10px;
                 }
         {* SalesPlatform end*}
 
@@ -237,22 +230,22 @@
         {* SalesPlatform begin*}
         <div class="linksNavBar">
             <div class="helpLinks">
-                <a href="http://community.salesplatform.ru/">{vtranslate('LBL_COMMUNITY', $MODULE)}</a> | 
-                <a href="http://community.salesplatform.ru/forums/">{vtranslate('LBL_FORUMS', $MODULE)}</a> | 
-                <a href="http://salesplatform.ru/wiki/index.php/SalesPlatform_vtiger_crm_7">{vtranslate('LBL_WIKI', $MODULE)}</a> | 
-                <a href="http://community.salesplatform.ru/blogs/">{vtranslate('LBL_BLOGS', $MODULE)}</a> | 
+                <a href="http://community.salesplatform.ru/">{vtranslate('LBL_COMMUNITY', $MODULE)}</a> |
+                <a href="http://community.salesplatform.ru/forums/">{vtranslate('LBL_FORUMS', $MODULE)}</a> |
+                <a href="http://salesplatform.ru/wiki/index.php/SalesPlatform_vtiger_crm_7">{vtranslate('LBL_WIKI', $MODULE)}</a> |
+                <a href="http://community.salesplatform.ru/blogs/">{vtranslate('LBL_BLOGS', $MODULE)}</a> |
                 <a href="http://salesplatform.ru/">SalesPlatform.ru</a>
             </div>
         </div>
         {* SalesPlatform end*}
         <span class="app-nav"></span>
-            
+
 	<div class="col-lg-12">
 		{*
                 SalesPlatform.ru begin
                 <div class="col-lg-5">
                 SalesPlatform.ru end
-                
+
                 *}
 			<div class="loginDiv widgetHeight">
 		{*SalesPlatform.ru begin*}
@@ -260,7 +253,7 @@
                 {*
 				<img class="img-responsive user-logo" src="layouts/v7/resources/Images/vtiger.png">
                 SalesPlatform.ru end
-                
+
                 *}
 				<div>
 					<span class="{if !$ERROR}hide{/if} failureMessage" id="validationMessage">{$MESSAGE}</span>
@@ -402,7 +395,7 @@
 				</div>
 			</div>
                         SalesPlatform.ru end
-                
+
                 *}
 		</div>
 
diff --git a/layouts/v7/modules/Vtiger/DetailViewActions.tpl b/layouts/v7/modules/Vtiger/DetailViewActions.tpl
index da59308..95ecd8d 100644
--- a/layouts/v7/modules/Vtiger/DetailViewActions.tpl
+++ b/layouts/v7/modules/Vtiger/DetailViewActions.tpl
@@ -52,6 +52,7 @@
                 </button>
             {/foreach}
             {if $DETAILVIEW_LINKS['DETAILVIEW']|@count gt 0}
+                {*SalesPlatform.ru begin
                 <button class="btn btn-default dropdown-toggle" data-toggle="dropdown" href="javascript:void(0);">
                    {vtranslate('LBL_MORE', $MODULE_NAME)}&nbsp;&nbsp;<i class="caret"></i>
                 </button>
@@ -69,7 +70,28 @@
                             </li>
                         {/if}
                     {/foreach}
-                </ul>
+                </ul>*}
+                <div class="btn-group">
+                    <button class="btn btn-default dropdown-toggle" data-toggle="dropdown" href="javascript:void(0);">
+                       {vtranslate('LBL_MORE', $MODULE_NAME)}&nbsp;&nbsp;<i class="caret"></i>
+                    </button>
+                    <ul class="dropdown-menu dropdown-menu-right">
+                        {foreach item=DETAIL_VIEW_LINK from=$DETAILVIEW_LINKS['DETAILVIEW']}
+                            {if $DETAIL_VIEW_LINK->getLabel() eq ""} 
+                                <li class="divider"></li>	
+                                {else}
+                                <li id="{$MODULE_NAME}_detailView_moreAction_{Vtiger_Util_Helper::replaceSpaceWithUnderScores($DETAIL_VIEW_LINK->getLabel())}">
+                                    {if $DETAIL_VIEW_LINK->getUrl()|strstr:"javascript"} 
+                                        <a href='{$DETAIL_VIEW_LINK->getUrl()}'>{vtranslate($DETAIL_VIEW_LINK->getLabel(), $MODULE_NAME)}</a>
+                                    {else}
+                                        <a href='{$DETAIL_VIEW_LINK->getUrl()}&app={$SELECTED_MENU_CATEGORY}' >{vtranslate($DETAIL_VIEW_LINK->getLabel(), $MODULE_NAME)}</a>
+                                    {/if}
+                                </li>
+                            {/if}
+                        {/foreach}
+                    </ul>
+                </div>
+                {*SalesPlatform.ru end*}
             {/if}
             </div>
             {if !{$NO_PAGINATION}}
diff --git a/layouts/v7/modules/Vtiger/EditView.tpl b/layouts/v7/modules/Vtiger/EditView.tpl
index da03859..6f2304f 100644
--- a/layouts/v7/modules/Vtiger/EditView.tpl
+++ b/layouts/v7/modules/Vtiger/EditView.tpl
@@ -77,6 +77,10 @@
 								<input type="hidden" name="returnrelationId" value="{$RETURN_RELATION_ID}" />
 								<input type="hidden" name="returnparent" value="{$RETURN_PARENT_MODULE}" />
 							{/if}
+                                                        {if isset($MSG_NO) && isset($FOLDER_NAME)}
+								<input type="hidden" name="msgno" value="{$MSG_NO}" />
+                                                                <input type="hidden" name="foldername" value="{$FOLDER_NAME}" />
+							{/if}
 							{include file="partials/EditViewContents.tpl"|@vtemplate_path:$MODULE}
 						</div>
 					</div>
diff --git a/layouts/v7/modules/Vtiger/Footer.tpl b/layouts/v7/modules/Vtiger/Footer.tpl
index 1637385..38718ef 100644
--- a/layouts/v7/modules/Vtiger/Footer.tpl
+++ b/layouts/v7/modules/Vtiger/Footer.tpl
@@ -11,8 +11,14 @@
         {* SalesPlatform.ru begin *}
         <div class="pull-right footer-icons">
             <small>{vtranslate('LBL_CONNECT_WITH_US', $MODULE)}&nbsp;</small>
-            <a href="http://community.salesplatform.ru/"><img src="layouts/vlayout/skins/images/forum.png"></a>
-            &nbsp;<a href="https://twitter.com/salesplatformru"><img src="layouts/vlayout/skins/images/twitter.png"></a>
+            <!-- SalesPlatform begin #5822 -->
+            <!-- <a href="http://community.salesplatform.ru/"><img src="layouts/vlayout/skins/images/forum.png"></a>
+            &nbsp;<a href="https://twitter.com/salesplatformru"><img src="layouts/vlayout/skins/images/twitter.png"></a> -->
+            <a href="http://community.salesplatform.ru/" target="_blank" title="{vtranslate('Community', $MODULE)}"><i class="fa fa-comments"></i></a>
+            <a href="https://twitter.com/salesplatformru" target="_blank" title="Twitter"><i class="fa fa-twitter"></i></a>
+            <a href="https://vk.com/salesplatform" target="_blank" title="Vk"><i class="fa fa-vk"></i></a>
+            <a href="https://youtube.com/salesplatform" target="_blank" title="YouTube"><i class="fa fa-youtube-play"></i></a>
+            <!-- SalesPlatform end -->
         </div>
         {* SalesPlatform.ru end *}
 	<p>
@@ -20,7 +26,7 @@
                 {*Powered by vtiger CRM - 7.0&nbsp;&nbsp;© 2004 - {date('Y')}&nbsp;&nbsp;*}
                 {*<a href="//www.vtiger.com" target="_blank">Vtiger</a>&nbsp;|&nbsp;*}
                 {*<a href="https://www.vtiger.com/privacy-policy" target="_blank">Privacy Policy</a>*}
-                
+
             {vtranslate('POWEREDBY')} {$VTIGER_VERSION} &nbsp;
             &copy; 2004 - {date('Y')}&nbsp&nbsp;
             <a href="//www.vtiger.com" target="_blank">vtiger.com</a>
@@ -33,7 +39,7 @@
 </footer>
 </div>
 <div id='overlayPage'>
-	<!-- arrow is added to point arrow to the clicked element (Ex:- TaskManagement), 
+	<!-- arrow is added to point arrow to the clicked element (Ex:- TaskManagement),
 	any one can use this by adding "show" class to it -->
 	<div class='arrow'></div>
 	<div class='data'>
diff --git a/layouts/v7/modules/Vtiger/QuickCreate.tpl b/layouts/v7/modules/Vtiger/QuickCreate.tpl
index cae8561..cf85642 100644
--- a/layouts/v7/modules/Vtiger/QuickCreate.tpl
+++ b/layouts/v7/modules/Vtiger/QuickCreate.tpl
@@ -20,6 +20,10 @@
                 {include file="ModalHeader.tpl"|vtemplate_path:$MODULE TITLE=$HEADER_TITLE}
                     
                 <div class="modal-body">
+                    {if $CONTACT_ID}
+                        <input type="hidden" name="contact_id" value="{$CONTACT_ID}" />
+                    {/if}
+                    
                     {if !empty($PICKIST_DEPENDENCY_DATASOURCE)}
                         <input type="hidden" name="picklistDependency" value='{Vtiger_Util_Helper::toSafeHTML($PICKIST_DEPENDENCY_DATASOURCE)}' />
                     {/if}
@@ -109,7 +113,7 @@
                             {assign var=BUTTON_LABEL value={vtranslate('LBL_SAVE', $MODULE)}}
                         {/if}
                         {assign var="EDIT_VIEW_URL" value=$MODULE_MODEL->getCreateRecordUrl()}
-                        <button class="btn btn-default" id="goToFullForm" data-edit-view-url="{$EDIT_VIEW_URL}" type="button"><strong>{vtranslate('LBL_GO_TO_FULL_FORM', $MODULE)}</strong></button>
+                        <button class="btn btn-default" id="goToFullForm" data-edit-view-url="{$EDIT_VIEW_URL}{if isset($MSG_NO) && isset($FOLDER_NAME)}&msgno={$MSG_NO}&foldername={$FOLDER_NAME}{/if}{if isset($CONTACT_ID)}&contact_id={$CONTACT_ID}{/if}" type="button"><strong>{vtranslate('LBL_GO_TO_FULL_FORM', $MODULE)}</strong></button>
                         <button {if $BUTTON_ID neq null} id="{$BUTTON_ID}" {/if} class="btn btn-success" type="submit" name="saveButton"><strong>{$BUTTON_LABEL}</strong></button>
                         <a href="#" class="cancelLink" type="reset" data-dismiss="modal">{vtranslate('LBL_CANCEL', $MODULE)}</a>
                     </center>
diff --git a/layouts/v7/modules/Vtiger/resources/Field.js b/layouts/v7/modules/Vtiger/resources/Field.js
index 8bec41d..3ca855d 100644
--- a/layouts/v7/modules/Vtiger/resources/Field.js
+++ b/layouts/v7/modules/Vtiger/resources/Field.js
@@ -342,10 +342,10 @@ Vtiger_Field_Js('Vtiger_Picklist_Field_Js',{},{
 		//var selectContainer = jQuery(html);
 		//this.addValidationToElement(selectContainer);
 		//return selectContainer;
-        
-		this.addValidationToElement(wrapper);
-		return wrapper;
-        	//SalesPlatform.ru end
+        var selectContainer = jQuery(wrapper.html());
+		this.addValidationToElement(selectContainer);
+		return selectContainer;
+        //SalesPlatform.ru end
 	}
 });
 
@@ -483,10 +483,10 @@ Vtiger_Field_Js('Vtiger_Multipicklist_Field_Js',{},{
 		//var selectContainer = jQuery(html);
 		//this.addValidationToElement(selectContainer);
 		//return selectContainer;
-        
-		this.addValidationToElement(wrapper);
-		return wrapper;
-        	//SalesPlatform.ru end
+        var selectContainer = jQuery(wrapper.html());
+		this.addValidationToElement(selectContainer);
+		return selectContainer;
+        //SalesPlatform.ru end
 	}
 }),
 
diff --git a/layouts/v7/modules/Vtiger/resources/Vtiger.js b/layouts/v7/modules/Vtiger/resources/Vtiger.js
index 7c4ed51..e068947 100644
--- a/layouts/v7/modules/Vtiger/resources/Vtiger.js
+++ b/layouts/v7/modules/Vtiger/resources/Vtiger.js
@@ -570,7 +570,7 @@ Vtiger.Class('Vtiger_Index_Js', {
 				var form = jQuery('form[name="QuickCreate"]');
 				var moduleName = form.find('[name="module"]').val();
                 //SalesPlatform.ru begin
-                if (jQuery('form[name="QuickCreate"] .modal-body .quickCreateContent .calendarQuickCreateContent').length === 0) {
+                if (jQuery('form[name="QuickCreate"] .modal-body .quickCreateContent .calendarQuickCreateContent').length !== 0) {
                     app.helper.showVerticalScroll(jQuery('form[name="QuickCreate"] .modal-body'), {'autoHideScrollbar': true});
                 }
                 // app.helper.showVerticalScroll(jQuery('form[name="QuickCreate"] .modal-body'), {'autoHideScrollbar': true});
diff --git a/layouts/v7/modules/Vtiger/uitypes/PhoneDetailView.tpl b/layouts/v7/modules/Vtiger/uitypes/PhoneDetailView.tpl
index 14b2b51..3eb4f6f 100644
--- a/layouts/v7/modules/Vtiger/uitypes/PhoneDetailView.tpl
+++ b/layouts/v7/modules/Vtiger/uitypes/PhoneDetailView.tpl
@@ -12,7 +12,7 @@
 {assign var=FIELD_VALUE value=$FIELD_MODEL->get('fieldvalue')}
 {if $MODULEMODEL and $MODULEMODEL->isActive() and $FIELD_VALUE}
     {assign var=PERMISSION value=PBXManager_Server_Model::checkPermissionForOutgoingCall()}
-    {if $PERMISSION}
+    {if $PERMISSION || Settings_SPVoipIntegration_Record_Model::isOutgoingCallsEnabled()}
         {assign var=PHONE_FIELD_VALUE value=$FIELD_VALUE}
         {assign var=PHONE_NUMBER value=$PHONE_FIELD_VALUE|regex_replace:"/[-()\s]/":""}
         <a class="phoneField" data-value="{$PHONE_NUMBER}" record="{$RECORD->getId()}" onclick="Vtiger_PBXManager_Js.registerPBXOutboundCall('{$PHONE_NUMBER}',{$RECORD->getId()})">{$FIELD_MODEL->get('fieldvalue')}</a>
diff --git a/layouts/v7/skins/contact/style.css b/layouts/v7/skins/contact/style.css
index f2100d3..73087cf 100644
--- a/layouts/v7/skins/contact/style.css
+++ b/layouts/v7/skins/contact/style.css
@@ -62,10 +62,10 @@ body > .mCSB_inside > .mCSB_container {
   margin-right: 15px;
 }
 #page {
-    /*SalesPlatform.re begin*/ 
+    /*SalesPlatform.re begin #5822 */
     /*min-height: 100%;*/
-    min-height: calc(100% - 25px);
-    /*SalesPlatform.re end*/ 
+    min-height: calc(100vh - 25px);
+    /*SalesPlatform.re end*/
   padding-top: 84px;
 }
 .select2-container .select2-choice {
@@ -6800,11 +6800,20 @@ li.select2-search-choice div {
 }
 .ui-autocomplete {
   border-radius: 1px !important;
-  max-height: 150px;
-  overflow: auto;
+  /* SalesPlatform.ru begin */
+  /* max-height: 150px; */
+  /* overflow: auto; */
+  overflow-y: auto;
+  max-height: 350px;
+  /* SalesPlatform.ru end */
   height: auto;
   min-height: 30px;
 }
+/* SalesPlatform.ru begin */
+.ui-autocomplete-loading {
+  background: url('../images/load.gif') no-repeat right center;
+}
+/* SalesPlatform.ru end */
 #reportDetails .table-bordered {
   background: #FFFFFF;
 }
@@ -7539,4 +7548,30 @@ input:focus:-ms-input-placeholder {
 .commentcontent, .commentArea {
     margin-bottom: 10px;
 }
+/* SalesPlatform end */
+/* SalesPlatform begin #5877 */
+.footer-icons i {
+    background-color: #000;
+    font-size: 14px;
+    width: 24px;
+    height: 24px;
+    text-align: center;
+    vertical-align: middle;
+    line-height: 24px;
+    color: #fff;
+    border-radius: 25%;
+    box-sizing: border-box;
+}
+.footer-icons i.fa-comments {
+    background-color: #44ace1;
+}
+.footer-icons i.fa-twitter{
+    background-color: #1da1f2;
+}
+.footer-icons i.fa-vk {
+    background-color: #4c75a3;
+}
+.footer-icons i.fa-youtube-play {
+    background-color: #ff0000;
+}
 /* SalesPlatform end */
\ No newline at end of file
diff --git a/layouts/v7/skins/images/load.gif b/layouts/v7/skins/images/load.gif
new file mode 100644
index 0000000..768a093
Binary files /dev/null and b/layouts/v7/skins/images/load.gif differ
diff --git a/layouts/v7/skins/inventory/style.css b/layouts/v7/skins/inventory/style.css
index 487c87f..730999e 100644
--- a/layouts/v7/skins/inventory/style.css
+++ b/layouts/v7/skins/inventory/style.css
@@ -62,12 +62,11 @@ body > .mCSB_inside > .mCSB_container {
   margin-right: 15px;
 }
 #page {
-  /*SalesPlatform.re begin*/ 
-  /*min-height: 100%;*/
-  min-height: calc(100% - 25px);
-  /*SalesPlatform.re end*/ 
+    /*SalesPlatform.re begin #5822 */
+    /*min-height: 100%;*/
+    min-height: calc(100vh - 25px);
+    /*SalesPlatform.re end*/
   padding-top: 84px;
-  
 }
 .select2-container .select2-choice {
   font-family: 'OpenSans-Regular', sans-serif;
@@ -6798,11 +6797,20 @@ li.select2-search-choice div {
 }
 .ui-autocomplete {
   border-radius: 1px !important;
-  max-height: 150px;
-  overflow: auto;
+  /* SalesPlatform.ru begin */
+  /* max-height: 150px; */
+  /* overflow: auto; */
+  overflow-y: auto;
+  max-height: 350px;
+  /* SalesPlatform.ru end */
   height: auto;
   min-height: 30px;
 }
+/* SalesPlatform.ru begin */
+.ui-autocomplete-loading {
+  background: url('../images/load.gif') no-repeat right center;
+}
+/* SalesPlatform.ru end */
 #reportDetails .table-bordered {
   background: #FFFFFF;
 }
@@ -7541,4 +7549,30 @@ input:focus:-ms-input-placeholder {
 .commentcontent, .commentArea {
     margin-bottom: 10px;
 }
+/* SalesPlatform end */
+/* SalesPlatform begin #5877 */
+.footer-icons i {
+    background-color: #000;
+    font-size: 14px;
+    width: 24px;
+    height: 24px;
+    text-align: center;
+    vertical-align: middle;
+    line-height: 24px;
+    color: #fff;
+    border-radius: 25%;
+    box-sizing: border-box;
+}
+.footer-icons i.fa-comments {
+    background-color: #44ace1;
+}
+.footer-icons i.fa-twitter{
+    background-color: #1da1f2;
+}
+.footer-icons i.fa-vk {
+    background-color: #4c75a3;
+}
+.footer-icons i.fa-youtube-play {
+    background-color: #ff0000;
+}
 /* SalesPlatform end */
\ No newline at end of file
diff --git a/layouts/v7/skins/marketing/style.css b/layouts/v7/skins/marketing/style.css
index 231ad7e..ba2150a 100644
--- a/layouts/v7/skins/marketing/style.css
+++ b/layouts/v7/skins/marketing/style.css
@@ -62,10 +62,10 @@ body > .mCSB_inside > .mCSB_container {
   margin-right: 15px;
 }
 #page {
-    /*SalesPlatform.re begin*/ 
+    /*SalesPlatform.re begin #5822 */
     /*min-height: 100%;*/
-    min-height: calc(100% - 25px);
-    /*SalesPlatform.re end*/ 
+    min-height: calc(100vh - 25px);
+    /*SalesPlatform.re end*/
   padding-top: 84px;
 }
 .select2-container .select2-choice {
@@ -6797,11 +6797,20 @@ li.select2-search-choice div {
 }
 .ui-autocomplete {
   border-radius: 1px !important;
-  max-height: 150px;
-  overflow: auto;
+  /* SalesPlatform.ru begin */
+  /* max-height: 150px; */
+  /* overflow: auto; */
+  overflow-y: auto;
+  max-height: 350px;
+  /* SalesPlatform.ru end */
   height: auto;
   min-height: 30px;
 }
+/* SalesPlatform.ru begin */
+.ui-autocomplete-loading {
+  background: url('../images/load.gif') no-repeat right center;
+}
+/* SalesPlatform.ru end */
 #reportDetails .table-bordered {
   background: #FFFFFF;
 }
@@ -7802,4 +7811,30 @@ a.btnReport:hover {
 .commentcontent, .commentArea {
     margin-bottom: 10px;
 }
+/* SalesPlatform end */
+/* SalesPlatform begin #5877 */
+.footer-icons i {
+    background-color: #000;
+    font-size: 14px;
+    width: 24px;
+    height: 24px;
+    text-align: center;
+    vertical-align: middle;
+    line-height: 24px;
+    color: #fff;
+    border-radius: 25%;
+    box-sizing: border-box;
+}
+.footer-icons i.fa-comments {
+    background-color: #44ace1;
+}
+.footer-icons i.fa-twitter{
+    background-color: #1da1f2;
+}
+.footer-icons i.fa-vk {
+    background-color: #4c75a3;
+}
+.footer-icons i.fa-youtube-play {
+    background-color: #ff0000;
+}
 /* SalesPlatform end */
\ No newline at end of file
diff --git a/layouts/v7/skins/marketing_and_sales/style.css b/layouts/v7/skins/marketing_and_sales/style.css
index 04cdcbb..d53c4a2 100644
--- a/layouts/v7/skins/marketing_and_sales/style.css
+++ b/layouts/v7/skins/marketing_and_sales/style.css
@@ -62,10 +62,10 @@ body > .mCSB_inside > .mCSB_container {
   margin-right: 15px;
 }
 #page {
-    /*SalesPlatform.re begin*/ 
+    /*SalesPlatform.re begin #5822 */
     /*min-height: 100%;*/
-    min-height: calc(100% - 25px);
-    /*SalesPlatform.re end*/ 
+    min-height: calc(100vh - 25px);
+    /*SalesPlatform.re end*/
   padding-top: 84px;
 }
 .select2-container .select2-choice {
@@ -6797,11 +6797,20 @@ li.select2-search-choice div {
 }
 .ui-autocomplete {
   border-radius: 1px !important;
-  max-height: 150px;
-  overflow: auto;
+  /* SalesPlatform.ru begin */
+  /* max-height: 150px; */
+  /* overflow: auto; */
+  overflow-y: auto;
+  max-height: 350px;
+  /* SalesPlatform.ru end */
   height: auto;
   min-height: 30px;
 }
+/* SalesPlatform.ru begin */
+.ui-autocomplete-loading {
+  background: url('../images/load.gif') no-repeat right center;
+}
+/* SalesPlatform.ru end */
 #reportDetails .table-bordered {
   background: #FFFFFF;
 }
@@ -7540,4 +7549,30 @@ input:focus:-ms-input-placeholder {
 .commentcontent, .commentArea {
     margin-bottom: 10px;
 }
+/* SalesPlatform end */
+/* SalesPlatform begin #5877 */
+.footer-icons i {
+    background-color: #000;
+    font-size: 14px;
+    width: 24px;
+    height: 24px;
+    text-align: center;
+    vertical-align: middle;
+    line-height: 24px;
+    color: #fff;
+    border-radius: 25%;
+    box-sizing: border-box;
+}
+.footer-icons i.fa-comments {
+    background-color: #44ace1;
+}
+.footer-icons i.fa-twitter{
+    background-color: #1da1f2;
+}
+.footer-icons i.fa-vk {
+    background-color: #4c75a3;
+}
+.footer-icons i.fa-youtube-play {
+    background-color: #ff0000;
+}
 /* SalesPlatform end */
\ No newline at end of file
diff --git a/layouts/v7/skins/project/style.css b/layouts/v7/skins/project/style.css
index 1c69e2f..d5bd08a 100644
--- a/layouts/v7/skins/project/style.css
+++ b/layouts/v7/skins/project/style.css
@@ -62,10 +62,10 @@ body > .mCSB_inside > .mCSB_container {
   margin-right: 15px;
 }
 #page {
-    /*SalesPlatform.re begin*/ 
+    /*SalesPlatform.re begin #5822 */
     /*min-height: 100%;*/
-    min-height: calc(100% - 25px);
-    /*SalesPlatform.re end*/ 
+    min-height: calc(100vh - 25px);
+    /*SalesPlatform.re end*/
   padding-top: 84px;
 }
 .select2-container .select2-choice {
@@ -6797,11 +6797,20 @@ li.select2-search-choice div {
 }
 .ui-autocomplete {
   border-radius: 1px !important;
-  max-height: 150px;
-  overflow: auto;
+  /* SalesPlatform.ru begin */
+  /* max-height: 150px; */
+  /* overflow: auto; */
+  overflow-y: auto;
+  max-height: 350px;
+  /* SalesPlatform.ru end */
   height: auto;
   min-height: 30px;
 }
+/* SalesPlatform.ru begin */
+.ui-autocomplete-loading {
+  background: url('../images/load.gif') no-repeat right center;
+}
+/* SalesPlatform.ru end */
 #reportDetails .table-bordered {
   background: #FFFFFF;
 }
@@ -7540,4 +7549,30 @@ input:focus:-ms-input-placeholder {
 .commentcontent, .commentArea {
     margin-bottom: 10px;
 }
+/* SalesPlatform end */
+/* SalesPlatform begin #5877 */
+.footer-icons i {
+    background-color: #000;
+    font-size: 14px;
+    width: 24px;
+    height: 24px;
+    text-align: center;
+    vertical-align: middle;
+    line-height: 24px;
+    color: #fff;
+    border-radius: 25%;
+    box-sizing: border-box;
+}
+.footer-icons i.fa-comments {
+    background-color: #44ace1;
+}
+.footer-icons i.fa-twitter{
+    background-color: #1da1f2;
+}
+.footer-icons i.fa-vk {
+    background-color: #4c75a3;
+}
+.footer-icons i.fa-youtube-play {
+    background-color: #ff0000;
+}
 /* SalesPlatform end */
\ No newline at end of file
diff --git a/layouts/v7/skins/sales/style.css b/layouts/v7/skins/sales/style.css
index 013b4d3..f22029a 100644
--- a/layouts/v7/skins/sales/style.css
+++ b/layouts/v7/skins/sales/style.css
@@ -62,10 +62,10 @@ body > .mCSB_inside > .mCSB_container {
   margin-right: 15px;
 }
 #page {
-    /*SalesPlatform.re begin*/ 
+    /*SalesPlatform.re begin #5822 */
     /*min-height: 100%;*/
-    min-height: calc(100% - 25px);
-    /*SalesPlatform.re end*/ 
+    min-height: calc(100vh - 25px);
+    /*SalesPlatform.re end*/
   padding-top: 84px;
 }
 .select2-container .select2-choice {
@@ -6797,11 +6797,20 @@ li.select2-search-choice div {
 }
 .ui-autocomplete {
   border-radius: 1px !important;
-  max-height: 150px;
-  overflow: auto;
+  /* SalesPlatform.ru begin */
+  /* max-height: 150px; */
+  /* overflow: auto; */
+  overflow-y: auto;
+  max-height: 350px;
+  /* SalesPlatform.ru end */
   height: auto;
   min-height: 30px;
 }
+/* SalesPlatform.ru begin */
+.ui-autocomplete-loading {
+  background: url('../images/load.gif') no-repeat right center;
+}
+/* SalesPlatform.ru end */
 #reportDetails .table-bordered {
   background: #FFFFFF;
 }
@@ -7540,4 +7549,30 @@ input:focus:-ms-input-placeholder {
 .commentcontent, .commentArea {
     margin-bottom: 10px;
 }
+/* SalesPlatform end */
+/* SalesPlatform begin #5877 */
+.footer-icons i {
+    background-color: #000;
+    font-size: 14px;
+    width: 24px;
+    height: 24px;
+    text-align: center;
+    vertical-align: middle;
+    line-height: 24px;
+    color: #fff;
+    border-radius: 25%;
+    box-sizing: border-box;
+}
+.footer-icons i.fa-comments {
+    background-color: #44ace1;
+}
+.footer-icons i.fa-twitter{
+    background-color: #1da1f2;
+}
+.footer-icons i.fa-vk {
+    background-color: #4c75a3;
+}
+.footer-icons i.fa-youtube-play {
+    background-color: #ff0000;
+}
 /* SalesPlatform end */
\ No newline at end of file
diff --git a/layouts/v7/skins/support/style.css b/layouts/v7/skins/support/style.css
index 7de3fb0..5750b85 100644
--- a/layouts/v7/skins/support/style.css
+++ b/layouts/v7/skins/support/style.css
@@ -62,10 +62,10 @@ body > .mCSB_inside > .mCSB_container {
   margin-right: 15px;
 }
 #page {
-    /*SalesPlatform.re begin*/ 
+    /*SalesPlatform.re begin #5822 */
     /*min-height: 100%;*/
-    min-height: calc(100% - 25px);
-    /*SalesPlatform.re end*/ 
+    min-height: calc(100vh - 25px);
+    /*SalesPlatform.re end*/
   padding-top: 84px;
 }
 .select2-container .select2-choice {
@@ -6797,11 +6797,20 @@ li.select2-search-choice div {
 }
 .ui-autocomplete {
   border-radius: 1px !important;
-  max-height: 150px;
-  overflow: auto;
+  /* SalesPlatform.ru begin */
+  /* max-height: 150px; */
+  /* overflow: auto; */
+  overflow-y: auto;
+  max-height: 350px;
+  /* SalesPlatform.ru end */
   height: auto;
   min-height: 30px;
 }
+/* SalesPlatform.ru begin */
+.ui-autocomplete-loading {
+  background: url('../images/load.gif') no-repeat right center;
+}
+/* SalesPlatform.ru end */
 #reportDetails .table-bordered {
   background: #FFFFFF;
 }
@@ -7674,4 +7683,30 @@ div.flip {
 .commentcontent, .commentArea {
     margin-bottom: 10px;
 }
+/* SalesPlatform end */
+/* SalesPlatform begin #5877 */
+.footer-icons i {
+    background-color: #000;
+    font-size: 14px;
+    width: 24px;
+    height: 24px;
+    text-align: center;
+    vertical-align: middle;
+    line-height: 24px;
+    color: #fff;
+    border-radius: 25%;
+    box-sizing: border-box;
+}
+.footer-icons i.fa-comments {
+    background-color: #44ace1;
+}
+.footer-icons i.fa-twitter{
+    background-color: #1da1f2;
+}
+.footer-icons i.fa-vk {
+    background-color: #4c75a3;
+}
+.footer-icons i.fa-youtube-play {
+    background-color: #ff0000;
+}
 /* SalesPlatform end */
\ No newline at end of file
diff --git a/layouts/v7/skins/tools/style.css b/layouts/v7/skins/tools/style.css
index 22be49b..27c3f4e 100644
--- a/layouts/v7/skins/tools/style.css
+++ b/layouts/v7/skins/tools/style.css
@@ -62,10 +62,10 @@ body > .mCSB_inside > .mCSB_container {
   margin-right: 15px;
 }
 #page {
-    /*SalesPlatform.re begin*/ 
+    /*SalesPlatform.re begin #5822 */
     /*min-height: 100%;*/
-    min-height: calc(100% - 25px);
-    /*SalesPlatform.re end*/ 
+    min-height: calc(100vh - 25px);
+    /*SalesPlatform.re end*/
   padding-top: 84px;
 }
 .select2-container .select2-choice {
@@ -6797,11 +6797,20 @@ li.select2-search-choice div {
 }
 .ui-autocomplete {
   border-radius: 1px !important;
-  max-height: 150px;
-  overflow: auto;
+  /* SalesPlatform.ru begin */
+  /* max-height: 150px; */
+  /* overflow: auto; */
+  overflow-y: auto;
+  max-height: 350px;
+  /* SalesPlatform.ru end */
   height: auto;
   min-height: 30px;
 }
+/* SalesPlatform.ru begin */
+.ui-autocomplete-loading {
+  background: url('../images/load.gif') no-repeat right center;
+}
+/* SalesPlatform.ru end */
 #reportDetails .table-bordered {
   background: #FFFFFF;
 }
@@ -7536,4 +7545,30 @@ input:focus:-ms-input-placeholder {
 .commentcontent, .commentArea {
     margin-bottom: 10px;
 }
+/* SalesPlatform end */
+/* SalesPlatform begin #5877 */
+.footer-icons i {
+    background-color: #000;
+    font-size: 14px;
+    width: 24px;
+    height: 24px;
+    text-align: center;
+    vertical-align: middle;
+    line-height: 24px;
+    color: #fff;
+    border-radius: 25%;
+    box-sizing: border-box;
+}
+.footer-icons i.fa-comments {
+    background-color: #44ace1;
+}
+.footer-icons i.fa-twitter{
+    background-color: #1da1f2;
+}
+.footer-icons i.fa-vk {
+    background-color: #4c75a3;
+}
+.footer-icons i.fa-youtube-play {
+    background-color: #ff0000;
+}
 /* SalesPlatform end */
\ No newline at end of file
diff --git a/libraries/jquery/jqplot/plugins/jqplot.funnelRenderer.js b/libraries/jquery/jqplot/plugins/jqplot.funnelRenderer.js
index 2aba39d..34a73e6 100644
--- a/libraries/jquery/jqplot/plugins/jqplot.funnelRenderer.js
+++ b/libraries/jquery/jqplot/plugins/jqplot.funnelRenderer.js
@@ -461,15 +461,15 @@
                 
                 if (this.dataLabels == 'label') {
                     fstr = this.dataLabelFormatString || '%s';
-                    label = $.jqplot.sprintf(fstr, gd[i][0]);
+                    label = $.jqplot.sprintf(fstr, this._stackData[i][0]);
                 }
                 else if (this.dataLabels == 'value') {
                     fstr = this.dataLabelFormatString || '%d';
-                    label = $.jqplot.sprintf(fstr, this.data[i][1]);
+                    label = $.jqplot.sprintf(fstr, this._stackData[i][1]);
                 }
                 else if (this.dataLabels == 'percent') {
                     fstr = this.dataLabelFormatString || '%d%%';
-                    label = $.jqplot.sprintf(fstr, gd[i][1]*100);
+                    label = $.jqplot.sprintf(fstr, this._stackData[i][1]*100);
                 }
                 else if (this.dataLabels.constructor == Array) {
                     fstr = this.dataLabelFormatString || '%s';
diff --git a/libraries/jquery/jqplot/plugins/jqplot.funnelRenderer.min.js b/libraries/jquery/jqplot/plugins/jqplot.funnelRenderer.min.js
index 004c2bd..87c7202 100644
--- a/libraries/jquery/jqplot/plugins/jqplot.funnelRenderer.min.js
+++ b/libraries/jquery/jqplot/plugins/jqplot.funnelRenderer.min.js
@@ -54,4 +54,4 @@
  * 
  * 
  */
-(function(e){e.jqplot.FunnelRenderer=function(){e.jqplot.LineRenderer.call(this)};e.jqplot.FunnelRenderer.prototype=new e.jqplot.LineRenderer();e.jqplot.FunnelRenderer.prototype.constructor=e.jqplot.FunnelRenderer;e.jqplot.FunnelRenderer.prototype.init=function(p,t){this.padding={top:20,right:20,bottom:20,left:20};this.sectionMargin=6;this.fill=true;this.shadowOffset=2;this.shadowAlpha=0.07;this.shadowDepth=5;this.highlightMouseOver=true;this.highlightMouseDown=false;this.highlightColors=[];this.widthRatio=0.2;this.lineWidth=2;this.dataLabels="percent";this.showDataLabels=false;this.dataLabelFormatString=null;this.dataLabelThreshold=3;this._type="funnel";this.tickRenderer=e.jqplot.FunnelTickRenderer;if(p.highlightMouseDown&&p.highlightMouseOver==null){p.highlightMouseOver=false}e.extend(true,this,p);this._highlightedPoint=null;this._bases=[];this._atot;this._areas=[];this._lengths=[];this._angle;this._dataIndices=[];this._unorderedData=e.extend(true,[],this.data);var o=e.extend(true,[],this.data);for(var r=0;r<o.length;r++){o[r].push(r)}this.data.sort(function(v,u){return u[1]-v[1]});o.sort(function(v,u){return u[1]-v[1]});for(var r=0;r<o.length;r++){this._dataIndices.push(o[r][2])}if(this.highlightColors.length==0){for(var r=0;r<this.seriesColors.length;r++){var q=e.jqplot.getColorComponents(this.seriesColors[r]);var m=[q[0],q[1],q[2]];var s=m[0]+m[1]+m[2];for(var n=0;n<3;n++){m[n]=(s>570)?m[n]*0.8:m[n]+0.4*(255-m[n]);m[n]=parseInt(m[n],10)}this.highlightColors.push("rgb("+m[0]+","+m[1]+","+m[2]+")")}}t.postParseOptionsHooks.addOnce(k);t.postInitHooks.addOnce(g);t.eventListenerHooks.addOnce("jqplotMouseMove",a);t.eventListenerHooks.addOnce("jqplotMouseDown",b);t.eventListenerHooks.addOnce("jqplotMouseUp",j);t.eventListenerHooks.addOnce("jqplotClick",f);t.eventListenerHooks.addOnce("jqplotRightClick",l);t.postDrawHooks.addOnce(h)};e.jqplot.FunnelRenderer.prototype.setGridData=function(o){var n=0;var p=[];for(var m=0;m<this.data.length;m++){n+=this.data[m][1];p.push([this.data[m][0],this.data[m][1]])}for(var m=0;m<p.length;m++){p[m][1]=p[m][1]/n}this._bases=new Array(p.length+1);this._lengths=new Array(p.length);this.gridData=p};e.jqplot.FunnelRenderer.prototype.makeGridData=function(o,p){var n=0;var q=[];for(var m=0;m<this.data.length;m++){n+=this.data[m][1];q.push([this.data[m][0],this.data[m][1]])}for(var m=0;m<q.length;m++){q[m][1]=q[m][1]/n}this._bases=new Array(q.length+1);this._lengths=new Array(q.length);return q};e.jqplot.FunnelRenderer.prototype.drawSection=function(n,p,o,s){var t=this.fill;var m=this.lineWidth;n.save();if(s){for(var r=0;r<this.shadowDepth;r++){n.save();n.translate(this.shadowOffset*Math.cos(this.shadowAngle/180*Math.PI),this.shadowOffset*Math.sin(this.shadowAngle/180*Math.PI));q()}}else{q()}function q(){n.beginPath();n.fillStyle=o;n.strokeStyle=o;n.lineWidth=m;n.moveTo(p[0][0],p[0][1]);for(var u=1;u<4;u++){n.lineTo(p[u][0],p[u][1])}n.closePath();if(t){n.fill()}else{n.stroke()}}if(s){for(var r=0;r<this.shadowDepth;r++){n.restore()}}n.restore()};e.jqplot.FunnelRenderer.prototype.draw=function(G,B,J,p){var Y;var L=(J!=undefined)?J:{};var w=0;var u=0;var R=1;this._areas=[];if(J.legendInfo&&J.legendInfo.placement=="insideGrid"){var O=J.legendInfo;switch(O.location){case"nw":w=O.width+O.xoffset;break;case"w":w=O.width+O.xoffset;break;case"sw":w=O.width+O.xoffset;break;case"ne":w=O.width+O.xoffset;R=-1;break;case"e":w=O.width+O.xoffset;R=-1;break;case"se":w=O.width+O.xoffset;R=-1;break;case"n":u=O.height+O.yoffset;break;case"s":u=O.height+O.yoffset;R=-1;break;default:break}}var t=(R==1)?this.padding.left+w:this.padding.left;var F=(R==1)?this.padding.top+u:this.padding.top;var M=(R==-1)?this.padding.right+w:this.padding.right;var o=(R==-1)?this.padding.bottom+u:this.padding.bottom;var P=(L.shadow!=undefined)?L.shadow:this.shadow;var q=(L.showLine!=undefined)?L.showLine:this.showLine;var C=(L.fill!=undefined)?L.fill:this.fill;var H=G.canvas.width;var N=G.canvas.height;this._bases[0]=H-t-M;var I=this._length=N-F-o;var r=this._bases[0]*this.widthRatio;this._atot=I/2*(this._bases[0]+this._bases[0]*this.widthRatio);this._angle=Math.atan((this._bases[0]-r)/2/I);for(Y=0;Y<B.length;Y++){this._areas.push(B[Y][1]*this._atot)}var E,aa,W,Q=0;var n=0.0001;for(Y=0;Y<this._areas.length;Y++){E=this._areas[Y]/this._bases[Y];aa=999999;this._lengths[Y]=E;W=0;while(aa>this._lengths[Y]*n&&W<100){this._lengths[Y]=this._areas[Y]/(this._bases[Y]-this._lengths[Y]*Math.tan(this._angle));aa=Math.abs(this._lengths[Y]-E);this._bases[Y+1]=this._bases[Y]-(2*this._lengths[Y]*Math.tan(this._angle));E=this._lengths[Y];W++}Q+=this._lengths[Y]}this._vertices=new Array(B.length);var ae=[t,F],ad=[t+this._bases[0],F],ac=[t+(this._bases[0]-this._bases[this._bases.length-1])/2,F+this._length],ab=[ac[0]+this._bases[this._bases.length-1],ac[1]];function V(ag){var x=(ae[1]-ac[1])/(ae[0]-ac[0]);var v=ae[1]-x*ae[0];var ah=ag+ae[1];return[(ah-v)/x,ah]}function D(ag){var x=(ad[1]-ab[1])/(ad[0]-ab[0]);var v=ad[1]-x*ad[0];var ah=ag+ad[1];return[(ah-v)/x,ah]}var T=w,S=u;var Z=0,m=0;for(Y=0;Y<B.length;Y++){this._vertices[Y]=new Array();var U=this._vertices[Y];var A=this.sectionMargin;if(Y==0){m=0}if(Y==1){m=A/3}else{if(Y>0&&Y<B.length-1){m=A/2}else{if(Y==B.length-1){m=2*A/3}}}U.push(V(Z+m));U.push(D(Z+m));Z+=this._lengths[Y];if(Y==0){m=-2*A/3}else{if(Y>0&&Y<B.length-1){m=-A/2}else{if(Y==B.length-1){m=0}}}U.push(D(Z+m));U.push(V(Z+m))}if(this.shadow){var af="rgba(0,0,0,"+this.shadowAlpha+")";for(var Y=0;Y<B.length;Y++){this.renderer.drawSection.call(this,G,this._vertices[Y],af,true)}}for(var Y=0;Y<B.length;Y++){var U=this._vertices[Y];this.renderer.drawSection.call(this,G,U,this.seriesColors[Y]);if(this.showDataLabels&&B[Y][1]*100>=this.dataLabelThreshold){var K,X;if(this.dataLabels=="label"){K=this.dataLabelFormatString||"%s";X=e.jqplot.sprintf(K,B[Y][0])}else{if(this.dataLabels=="value"){K=this.dataLabelFormatString||"%d";X=e.jqplot.sprintf(K,this.data[Y][1])}else{if(this.dataLabels=="percent"){K=this.dataLabelFormatString||"%d%%";X=e.jqplot.sprintf(K,B[Y][1]*100)}else{if(this.dataLabels.constructor==Array){K=this.dataLabelFormatString||"%s";X=e.jqplot.sprintf(K,this.dataLabels[this._dataIndices[Y]])}}}}var s=(this._radius)*this.dataLabelPositionFactor+this.sliceMargin+this.dataLabelNudge;var T=(U[0][0]+U[1][0])/2+this.canvas._offsets.left;var S=(U[1][1]+U[2][1])/2+this.canvas._offsets.top;var z=e('<span class="jqplot-funnel-series jqplot-data-label" style="position:absolute;">'+X+"</span>").insertBefore(p.eventCanvas._elem);T-=z.width()/2;S-=z.height()/2;T=Math.round(T);S=Math.round(S);z.css({left:T,top:S})}}};e.jqplot.FunnelAxisRenderer=function(){e.jqplot.LinearAxisRenderer.call(this)};e.jqplot.FunnelAxisRenderer.prototype=new e.jqplot.LinearAxisRenderer();e.jqplot.FunnelAxisRenderer.prototype.constructor=e.jqplot.FunnelAxisRenderer;e.jqplot.FunnelAxisRenderer.prototype.init=function(m){this.tickRenderer=e.jqplot.FunnelTickRenderer;e.extend(true,this,m);this._dataBounds={min:0,max:100};this.min=0;this.max=100;this.showTicks=false;this.ticks=[];this.showMark=false;this.show=false};e.jqplot.FunnelLegendRenderer=function(){e.jqplot.TableLegendRenderer.call(this)};e.jqplot.FunnelLegendRenderer.prototype=new e.jqplot.TableLegendRenderer();e.jqplot.FunnelLegendRenderer.prototype.constructor=e.jqplot.FunnelLegendRenderer;e.jqplot.FunnelLegendRenderer.prototype.init=function(m){this.numberRows=null;this.numberColumns=null;e.extend(true,this,m)};e.jqplot.FunnelLegendRenderer.prototype.draw=function(){var p=this;if(this.show){var x=this._series;var A="position:absolute;";A+=(this.background)?"background:"+this.background+";":"";A+=(this.border)?"border:"+this.border+";":"";A+=(this.fontSize)?"font-size:"+this.fontSize+";":"";A+=(this.fontFamily)?"font-family:"+this.fontFamily+";":"";A+=(this.textColor)?"color:"+this.textColor+";":"";A+=(this.marginTop!=null)?"margin-top:"+this.marginTop+";":"";A+=(this.marginBottom!=null)?"margin-bottom:"+this.marginBottom+";":"";A+=(this.marginLeft!=null)?"margin-left:"+this.marginLeft+";":"";A+=(this.marginRight!=null)?"margin-right:"+this.marginRight+";":"";this._elem=e('<table class="jqplot-table-legend" style="'+A+'"></table>');var E=false,w=false,m,u;var y=x[0];var n=new e.jqplot.ColorGenerator(y.seriesColors);if(y.show){var F=y.data;if(this.numberRows){m=this.numberRows;if(!this.numberColumns){u=Math.ceil(F.length/m)}else{u=this.numberColumns}}else{if(this.numberColumns){u=this.numberColumns;m=Math.ceil(F.length/this.numberColumns)}else{m=F.length;u=1}}var D,C,o,r,q,t,v,B;var z=0;for(D=0;D<m;D++){if(w){o=e('<tr class="jqplot-table-legend"></tr>').prependTo(this._elem)}else{o=e('<tr class="jqplot-table-legend"></tr>').appendTo(this._elem)}for(C=0;C<u;C++){if(z<F.length){t=this.labels[z]||F[z][0].toString();B=n.next();if(!w){if(D>0){E=true}else{E=false}}else{if(D==m-1){E=false}else{E=true}}v=(E)?this.rowSpacing:"0";r=e('<td class="jqplot-table-legend" style="text-align:center;padding-top:'+v+';"><div><div class="jqplot-table-legend-swatch" style="border-color:'+B+';"></div></div></td>');q=e('<td class="jqplot-table-legend" style="padding-top:'+v+';"></td>');if(this.escapeHtml){q.text(t)}else{q.html(t)}if(w){q.prependTo(o);r.prependTo(o)}else{r.appendTo(o);q.appendTo(o)}E=true}z++}}}}return this._elem};function c(q,p,n){n=n||{};n.axesDefaults=n.axesDefaults||{};n.legend=n.legend||{};n.seriesDefaults=n.seriesDefaults||{};var m=false;if(n.seriesDefaults.renderer==e.jqplot.FunnelRenderer){m=true}else{if(n.series){for(var o=0;o<n.series.length;o++){if(n.series[o].renderer==e.jqplot.FunnelRenderer){m=true}}}}if(m){n.axesDefaults.renderer=e.jqplot.FunnelAxisRenderer;n.legend.renderer=e.jqplot.FunnelLegendRenderer;n.legend.preDraw=true;n.sortData=false;n.seriesDefaults.pointLabels={show:false}}}function g(p,o,m){for(var n=0;n<this.series.length;n++){if(this.series[n].renderer.constructor==e.jqplot.FunnelRenderer){if(this.series[n].highlightMouseOver){this.series[n].highlightMouseDown=false}}}}function k(m){for(var n=0;n<this.series.length;n++){this.series[n].seriesColors=this.seriesColors;this.series[n].colorGenerator=e.jqplot.colorGenerator}}function d(q,p,o){var n=q.series[p];var m=q.plugins.funnelRenderer.highlightCanvas;m._ctx.clearRect(0,0,m._ctx.canvas.width,m._ctx.canvas.height);n._highlightedPoint=o;q.plugins.funnelRenderer.highlightedSeriesIndex=p;n.renderer.drawSection.call(n,m._ctx,n._vertices[o],n.highlightColors[o],false)}function i(o){var m=o.plugins.funnelRenderer.highlightCanvas;m._ctx.clearRect(0,0,m._ctx.canvas.width,m._ctx.canvas.height);for(var n=0;n<o.series.length;n++){o.series[n]._highlightedPoint=null}o.plugins.funnelRenderer.highlightedSeriesIndex=null;o.target.trigger("jqplotDataUnhighlight")}function a(q,p,t,s,r){if(s){var o=[s.seriesIndex,s.pointIndex,s.data];var n=jQuery.Event("jqplotDataMouseOver");n.pageX=q.pageX;n.pageY=q.pageY;r.target.trigger(n,o);if(r.series[o[0]].highlightMouseOver&&!(o[0]==r.plugins.funnelRenderer.highlightedSeriesIndex&&o[1]==r.series[o[0]]._highlightedPoint)){var m=jQuery.Event("jqplotDataHighlight");m.which=q.which;m.pageX=q.pageX;m.pageY=q.pageY;r.target.trigger(m,o);d(r,o[0],o[1])}}else{if(s==null){i(r)}}}function b(p,o,s,r,q){if(r){var n=[r.seriesIndex,r.pointIndex,r.data];if(q.series[n[0]].highlightMouseDown&&!(n[0]==q.plugins.funnelRenderer.highlightedSeriesIndex&&n[1]==q.series[n[0]]._highlightedPoint)){var m=jQuery.Event("jqplotDataHighlight");m.which=p.which;m.pageX=p.pageX;m.pageY=p.pageY;q.target.trigger(m,n);d(q,n[0],n[1])}}else{if(r==null){i(q)}}}function j(o,n,r,q,p){var m=p.plugins.funnelRenderer.highlightedSeriesIndex;if(m!=null&&p.series[m].highlightMouseDown){i(p)}}function f(p,o,s,r,q){if(r){var n=[r.seriesIndex,r.pointIndex,r.data];var m=jQuery.Event("jqplotDataClick");m.which=p.which;m.pageX=p.pageX;m.pageY=p.pageY;q.target.trigger(m,n)}}function l(q,p,t,s,r){if(s){var o=[s.seriesIndex,s.pointIndex,s.data];var m=r.plugins.funnelRenderer.highlightedSeriesIndex;if(m!=null&&r.series[m].highlightMouseDown){i(r)}var n=jQuery.Event("jqplotDataRightClick");n.which=q.which;n.pageX=q.pageX;n.pageY=q.pageY;r.target.trigger(n,o)}}function h(){if(this.plugins.funnelRenderer&&this.plugins.funnelRenderer.highlightCanvas){this.plugins.funnelRenderer.highlightCanvas.resetCanvas();this.plugins.funnelRenderer.highlightCanvas=null}this.plugins.funnelRenderer={};this.plugins.funnelRenderer.highlightCanvas=new e.jqplot.GenericCanvas();var n=e(this.targetId+" .jqplot-data-label");if(n.length){e(n[0]).before(this.plugins.funnelRenderer.highlightCanvas.createElement(this._gridPadding,"jqplot-funnelRenderer-highlight-canvas",this._plotDimensions,this))}else{this.eventCanvas._elem.before(this.plugins.funnelRenderer.highlightCanvas.createElement(this._gridPadding,"jqplot-funnelRenderer-highlight-canvas",this._plotDimensions,this))}var m=this.plugins.funnelRenderer.highlightCanvas.setContext();this.eventCanvas._elem.bind("mouseleave",{plot:this},function(o){i(o.data.plot)})}e.jqplot.preInitHooks.push(c);e.jqplot.FunnelTickRenderer=function(){e.jqplot.AxisTickRenderer.call(this)};e.jqplot.FunnelTickRenderer.prototype=new e.jqplot.AxisTickRenderer();e.jqplot.FunnelTickRenderer.prototype.constructor=e.jqplot.FunnelTickRenderer})(jQuery);
\ No newline at end of file
+(function(e){e.jqplot.FunnelRenderer=function(){e.jqplot.LineRenderer.call(this)};e.jqplot.FunnelRenderer.prototype=new e.jqplot.LineRenderer();e.jqplot.FunnelRenderer.prototype.constructor=e.jqplot.FunnelRenderer;e.jqplot.FunnelRenderer.prototype.init=function(p,t){this.padding={top:20,right:20,bottom:20,left:20};this.sectionMargin=6;this.fill=true;this.shadowOffset=2;this.shadowAlpha=0.07;this.shadowDepth=5;this.highlightMouseOver=true;this.highlightMouseDown=false;this.highlightColors=[];this.widthRatio=0.2;this.lineWidth=2;this.dataLabels="percent";this.showDataLabels=false;this.dataLabelFormatString=null;this.dataLabelThreshold=3;this._type="funnel";this.tickRenderer=e.jqplot.FunnelTickRenderer;if(p.highlightMouseDown&&p.highlightMouseOver==null){p.highlightMouseOver=false}e.extend(true,this,p);this._highlightedPoint=null;this._bases=[];this._atot;this._areas=[];this._lengths=[];this._angle;this._dataIndices=[];this._unorderedData=e.extend(true,[],this.data);var o=e.extend(true,[],this.data);for(var r=0;r<o.length;r++){o[r].push(r)}this.data.sort(function(v,u){return u[1]-v[1]});o.sort(function(v,u){return u[1]-v[1]});for(var r=0;r<o.length;r++){this._dataIndices.push(o[r][2])}if(this.highlightColors.length==0){for(var r=0;r<this.seriesColors.length;r++){var q=e.jqplot.getColorComponents(this.seriesColors[r]);var m=[q[0],q[1],q[2]];var s=m[0]+m[1]+m[2];for(var n=0;n<3;n++){m[n]=(s>570)?m[n]*0.8:m[n]+0.4*(255-m[n]);m[n]=parseInt(m[n],10)}this.highlightColors.push("rgb("+m[0]+","+m[1]+","+m[2]+")")}}t.postParseOptionsHooks.addOnce(k);t.postInitHooks.addOnce(g);t.eventListenerHooks.addOnce("jqplotMouseMove",a);t.eventListenerHooks.addOnce("jqplotMouseDown",b);t.eventListenerHooks.addOnce("jqplotMouseUp",j);t.eventListenerHooks.addOnce("jqplotClick",f);t.eventListenerHooks.addOnce("jqplotRightClick",l);t.postDrawHooks.addOnce(h)};e.jqplot.FunnelRenderer.prototype.setGridData=function(o){var n=0;var p=[];for(var m=0;m<this.data.length;m++){n+=this.data[m][1];p.push([this.data[m][0],this.data[m][1]])}for(var m=0;m<p.length;m++){p[m][1]=p[m][1]/n}this._bases=new Array(p.length+1);this._lengths=new Array(p.length);this.gridData=p};e.jqplot.FunnelRenderer.prototype.makeGridData=function(o,p){var n=0;var q=[];for(var m=0;m<this.data.length;m++){n+=this.data[m][1];q.push([this.data[m][0],this.data[m][1]])}for(var m=0;m<q.length;m++){q[m][1]=q[m][1]/n}this._bases=new Array(q.length+1);this._lengths=new Array(q.length);return q};e.jqplot.FunnelRenderer.prototype.drawSection=function(n,p,o,s){var t=this.fill;var m=this.lineWidth;n.save();if(s){for(var r=0;r<this.shadowDepth;r++){n.save();n.translate(this.shadowOffset*Math.cos(this.shadowAngle/180*Math.PI),this.shadowOffset*Math.sin(this.shadowAngle/180*Math.PI));q()}}else{q()}function q(){n.beginPath();n.fillStyle=o;n.strokeStyle=o;n.lineWidth=m;n.moveTo(p[0][0],p[0][1]);for(var u=1;u<4;u++){n.lineTo(p[u][0],p[u][1])}n.closePath();if(t){n.fill()}else{n.stroke()}}if(s){for(var r=0;r<this.shadowDepth;r++){n.restore()}}n.restore()};e.jqplot.FunnelRenderer.prototype.draw=function(G,B,J,p){var Y;var L=(J!=undefined)?J:{};var w=0;var u=0;var R=1;this._areas=[];if(J.legendInfo&&J.legendInfo.placement=="insideGrid"){var O=J.legendInfo;switch(O.location){case"nw":w=O.width+O.xoffset;break;case"w":w=O.width+O.xoffset;break;case"sw":w=O.width+O.xoffset;break;case"ne":w=O.width+O.xoffset;R=-1;break;case"e":w=O.width+O.xoffset;R=-1;break;case"se":w=O.width+O.xoffset;R=-1;break;case"n":u=O.height+O.yoffset;break;case"s":u=O.height+O.yoffset;R=-1;break;default:break}}var t=(R==1)?this.padding.left+w:this.padding.left;var F=(R==1)?this.padding.top+u:this.padding.top;var M=(R==-1)?this.padding.right+w:this.padding.right;var o=(R==-1)?this.padding.bottom+u:this.padding.bottom;var P=(L.shadow!=undefined)?L.shadow:this.shadow;var q=(L.showLine!=undefined)?L.showLine:this.showLine;var C=(L.fill!=undefined)?L.fill:this.fill;var H=G.canvas.width;var N=G.canvas.height;this._bases[0]=H-t-M;var I=this._length=N-F-o;var r=this._bases[0]*this.widthRatio;this._atot=I/2*(this._bases[0]+this._bases[0]*this.widthRatio);this._angle=Math.atan((this._bases[0]-r)/2/I);for(Y=0;Y<B.length;Y++){this._areas.push(B[Y][1]*this._atot)}var E,aa,W,Q=0;var n=0.0001;for(Y=0;Y<this._areas.length;Y++){E=this._areas[Y]/this._bases[Y];aa=999999;this._lengths[Y]=E;W=0;while(aa>this._lengths[Y]*n&&W<100){this._lengths[Y]=this._areas[Y]/(this._bases[Y]-this._lengths[Y]*Math.tan(this._angle));aa=Math.abs(this._lengths[Y]-E);this._bases[Y+1]=this._bases[Y]-(2*this._lengths[Y]*Math.tan(this._angle));E=this._lengths[Y];W++}Q+=this._lengths[Y]}this._vertices=new Array(B.length);var ae=[t,F],ad=[t+this._bases[0],F],ac=[t+(this._bases[0]-this._bases[this._bases.length-1])/2,F+this._length],ab=[ac[0]+this._bases[this._bases.length-1],ac[1]];function V(ag){var x=(ae[1]-ac[1])/(ae[0]-ac[0]);var v=ae[1]-x*ae[0];var ah=ag+ae[1];return[(ah-v)/x,ah]}function D(ag){var x=(ad[1]-ab[1])/(ad[0]-ab[0]);var v=ad[1]-x*ad[0];var ah=ag+ad[1];return[(ah-v)/x,ah]}var T=w,S=u;var Z=0,m=0;for(Y=0;Y<B.length;Y++){this._vertices[Y]=new Array();var U=this._vertices[Y];var A=this.sectionMargin;if(Y==0){m=0}if(Y==1){m=A/3}else{if(Y>0&&Y<B.length-1){m=A/2}else{if(Y==B.length-1){m=2*A/3}}}U.push(V(Z+m));U.push(D(Z+m));Z+=this._lengths[Y];if(Y==0){m=-2*A/3}else{if(Y>0&&Y<B.length-1){m=-A/2}else{if(Y==B.length-1){m=0}}}U.push(D(Z+m));U.push(V(Z+m))}if(this.shadow){var af="rgba(0,0,0,"+this.shadowAlpha+")";for(var Y=0;Y<B.length;Y++){this.renderer.drawSection.call(this,G,this._vertices[Y],af,true)}}for(var Y=0;Y<B.length;Y++){var U=this._vertices[Y];this.renderer.drawSection.call(this,G,U,this.seriesColors[Y]);if(this.showDataLabels&&B[Y][1]*100>=this.dataLabelThreshold){var K,X;if(this.dataLabels=="label"){K=this.dataLabelFormatString||"%s";X=e.jqplot.sprintf(K,this._stackData[Y][0])}else{if(this.dataLabels=="value"){K=this.dataLabelFormatString||"%d";X=e.jqplot.sprintf(K,this._stackData[Y][1])}else{if(this.dataLabels=="percent"){K=this.dataLabelFormatString||"%d%%";X=e.jqplot.sprintf(K,this._stackData[Y][1]*100)}else{if(this.dataLabels.constructor==Array){K=this.dataLabelFormatString||"%s";X=e.jqplot.sprintf(K,this.dataLabels[this._dataIndices[Y]])}}}}var s=(this._radius)*this.dataLabelPositionFactor+this.sliceMargin+this.dataLabelNudge;var T=(U[0][0]+U[1][0])/2+this.canvas._offsets.left;var S=(U[1][1]+U[2][1])/2+this.canvas._offsets.top;var z=e('<span class="jqplot-funnel-series jqplot-data-label" style="position:absolute;">'+X+"</span>").insertBefore(p.eventCanvas._elem);T-=z.width()/2;S-=z.height()/2;T=Math.round(T);S=Math.round(S);z.css({left:T,top:S})}}};e.jqplot.FunnelAxisRenderer=function(){e.jqplot.LinearAxisRenderer.call(this)};e.jqplot.FunnelAxisRenderer.prototype=new e.jqplot.LinearAxisRenderer();e.jqplot.FunnelAxisRenderer.prototype.constructor=e.jqplot.FunnelAxisRenderer;e.jqplot.FunnelAxisRenderer.prototype.init=function(m){this.tickRenderer=e.jqplot.FunnelTickRenderer;e.extend(true,this,m);this._dataBounds={min:0,max:100};this.min=0;this.max=100;this.showTicks=false;this.ticks=[];this.showMark=false;this.show=false};e.jqplot.FunnelLegendRenderer=function(){e.jqplot.TableLegendRenderer.call(this)};e.jqplot.FunnelLegendRenderer.prototype=new e.jqplot.TableLegendRenderer();e.jqplot.FunnelLegendRenderer.prototype.constructor=e.jqplot.FunnelLegendRenderer;e.jqplot.FunnelLegendRenderer.prototype.init=function(m){this.numberRows=null;this.numberColumns=null;e.extend(true,this,m)};e.jqplot.FunnelLegendRenderer.prototype.draw=function(){var p=this;if(this.show){var x=this._series;var A="position:absolute;";A+=(this.background)?"background:"+this.background+";":"";A+=(this.border)?"border:"+this.border+";":"";A+=(this.fontSize)?"font-size:"+this.fontSize+";":"";A+=(this.fontFamily)?"font-family:"+this.fontFamily+";":"";A+=(this.textColor)?"color:"+this.textColor+";":"";A+=(this.marginTop!=null)?"margin-top:"+this.marginTop+";":"";A+=(this.marginBottom!=null)?"margin-bottom:"+this.marginBottom+";":"";A+=(this.marginLeft!=null)?"margin-left:"+this.marginLeft+";":"";A+=(this.marginRight!=null)?"margin-right:"+this.marginRight+";":"";this._elem=e('<table class="jqplot-table-legend" style="'+A+'"></table>');var E=false,w=false,m,u;var y=x[0];var n=new e.jqplot.ColorGenerator(y.seriesColors);if(y.show){var F=y.data;if(this.numberRows){m=this.numberRows;if(!this.numberColumns){u=Math.ceil(F.length/m)}else{u=this.numberColumns}}else{if(this.numberColumns){u=this.numberColumns;m=Math.ceil(F.length/this.numberColumns)}else{m=F.length;u=1}}var D,C,o,r,q,t,v,B;var z=0;for(D=0;D<m;D++){if(w){o=e('<tr class="jqplot-table-legend"></tr>').prependTo(this._elem)}else{o=e('<tr class="jqplot-table-legend"></tr>').appendTo(this._elem)}for(C=0;C<u;C++){if(z<F.length){t=this.labels[z]||F[z][0].toString();B=n.next();if(!w){if(D>0){E=true}else{E=false}}else{if(D==m-1){E=false}else{E=true}}v=(E)?this.rowSpacing:"0";r=e('<td class="jqplot-table-legend" style="text-align:center;padding-top:'+v+';"><div><div class="jqplot-table-legend-swatch" style="border-color:'+B+';"></div></div></td>');q=e('<td class="jqplot-table-legend" style="padding-top:'+v+';"></td>');if(this.escapeHtml){q.text(t)}else{q.html(t)}if(w){q.prependTo(o);r.prependTo(o)}else{r.appendTo(o);q.appendTo(o)}E=true}z++}}}}return this._elem};function c(q,p,n){n=n||{};n.axesDefaults=n.axesDefaults||{};n.legend=n.legend||{};n.seriesDefaults=n.seriesDefaults||{};var m=false;if(n.seriesDefaults.renderer==e.jqplot.FunnelRenderer){m=true}else{if(n.series){for(var o=0;o<n.series.length;o++){if(n.series[o].renderer==e.jqplot.FunnelRenderer){m=true}}}}if(m){n.axesDefaults.renderer=e.jqplot.FunnelAxisRenderer;n.legend.renderer=e.jqplot.FunnelLegendRenderer;n.legend.preDraw=true;n.sortData=false;n.seriesDefaults.pointLabels={show:false}}}function g(p,o,m){for(var n=0;n<this.series.length;n++){if(this.series[n].renderer.constructor==e.jqplot.FunnelRenderer){if(this.series[n].highlightMouseOver){this.series[n].highlightMouseDown=false}}}}function k(m){for(var n=0;n<this.series.length;n++){this.series[n].seriesColors=this.seriesColors;this.series[n].colorGenerator=e.jqplot.colorGenerator}}function d(q,p,o){var n=q.series[p];var m=q.plugins.funnelRenderer.highlightCanvas;m._ctx.clearRect(0,0,m._ctx.canvas.width,m._ctx.canvas.height);n._highlightedPoint=o;q.plugins.funnelRenderer.highlightedSeriesIndex=p;n.renderer.drawSection.call(n,m._ctx,n._vertices[o],n.highlightColors[o],false)}function i(o){var m=o.plugins.funnelRenderer.highlightCanvas;m._ctx.clearRect(0,0,m._ctx.canvas.width,m._ctx.canvas.height);for(var n=0;n<o.series.length;n++){o.series[n]._highlightedPoint=null}o.plugins.funnelRenderer.highlightedSeriesIndex=null;o.target.trigger("jqplotDataUnhighlight")}function a(q,p,t,s,r){if(s){var o=[s.seriesIndex,s.pointIndex,s.data];var n=jQuery.Event("jqplotDataMouseOver");n.pageX=q.pageX;n.pageY=q.pageY;r.target.trigger(n,o);if(r.series[o[0]].highlightMouseOver&&!(o[0]==r.plugins.funnelRenderer.highlightedSeriesIndex&&o[1]==r.series[o[0]]._highlightedPoint)){var m=jQuery.Event("jqplotDataHighlight");m.which=q.which;m.pageX=q.pageX;m.pageY=q.pageY;r.target.trigger(m,o);d(r,o[0],o[1])}}else{if(s==null){i(r)}}}function b(p,o,s,r,q){if(r){var n=[r.seriesIndex,r.pointIndex,r.data];if(q.series[n[0]].highlightMouseDown&&!(n[0]==q.plugins.funnelRenderer.highlightedSeriesIndex&&n[1]==q.series[n[0]]._highlightedPoint)){var m=jQuery.Event("jqplotDataHighlight");m.which=p.which;m.pageX=p.pageX;m.pageY=p.pageY;q.target.trigger(m,n);d(q,n[0],n[1])}}else{if(r==null){i(q)}}}function j(o,n,r,q,p){var m=p.plugins.funnelRenderer.highlightedSeriesIndex;if(m!=null&&p.series[m].highlightMouseDown){i(p)}}function f(p,o,s,r,q){if(r){var n=[r.seriesIndex,r.pointIndex,r.data];var m=jQuery.Event("jqplotDataClick");m.which=p.which;m.pageX=p.pageX;m.pageY=p.pageY;q.target.trigger(m,n)}}function l(q,p,t,s,r){if(s){var o=[s.seriesIndex,s.pointIndex,s.data];var m=r.plugins.funnelRenderer.highlightedSeriesIndex;if(m!=null&&r.series[m].highlightMouseDown){i(r)}var n=jQuery.Event("jqplotDataRightClick");n.which=q.which;n.pageX=q.pageX;n.pageY=q.pageY;r.target.trigger(n,o)}}function h(){if(this.plugins.funnelRenderer&&this.plugins.funnelRenderer.highlightCanvas){this.plugins.funnelRenderer.highlightCanvas.resetCanvas();this.plugins.funnelRenderer.highlightCanvas=null}this.plugins.funnelRenderer={};this.plugins.funnelRenderer.highlightCanvas=new e.jqplot.GenericCanvas();var n=e(this.targetId+" .jqplot-data-label");if(n.length){e(n[0]).before(this.plugins.funnelRenderer.highlightCanvas.createElement(this._gridPadding,"jqplot-funnelRenderer-highlight-canvas",this._plotDimensions,this))}else{this.eventCanvas._elem.before(this.plugins.funnelRenderer.highlightCanvas.createElement(this._gridPadding,"jqplot-funnelRenderer-highlight-canvas",this._plotDimensions,this))}var m=this.plugins.funnelRenderer.highlightCanvas.setContext();this.eventCanvas._elem.bind("mouseleave",{plot:this},function(o){i(o.data.plot)})}e.jqplot.preInitHooks.push(c);e.jqplot.FunnelTickRenderer=function(){e.jqplot.AxisTickRenderer.call(this)};e.jqplot.FunnelTickRenderer.prototype=new e.jqplot.AxisTickRenderer();e.jqplot.FunnelTickRenderer.prototype.constructor=e.jqplot.FunnelTickRenderer})(jQuery);
\ No newline at end of file
diff --git a/modules/Calendar/views/QuickCreateAjax.php b/modules/Calendar/views/QuickCreateAjax.php
index ac00e7e..adfb899 100644
--- a/modules/Calendar/views/QuickCreateAjax.php
+++ b/modules/Calendar/views/QuickCreateAjax.php
@@ -101,7 +101,8 @@ class Calendar_QuickCreateAjax_View extends Vtiger_QuickCreateAjax_View {
 		$viewer->assign('SCRIPTS', $this->getHeaderScripts($request));
 		$viewer->assign('RELATED_CONTACTS', $existingRelatedContacts);
 		$viewer->assign('FIELDS_INFO', json_encode($fieldsInfo));
-
+                $viewer->assign('RECORD_MODEL', $recordModel);
+        
 		$viewer->assign('RECORD_ID', $recordId);
 		$viewer->assign('MODE', $mode);
 		$viewer->view('QuickCreate.tpl', $moduleName);
diff --git a/modules/CustomerPortal/apis/FetchRecords.php b/modules/CustomerPortal/apis/FetchRecords.php
index 931c68d..6b386dd 100644
--- a/modules/CustomerPortal/apis/FetchRecords.php
+++ b/modules/CustomerPortal/apis/FetchRecords.php
@@ -1,4 +1,5 @@
 <?php
+
 /* +**********************************************************************************
  * The contents of this file are subject to the vtiger CRM Public License Version 1.1
  * ("License"); You may not use this file except in compliance with the License
@@ -6,164 +7,164 @@
  * The Initial Developer of the Original Code is vtiger.
  * Portions created by vtiger are Copyright (C) vtiger.
  * All Rights Reserved.
- * ***********************************************************************************/
+ * ********************************************************************************** */
 
 class CustomerPortal_FetchRecords extends CustomerPortal_API_Abstract {
 
-	function process(CustomerPortal_API_Request $request) {
-		$response = new CustomerPortal_API_Response();
-		$current_user = $this->getActiveUser();
-
-		if ($current_user) {
-			$customerId = $this->getActiveCustomer()->id;
-			$contactWebserviceId = vtws_getWebserviceEntityId('Contacts', $customerId);
-			$accountId = $this->getParent($contactWebserviceId);
-			$mode = $request->get('mode');
-			$module = $request->get('module');
-			$moduleLabel = $request->get('moduleLabel');
-			$fieldsArray = $request->get('fields');
-			$orderBy = $request->get('orderBy');
-			$order = $request->get('order');
-			$activeFields = CustomerPortal_Utils::getActiveFields($module);
-
-			if (empty($orderBy)) {
-				$orderBy = 'modifiedtime';
-			} else {
-				if (!in_array($orderBy, $activeFields)) {
-					throw new Exception("sort by $orderBy not allowed", 1412);
-					exit;
-				}
-			}
-
-			if (empty($order)) {
-				$order = 'DESC';
-			} else {
-				if (!in_array(strtoupper($order), array("DESC", "ASC"))) {
-					throw new Exception("Invalid sorting order", 1412);
-					exit;
-				}
-			}
-			$fieldsArray = Zend_Json::decode($fieldsArray);
-			$groupConditionsBy = $request->get('groupConditions');
-			$page = $request->get('page');
-			if (empty($page))
-				$page = 0;
-
-			$pageLimit = $request->get('pageLimit');
-
-			if (empty($pageLimit))
-				$pageLimit = CustomerPortal_Config::$DEFAULT_PAGE_LIMIT;
-
-			if (empty($groupConditionsBy))
-				$groupConditionsBy = 'AND';
-
-			if (!CustomerPortal_Utils::isModuleActive($module)) {
-				throw new Exception("Module not accessible", 1412);
-				exit;
-			}
-
-			if (empty($mode)) {
-				$mode = CustomerPortal_Settings_Utils::getDefaultMode($module);
-			}
-			$count = null;
-
-			if ($fieldsArray !== null) {
-				foreach ($fieldsArray as $key => $value) {
-					if (!in_array($key, $activeFields)) {
-						throw new Exception($key." is not accessible.", 1412);
-						exit;
-					}
-				}
-			}
-			$fields = implode(',', $activeFields);
-
-			if ($module == 'Faq') {
-				if (!empty($fieldsArray)) {
-					$countSql = "SELECT COUNT(*) FROM Faq WHERE faqstatus='Published' AND ";
-					$sql = sprintf('SELECT %s FROM Faq WHERE faqstatus=\'Published\' AND ', $fields);
-
-					foreach ($fieldsArray as $key => $value) {
-						$countSql.= $key.'=\''.$value."' ".$groupConditionsBy." ";
-						$sql.= $key.'=\''.$value."' ".$groupConditionsBy." ";
-					}
-					$countSql = CustomerPortal_Utils::str_replace_last($groupConditionsBy, ';', $countSql);
-					$sql = CustomerPortal_Utils::str_replace_last($groupConditionsBy, '', $sql);
-				} else {
-					$countSql = "SELECT COUNT(*) FROM Faq WHERE faqstatus='Published';";
-					$sql = sprintf('SELECT %s FROM Faq WHERE faqstatus=\'Published\'', $fields);
-				}
-				$countResult = vtws_query($countSql, $current_user);
-				$count = $countResult[0]['count'];
-
-				$sql = sprintf('%s ORDER BY %s %s LIMIT %s,%s ;', $sql, $orderBy, $order, ($page * $pageLimit), $pageLimit);
-				$result = vtws_query($sql, $current_user);
-			} else if ($module == 'Contacts') {
-				$result = vtws_query(sprintf("SELECT %s FROM %s WHERE id='%s';", $fields, $module, $contactWebserviceId), $current_user);
-			} else if ($module == 'Accounts') {
-				if (!empty($accountId))
-					$result = vtws_query(sprintf("SELECT %s FROM %s WHERE id='%s';", $fields, $module, $accountId), $current_user);
-			} else {
-				$relatedId = null;
-				$defaultMode = CustomerPortal_Settings_Utils::getDefaultMode($module);
-				if (!empty($fieldsArray)) {
-					$countSql = sprintf('SELECT count(*) FROM %s WHERE ', $module);
-					$sql = sprintf('SELECT %s FROM %s WHERE ', $fields, $module);
-
-					foreach ($fieldsArray as $key => $value) {
-						$countSql.= $key.'=\''.$value."' ".$groupConditionsBy." ";
-						$sql.= $key.'=\''.$value."' ".$groupConditionsBy." ";
-					}
-
-					$countSql = CustomerPortal_Utils::str_replace_last($groupConditionsBy, '', $countSql);
-					$sql = CustomerPortal_Utils::str_replace_last($groupConditionsBy, '', $sql);
-				} else {
-					$countSql = sprintf('SELECT count(*) FROM %s', $module);
-					$sql = sprintf('SELECT %s FROM %s', $fields, $module);
-				}
-				if ($mode == 'mine') {
-					$relatedId = $contactWebserviceId;
-					$countResult = vtws_query_related($countSql, $relatedId, $moduleLabel, $current_user);
-					$count = $countResult[0]['count'];
-
-					$limitClause = sprintf('ORDER BY %s %s LIMIT %s,%s', $orderBy, $order, ($page * $pageLimit), $pageLimit);
-					$result = vtws_query_related($sql, $relatedId, $moduleLabel, $current_user, $limitClause);
-				} else if ($mode == 'all') {
-					if (in_array($module, array('Products', 'Services'))) {
-						$countSql = sprintf('SELECT count(*) FROM %s;', $module);
-						$sql = sprintf('SELECT %s FROM %s', $fields, $module);
-						$limitClause = sprintf('ORDER BY %s %s LIMIT %s,%s;', $orderBy, $order, ($page * $pageLimit), $pageLimit);
-						$sql = $sql.' '.$limitClause;
-						$result = vtws_query($sql, $current_user);
-						$countResult = vtws_query($countSql, $current_user);
-						$count = $countResult[0]['count'];
-					} else {
-						if (!empty($accountId)) {
-							if ($defaultMode == 'all')
-								$relatedId = $accountId;
-							else
-								$relatedId = $contactWebserviceId;
-						}
-						else {
-							$relatedId = $contactWebserviceId;
-						}
-
-						$countResult = vtws_query_related($countSql, $relatedId, $moduleLabel, $current_user);
-						$count = $countResult[0]['count'];
-
-						$limitClause = sprintf('ORDER BY %s %s LIMIT %s,%s', $orderBy, $order, ($page * $pageLimit), $pageLimit);
-						$result = vtws_query_related($sql, $relatedId, $moduleLabel, $current_user, $limitClause);
-					}
-				}
-			}
-
-			foreach ($result as $key => $recordValues) {
-				$result[$key] = CustomerPortal_Utils::resolveRecordValues($recordValues);
-			}
-
-			$response->setResult($result);
-			$response->addToResult('count', $count);
-			return $response;
-		}
-	}
+    function process(CustomerPortal_API_Request $request) {
+        $response = new CustomerPortal_API_Response();
+        $current_user = $this->getActiveUser();
+
+        if ($current_user) {
+            $customerId = $this->getActiveCustomer()->id;
+            $contactWebserviceId = vtws_getWebserviceEntityId('Contacts', $customerId);
+            $accountId = $this->getParent($contactWebserviceId);
+            $mode = $request->get('mode');
+            $module = $request->get('module');
+            $moduleLabel = $request->get('moduleLabel');
+            $fieldsArray = $request->get('fields');
+            $orderBy = $request->get('orderBy');
+            $order = $request->get('order');
+            $activeFields = CustomerPortal_Utils::getActiveFields($module);
+
+            if (empty($orderBy)) {
+                $orderBy = 'modifiedtime';
+            } else {
+                if (!in_array($orderBy, $activeFields)) {
+                    throw new Exception("sort by $orderBy not allowed", 1412);
+                    exit;
+                }
+            }
+
+            if (empty($order)) {
+                $order = 'DESC';
+            } else {
+                if (!in_array(strtoupper($order), array("DESC", "ASC"))) {
+                    throw new Exception("Invalid sorting order", 1412);
+                    exit;
+                }
+            }
+            $fieldsArray = Zend_Json::decode($fieldsArray);
+            $groupConditionsBy = $request->get('groupConditions');
+            $page = $request->get('page');
+            if (empty($page))
+                $page = 0;
+
+            $pageLimit = $request->get('pageLimit');
+
+            if (empty($pageLimit))
+                $pageLimit = CustomerPortal_Config::$DEFAULT_PAGE_LIMIT;
+
+            if (empty($groupConditionsBy))
+                $groupConditionsBy = 'AND';
+
+            if (!CustomerPortal_Utils::isModuleActive($module)) {
+                throw new Exception("Module not accessible", 1412);
+                exit;
+            }
+
+            if (empty($mode)) {
+                $mode = CustomerPortal_Settings_Utils::getDefaultMode($module);
+            }
+            $count = null;
+
+            if ($fieldsArray !== null) {
+                foreach ($fieldsArray as $key => $value) {
+                    if (!in_array($key, $activeFields)) {
+                        throw new Exception($key . " is not accessible.", 1412);
+                        exit;
+                    }
+                }
+            }
+            $fields = implode(',', $activeFields);
+
+            if ($module == 'Faq') {
+                if (!empty($fieldsArray)) {
+                    $countSql = "SELECT COUNT(*) FROM Faq WHERE faqstatus='Published' AND ";
+                    $sql = sprintf('SELECT %s FROM Faq WHERE faqstatus=\'Published\' AND ', $fields);
+
+                    foreach ($fieldsArray as $key => $value) {
+                        $countSql .= $key . '=\'' . $value . "' " . $groupConditionsBy . " ";
+                        $sql .= $key . '=\'' . $value . "' " . $groupConditionsBy . " ";
+                    }
+                    $countSql = CustomerPortal_Utils::str_replace_last($groupConditionsBy, ';', $countSql);
+                    $sql = CustomerPortal_Utils::str_replace_last($groupConditionsBy, '', $sql);
+                } else {
+                    $countSql = "SELECT COUNT(*) FROM Faq WHERE faqstatus='Published';";
+                    $sql = sprintf('SELECT %s FROM Faq WHERE faqstatus=\'Published\'', $fields);
+                }
+                $countResult = vtws_query($countSql, $current_user);
+                $count = $countResult[0]['count'];
+
+                $sql = sprintf('%s ORDER BY %s %s LIMIT %s,%s ;', $sql, $orderBy, $order, ($page * $pageLimit), $pageLimit);
+                $result = vtws_query($sql, $current_user);
+            } else if ($module == 'Contacts') {
+                $result = vtws_query(sprintf("SELECT %s FROM %s WHERE id='%s';", $fields, $module, $contactWebserviceId), $current_user);
+            } else if ($module == 'Accounts') {
+                if (!empty($accountId))
+                    $result = vtws_query(sprintf("SELECT %s FROM %s WHERE id='%s';", $fields, $module, $accountId), $current_user);
+            } else {
+                $relatedId = null;
+                $defaultMode = CustomerPortal_Settings_Utils::getDefaultMode($module);
+                if (!empty($fieldsArray)) {
+                    $countSql = sprintf('SELECT count(*) FROM %s WHERE ', $module);
+                    $sql = sprintf('SELECT %s FROM %s WHERE ', $fields, $module);
+
+                    foreach ($fieldsArray as $key => $value) {
+                        $countSql .= $key . '=\'' . $value . "' " . $groupConditionsBy . " ";
+                        $sql .= $key . '=\'' . $value . "' " . $groupConditionsBy . " ";
+                    }
+
+                    $countSql = CustomerPortal_Utils::str_replace_last($groupConditionsBy, '', $countSql);
+                    $sql = CustomerPortal_Utils::str_replace_last($groupConditionsBy, '', $sql);
+                } else {
+                    $countSql = sprintf('SELECT count(*) FROM %s', $module);
+                    $sql = sprintf('SELECT %s FROM %s', $fields, $module);
+                }
+                if ($mode == 'mine') {
+                    $relatedId = $contactWebserviceId;
+                    $countResult = vtws_query_related($countSql, $relatedId, $moduleLabel, $current_user);
+                    $count = $countResult[0]['count'];
+
+                    $limitClause = sprintf('ORDER BY %s %s LIMIT %s,%s', $orderBy, $order, ($page * $pageLimit), $pageLimit);
+                    $result = vtws_query_related($sql, $relatedId, $moduleLabel, $current_user, $limitClause);
+                } else if ($mode == 'all') {
+                    if (in_array($module, array('Products', 'Services'))) {
+                        $countSql = sprintf('SELECT count(*) FROM %s;', $module);
+                        $sql = sprintf('SELECT %s FROM %s', $fields, $module);
+                        $limitClause = sprintf('ORDER BY %s %s LIMIT %s,%s;', $orderBy, $order, ($page * $pageLimit), $pageLimit);
+                        $sql = $sql . ' ' . $limitClause;
+                        $result = vtws_query($sql, $current_user);
+                        $countResult = vtws_query($countSql, $current_user);
+                        $count = $countResult[0]['count'];
+                    } else {
+                        if (!empty($accountId)) {
+                            if ($defaultMode == 'all')
+                                $relatedId = $accountId;
+                            else
+                                $relatedId = $contactWebserviceId;
+                        }
+                        else {
+                            $relatedId = $contactWebserviceId;
+                        }
+
+                        $countResult = vtws_query_related($countSql, $relatedId, $moduleLabel, $current_user);
+                        $count = $countResult[0]['count'];
+
+                        $limitClause = sprintf('ORDER BY %s %s LIMIT %s,%s', $orderBy, $order, ($page * $pageLimit), $pageLimit);
+                        $result = vtws_query_related($sql, $relatedId, $moduleLabel, $current_user, $limitClause);
+                    }
+                }
+            }
+
+            foreach ($result as $key => $recordValues) {
+                $result[$key] = CustomerPortal_Utils::resolveRecordValues($recordValues);
+            }
+
+            $response->setResult($result);
+            $response->addToResult('count', $count);
+            return $response;
+        }
+    }
 
 }
diff --git a/modules/Emails/mail.php b/modules/Emails/mail.php
index 3fd285a..20aad63 100644
--- a/modules/Emails/mail.php
+++ b/modules/Emails/mail.php
@@ -385,9 +385,7 @@ function setMailServerProperties($mail)
 	}
 	else if(!isset($_REQUEST['server'])){
 		$smtp_auth = $adb->query_result($res,0,'smtp_auth');
-        if($smtp_auth == "1" || $smtp_auth == "true"){
-            $smtp_auth = true;
-        }
+                $smtp_auth = ($smtp_auth == "1" || $smtp_auth == "true");
     }
 
         // SalesPlatform.ru begin
diff --git a/modules/ExtensionStore/ExtensionStore.js b/modules/ExtensionStore/ExtensionStore.js
deleted file mode 100644
index 2f6a809..0000000
--- a/modules/ExtensionStore/ExtensionStore.js
+++ /dev/null
@@ -1,131 +0,0 @@
-/*+**********************************************************************************
- * The contents of this file are subject to the vtiger CRM Public License Version 1.1
- * ("License"); You may not use this file except in compliance with the License
- * The Original Code is: vtiger CRM Open Source
- * The Initial Developer of the Original Code is vtiger.
- * Portions created by vtiger are Copyright (C) vtiger.
- * All Rights Reserved.
- ************************************************************************************/
-
-jQuery.Class('ExtensionStore_ExtensionStore_Js', {}, {
-	/**
-	 * Function to register events for banner
-	 */
-	registerEventsForBanner: function () {
-		var bxTarget = jQuery('.bxslider');
-		var items = jQuery('li', bxTarget);
-		if (items.length) {
-			bxTarget.bxSlider({
-				mode: 'fade',
-				auto: true,
-				pager: items.length > 1,
-				speed: items.length > 1 ? 1500 : 0,
-				pause: 3000
-			});
-		}
-	},
-	/**
-	 * Function to getPromotions from marketplace
-	 */
-	getPromotions: function () {
-		var thisInstance = this;
-		var params = {
-			'module': 'ExtensionStore',
-			'view': 'Listings',
-			'mode': 'getPromotions'
-		};
-		app.request.post({data:params}).then(
-			function (err, data) {
-				if ((typeof data != 'undefined') && (jQuery(data).find('img').length > 0)) {
-					jQuery('.dashboardBanner').append(data);
-					thisInstance.registerEventsForBanner();
-				} else {
-					jQuery('.togglePromotion').addClass('hide');
-				}
-			},
-			function (error) {
-			}
-		);
-	},
-
-	/**
-	 * Function to request get promotions from market place based on promotion closed date
-	 */
-	getPromotionsFromMarketPlace: function (promotionClosedDate) {
-		var thisInstance = this;
-		if (promotionClosedDate != null) {
-			var maxPromotionParams = {
-				'module': 'ExtensionStore',
-				'action': 'Promotion',
-				'mode': 'maxCreatedOn'
-			};
-			app.request.post({data:maxPromotionParams}).then(
-				function (err, data) {
-					var date = data['result'];
-					var dateObj = new Date(date);
-					var closedDate = new Date(promotionClosedDate);
-					var dateDiff = ((dateObj.getTime()) - (closedDate.getTime())) / (1000 * 60 * 60 * 24);
-					if (dateDiff > 0) {
-						thisInstance.getPromotions();
-					} else {
-						jQuery('.togglePromotion').addClass('hide');
-					}
-				});
-		} else if (promotionClosedDate == null) {
-			thisInstance.getPromotions();
-		}
-	},
-
-	registerEventsForTogglePromotion: function () {
-		var thisInstance = this;
-		jQuery('.togglePromotion').on('click', function (e) {
-			var element = jQuery(e.currentTarget);
-			var bannerContainer = jQuery('.banner-container');
-
-			if (element.hasClass('up')) {
-				bannerContainer.slideUp();
-				element.find('.fa-chevron-up').addClass('hide');
-				element.find('.fa-chevron-down').removeClass('hide');
-				element.addClass('down').removeClass('up');
-			} else if (element.hasClass('down')) {
-				if (bannerContainer.find('img').length <= 0) {
-					thisInstance.getPromotionsFromMarketPlace(null);
-				}
-				bannerContainer.slideDown();
-				element.find('.fa-chevron-down').addClass('hide');
-				element.find('.fa-chevron-up').removeClass('hide');
-				element.addClass('up').removeClass('down');
-			}
-		});
-	},
-
-	insertTogglePromotionHtml: function () {
-		var toggleHtml = '<div class="btn-group">'+
-				'<button class="btn btn-default addButton togglePromotion up">'+
-					'<span id="hide" class="fa fa-chevron-up"></span>'+
-					'<span id="show" class="fa fa-chevron-down hide"></span>'+
-				'</button>'+
-				'</div>';
-		jQuery('.dashboardHeading').find('.buttonGroups').append(toggleHtml);
-	},
-
-	registerEvents: function () {
-		var thisInstance = this;
-		var moduleName = app.getModuleName();
-
-		if ((moduleName == 'Home')) {
-			thisInstance.insertTogglePromotionHtml();
-			thisInstance.getPromotionsFromMarketPlace();
-			thisInstance.registerEventsForTogglePromotion();
-			jQuery('.togglePromotion').trigger('click');
-		}
-	}
-});
-
-jQuery(document).ready(function () {
-	var moduleName = app.getModuleName();
-	if (moduleName == 'Home') {
-		var instance = new ExtensionStore_ExtensionStore_Js();
-		instance.registerEvents();
-	}
-});
diff --git a/modules/ExtensionStore/actions/Promotion.php b/modules/ExtensionStore/actions/Promotion.php
deleted file mode 100644
index d12daca..0000000
--- a/modules/ExtensionStore/actions/Promotion.php
+++ /dev/null
@@ -1,37 +0,0 @@
-<?php
-/* +**********************************************************************************
- * The contents of this file are subject to the vtiger CRM Public License Version 1.1
- * ("License"); You may not use this file except in compliance with the License
- * The Original Code is: vtiger CRM Open Source
- * The Initial Developer of the Original Code is vtiger.
- * Portions created by vtiger are Copyright (C) vtiger.
- * All Rights Reserved.
- * ***********************************************************************************/
-
-class ExtensionStore_Promotion_Action extends Vtiger_Index_View {
-
-	public function __construct() {
-		parent::__construct();
-		$this->exposeMethod('maxCreatedOn');
-	}
-
-	public function process(Vtiger_Request $request) {
-		$mode = $request->getMode();
-		if (!empty($mode)) {
-			$this->invokeExposedMethod($mode, $request);
-			return;
-		}
-	}
-
-    protected function maxCreatedOn(Vtiger_Request $request){
-		$modelInstance = Settings_ExtensionStore_Extension_Model::getInstance();
-		$promotions = $modelInstance->getMaxCreatedOn('Promotion', 'max', 'createdon');
-		$response = new Vtiger_Response();
-		if ($promotions['success'] != 'true') {
-			$response->setError('', $promotions['error']);
-		} else {
-			$response->setResult($promotions['response']);
-		}
-		$response->emit();
-	}
-}
diff --git a/modules/ExtensionStore/views/Listings.php b/modules/ExtensionStore/views/Listings.php
deleted file mode 100644
index 1b362fa..0000000
--- a/modules/ExtensionStore/views/Listings.php
+++ /dev/null
@@ -1,49 +0,0 @@
-<?php
-/* +**********************************************************************************
- * The contents of this file are subject to the vtiger CRM Public License Version 1.1
- * ("License"); You may not use this file except in compliance with the License
- * The Original Code is: vtiger CRM Open Source
- * The Initial Developer of the Original Code is vtiger.
- * Portions created by vtiger are Copyright (C) vtiger.
- * All Rights Reserved.
- * ***********************************************************************************/
-
-class ExtensionStore_Listings_View extends Vtiger_Index_View {
-
-	public function __construct() {
-		parent::__construct();
-		$this->exposeMethod('getPromotions');
-	}
-
-	public function getHeaderScripts(Vtiger_Request $request) {
-		$jsFileNames = array(
-			"libraries.jquery.boxslider.jqueryBxslider",
-		);
-		$jsScriptInstances = $this->checkAndConvertJsScripts($jsFileNames);
-		return $jsScriptInstances;
-	}
-
-	public function process(Vtiger_Request $request) {
-		$mode = $request->getMode();
-		if (!empty($mode)) {
-			$this->invokeExposedMethod($mode, $request);
-			return;
-		}
-	}
-
-	/**
-	 * Function to get news listings by passing type as News
-	 */
-	protected function getPromotions(Vtiger_Request $request) {
-		$modelInstance = Settings_ExtensionStore_Extension_Model::getInstance();
-		$promotions = $modelInstance->getListings(null, 'Promotion');
-		$qualifiedModuleName = $request->getModule(false);
-
-		$viewer = $this->getViewer($request);
-		$viewer->assign('PROMOTIONS', $promotions);
-		$viewer->assign('QUALIFIED_MODULE', $qualifiedModuleName);
-		$viewer->assign('HEADER_SCRIPTS', $this->getHeaderScripts($request));
-		$viewer->view('Promotions.tpl', $qualifiedModuleName);
-	}
-
-}
diff --git a/modules/Google/connectors/Calendar.php b/modules/Google/connectors/Calendar.php
index eb59097..35d5bbf 100644
--- a/modules/Google/connectors/Calendar.php
+++ b/modules/Google/connectors/Calendar.php
@@ -137,6 +137,7 @@ Class Google_Calendar_Connector extends WSAPP_TargetConnector {
      * @return <array> google Records
      */
     public function getCalendar($SyncState, $user = false) {
+        global $default_timezone;
         if($this->apiConnection->isTokenExpired()) {
             $this->apiConnection->refreshToken();
             $this->client->setAccessToken($this->apiConnection->getAccessToken());
@@ -175,9 +176,10 @@ Class Google_Calendar_Connector extends WSAPP_TargetConnector {
             $calendarRecords = $feed->getItems();
             if($feed->getNextPageToken()) $this->totalRecords = $this->maxResults + 1;
         }
-        
         if (count($calendarRecords) > 0) {
-            $maxModifiedTime = date('Y-m-d H:i:s', strtotime(Google_Contacts_Model::vtigerFormat(end($calendarRecords)->getUpdated())) + 1);
+            $date = new DateTime(Google_Contacts_Model::vtigerFormat(end($calendarRecords)->getUpdated()), new DateTimeZone('UTC'));
+            $date->setTimezone(new DateTimeZone($default_timezone));
+            $maxModifiedTime = $date->date;
         }
 
         $googleRecords = array();
diff --git a/modules/Google/connectors/Contacts.php b/modules/Google/connectors/Contacts.php
index 9465ea0..c0aa513 100644
--- a/modules/Google/connectors/Contacts.php
+++ b/modules/Google/connectors/Contacts.php
@@ -116,10 +116,14 @@ Class Google_Contacts_Connector extends WSAPP_TargetConnector {
 	 * @return <Mixed>
 	 */
 	public function getMappedValue($valueSet,$mapping) {
-		$key = $mapping['google_field_type'];
-		if($key == 'custom')
-			$key = $mapping['google_custom_label'];
-		return $valueSet[decode_html($key)];
+		$keyArray = $mapping['google_field_type'];
+		if($keyArray == 'custom')
+			$keyArray = $mapping['google_custom_label'];
+                foreach ($keyArray as $key) {
+                        if (array_key_exists(decode_html($key), $valueSet)) {
+                           return $valueSet[decode_html($key)];
+                        }
+                    }
 	}
 
 	/**
@@ -434,7 +438,9 @@ Class Google_Contacts_Connector extends WSAPP_TargetConnector {
 		foreach($this->fieldMapping as $vtFieldName => $googleFieldDetails) {
 			if(in_array($googleFieldDetails['google_field_name'],array('gd:givenName','gd:familyName','gd:orgTitle','gd:orgName','gd:namePrefix')))
 				continue;
-
+                        
+                        if(is_array($googleFieldDetails['google_field_type']))
+                            $googleFieldDetails['google_field_type'] = array_shift($googleFieldDetails['google_field_type']);
 			switch ($googleFieldDetails['google_field_name']) {  
 				case 'gd:email' : 
 					if($entity->get($vtFieldName)) {
diff --git a/modules/Google/helpers/Utils.php b/modules/Google/helpers/Utils.php
index 68695c7..a97f7ce 100644
--- a/modules/Google/helpers/Utils.php
+++ b/modules/Google/helpers/Utils.php
@@ -13,6 +13,7 @@ class Google_Utils_Helper {
     const settings_table_name = 'vtiger_google_sync_settings';
     
     const fieldmapping_table_name = 'vtiger_google_sync_fieldmapping';
+    const fieldlocalization_table_name = 'vtiger_google_sync_localization';
 
     /**
      * Updates the database with syncronization times
@@ -231,37 +232,37 @@ class Google_Utils_Helper {
             ),
             'email' => array(
                 'google_field_name' => 'gd:email',
-                'google_field_type' => 'home',
+                'google_field_type' => array('home', 'Домашние контакты'),
                 'google_custom_label' => ''
             ),
             'secondaryemail' => array(
                 'google_field_name' => 'gd:email',
-                'google_field_type' => 'work',
+                'google_field_type' => array('work', 'Рабочие контакты'),
                 'google_custom_label' => ''
             ),
             'mobile' => array(
                 'google_field_name' => 'gd:phoneNumber',
-                'google_field_type' => 'mobile',
+                'google_field_type' => array ('mobile', 'Мобильные устройства'),
                 'google_custom_label' => ''
             ),
             'phone' => array(
                 'google_field_name' => 'gd:phoneNumber',
-                'google_field_type' => 'work',
+                'google_field_type' => array('work', 'Рабочие контакты'),
                 'google_custom_label' => ''
             ),
             'homephone' => array(
                 'google_field_name' => 'gd:phoneNumber',
-                'google_field_type' => 'home',
+                'google_field_type' => array('home', 'Домашние контакты'),
                 'google_custom_label' => ''
             ),
             'mailingaddress' => array(
                 'google_field_name' => 'gd:structuredPostalAddress',
-                'google_field_type' => 'home',
+                'google_field_type' => array('home', 'Домашние контакты'),
                 'google_custom_label' => ''
             ),
             'otheraddress' => array(
                 'google_field_name' => 'gd:structuredPostalAddress',
-                'google_field_type' => 'work',
+                'google_field_type' => array('work', 'Рабочие контакты'),
                 'google_custom_label' => ''
             ),
             'description' => array(
@@ -270,13 +271,16 @@ class Google_Utils_Helper {
                 'google_custom_label' => ''
             )  
         );
-        $sql = 'SELECT vtiger_field,google_field,google_field_type,google_custom_label FROM ' . self::fieldmapping_table_name . ' WHERE user = ?';
+        $sql = 'SELECT vtiger_field,google_field,google_field_type,google_custom_label, russian_field_type  FROM '
+                . self::fieldmapping_table_name 
+                . ' INNER JOIN ' . self::fieldlocalization_table_name . 
+                ' ON (' . self::fieldmapping_table_name . '.google_field = ' . self::fieldlocalization_table_name .'.field_name) WHERE user = ?';
         $result = $db->pquery($sql,array($user->getId()));
         for($i=0;$i<$db->num_rows($result);$i++) {  
             $row = $db->fetch_row($result);
             $fieldmapping[$row['vtiger_field']] = array(
                 'google_field_name' => $row['google_field'],
-                'google_field_type' => $row['google_field_type'],
+                'google_field_type' => array($row['google_field_type'], $row['russian_field_type'] ),
                 'google_custom_label' => $row['google_custom_label']
             );
         }
diff --git a/modules/Google/models/Calendar.php b/modules/Google/models/Calendar.php
index 827203e..9869598 100644
--- a/modules/Google/models/Calendar.php
+++ b/modules/Google/models/Calendar.php
@@ -44,6 +44,7 @@ class Google_Calendar_Model extends WSAPP_SyncRecordModel {
      * @return <date> start time
      */
     function getStartTimeUTC($user = false) {
+        global $default_timezone;
         if (isset($this->startUTC)) {
             return $this->startUTC;
         }
@@ -59,7 +60,7 @@ class Google_Calendar_Model extends WSAPP_SyncRecordModel {
             $gStart = "00:00";
         }
         $start = new DateTime($gStart);
-        $timeZone = new DateTimeZone('UTC');
+        $timeZone = new DateTimeZone($default_timezone);
         $start->setTimezone($timeZone);
         $startUTC = $start->format('H:i:s');
         $gDateTime = $when->getDateTime();
@@ -77,6 +78,7 @@ class Google_Calendar_Model extends WSAPP_SyncRecordModel {
      * @return <date> end time
      */
     function getEndTimeUTC($user = false) {
+        global $default_timezone;
         if (isset($this->endUTC)) {
             return $this->endUTC;
         }
@@ -92,7 +94,7 @@ class Google_Calendar_Model extends WSAPP_SyncRecordModel {
             $gEnd = "00:00";
         }
         $end = new DateTime($gEnd);
-        $timeZone = new DateTimeZone('UTC');
+        $timeZone = new DateTimeZone($default_timezone);
         $end->setTimezone($timeZone);
         $endUTC = $end->format('H:i:s');
         $gDateTime = $when->getDateTime();
@@ -110,6 +112,7 @@ class Google_Calendar_Model extends WSAPP_SyncRecordModel {
      * @return <date> start date
      */
     function getStartDate($user = false) {
+        global $default_timezone;
         if (isset($this->startDate)) {
             return $this->startdate;
         }
@@ -127,7 +130,7 @@ class Google_Calendar_Model extends WSAPP_SyncRecordModel {
             $gStart = date('Y-m-d');
         }
         $start = new DateTime($gStart);
-        $timeZone = new DateTimeZone('UTC');
+        $timeZone = new DateTimeZone($default_timezone);
         $start->setTimezone($timeZone);
         $startDate = $start->format('Y-m-d');
         $gDateTime = $when->getDateTime();
@@ -145,6 +148,7 @@ class Google_Calendar_Model extends WSAPP_SyncRecordModel {
      * @return <date> end date
      */
     function getEndDate($user = false) {
+        global $default_timezone;
         if (isset($this->endUTC)) {
             return $this->endUTC;
         }
@@ -162,7 +166,7 @@ class Google_Calendar_Model extends WSAPP_SyncRecordModel {
             $gEnd = date('Y-m-d');
         }
         $end = new DateTime($gEnd);
-        $timeZone = new DateTimeZone('UTC');
+        $timeZone = new DateTimeZone($default_timezone);
         $end->setTimezone($timeZone);
         $endDate = $end->format('Y-m-d');
         $gDateTime = $when->getDateTime();
diff --git a/modules/HelpDesk/HelpDeskPDFController.php b/modules/HelpDesk/HelpDeskPDFController.php
index b43e52f..81180ad 100644
--- a/modules/HelpDesk/HelpDeskPDFController.php
+++ b/modules/HelpDesk/HelpDeskPDFController.php
@@ -23,7 +23,7 @@ class SalesPlatform_HelpDeskPDFController extends SalesPlatform_PDF_SPPDFControl
 
 		$this->generateEntityModel($this->focus, 'HelpDesk', 'helpdesk_', $model);
 
-           	$entity = new Products();
+                $entity = CRMEntity::getInstance('Products');
                 if($this->focusColumnValue('product_id'))
             	    $entity->retrieve_entity_info($this->focusColumnValue('product_id'), 'Products');
                 $this->generateEntityModel($entity, 'Products', 'product_', $model);
@@ -31,8 +31,8 @@ class SalesPlatform_HelpDeskPDFController extends SalesPlatform_PDF_SPPDFControl
                 if($this->focusColumnValue('parent_id'))
                     $setype = getSalesEntityType($this->focusColumnValue('parent_id'));
 
-                $account = new Accounts();
-                $contact = new Contacts();
+                $account = CRMEntity::getInstance('Accounts');
+                $contact = CRMEntity::getInstance('Contacts');
 
                 if($setype == 'Accounts')
            	    $account->retrieve_entity_info($this->focusColumnValue('parent_id'), $setype);
diff --git a/modules/Install/models/Utils.php b/modules/Install/models/Utils.php
index ca3818f..2f9ebc4 100644
--- a/modules/Install/models/Utils.php
+++ b/modules/Install/models/Utils.php
@@ -37,7 +37,16 @@ class Install_Utils_Model {
 		'Logo Directory' => './test/logo/',
 		'Logs Directory' => './logs/',
 	);
-
+    
+    public static $migrationWritableFilesAndFolders = [
+        'cron/', 'data/', 'include/', 'includes/', 'kcfinder/',
+        'languages/', 'layouts/', 'libraries/', 'license/', 'modules/',
+        'packages/', 'resources/', 'schema/', 'soap/', 'vtlib/',
+        'LICENSE.txt', 'config.php', 'config.security.php', 
+        'config.template.php', 'forgotPassword.php', 'index.php', 
+        'spServicePackVersion.txt', 'vtigercron.php', 'vtigerversion.php'
+    ];
+    
 	/**
 	 * Function returns all the files and folder that are not writable
 	 * @return <Array>
@@ -53,7 +62,19 @@ class Install_Utils_Model {
 		}
 		return $failedPermissions;
 	}
-
+    
+    public static function getFailedMigrationPermissionFiles() {
+        $failedFiles = [];
+        require_once ('include/utils/VtlibUtils.php');
+        foreach(self::$migrationWritableFilesAndFolders as $filePath) {
+            if (!vtlib_isWriteable($filePath)) {
+                $failedFiles[] = $filePath;
+            }
+        }
+        
+        return $failedFiles;
+    }
+    
 	/**
 	 * Function returns the php.ini file settings required for installing vtigerCRM
 	 * @return <Array>
diff --git a/modules/MailManager/models/Message.php b/modules/MailManager/models/Message.php
index 09e61e3..9d51d44 100644
--- a/modules/MailManager/models/Message.php
+++ b/modules/MailManager/models/Message.php
@@ -262,7 +262,12 @@ class MailManager_Message_Model extends Vtiger_MailRecord  {
 
 			$whereClause = "";
 			if ($aName) { $whereClause .= " AND aname=?"; $params[] = $aName; }
-			if ($aId)   { $whereClause .= " AND aid=?"; $params[] = $aId; }
+
+			if ($aId) { 
+                $whereClause .= " AND attachid=?"; 
+                $params[] = $aId; 
+            }
+
 
 			$atResult = $db->pquery("SELECT {$filteredColumns} FROM vtiger_mailmanager_mailattachments
 						WHERE userid=? AND muid=? $whereClause", $params);
diff --git a/modules/MailManager/views/Relation.php b/modules/MailManager/views/Relation.php
index af36990..6c5b17c 100644
--- a/modules/MailManager/views/Relation.php
+++ b/modules/MailManager/views/Relation.php
@@ -341,6 +341,11 @@ class MailManager_Relation_View extends MailManager_Abstract_View {
 					$relationController = new MailManager_Relate_Action();
 					$relationController->__SaveAttachements($mail, $linkModule, $recordModel);
 				}
+                                $relationController = new MailManager_Relate_Action();
+                                
+                                if($linkModule == 'Potentials' ){
+                                    $this->saveAttachments($request->get('_msgno'), $foldername, $recordModel);
+                                }
 
 				$viewer->assign('MSGNO', $request->get('_msgno'));
 				$viewer->assign('LINKEDTO', $linkedto);
@@ -636,5 +641,49 @@ class MailManager_Relation_View extends MailManager_Abstract_View {
 	public function validateRequest(Vtiger_Request $request) {
 		return $request->validateWriteAccess();
 	}
+        
+        public function saveAttachments($msgNo, $folderName, $recordModel) {
+            if(!empty($folderName) && !empty($msgNo)) {
+                $mailManagerRelationView = new MailManager_Relation_View();
+                $connector = $mailManagerRelationView->getConnector($folderName);
+                $mail = $connector->openMail($msgNo, $folderName);
+                $attachments = $mail->attachments();
+            } else {
+                return null;
+            }
+            
+            $currentUserModel = Users_Record_Model::getCurrentUserModel();
+            $linkModule = 'Potentials';
+            foreach($attachments as $attachment){
+                $document = CRMEntity::getInstance('Documents');
+                    $document->column_fields['notes_title'] = $attachment['filename'];
+                    $document->column_fields['filename'] = $attachment['filename'];
+                    $document->column_fields['filetype'] = vtlib_mime_content_type($attachment['path']);
+                    $document->column_fields['filestatus'] = 1;
+                    $document->column_fields['filelocationtype'] = 'I';
+                    $document->column_fields['folderid'] = 1; // Default Folder
+                    $fileSize = filesize($attachment['path']);
+                    $document->column_fields['filesize'] = $fileSize;
+                    $document->column_fields['assigned_user_id'] = $currentUserModel->getId();
+                    $document->save('Documents');
+
+                $parentModuleModel = Vtiger_Module_Model::getInstance($linkModule);
+                $parentRecordId = $recordModel->getId();
+                $relatedModule = Vtiger_Module_Model::getInstance('Documents');
+                $relatedRecordId = $document->id;
+
+                $relationModel = Vtiger_Relation_Model::getInstance($parentModuleModel, $relatedModule);
+                if($relationModel){
+                    $relationModel->addRelation($parentRecordId, $relatedRecordId);
+                }
+
+                $recordModelDocument = Vtiger_Record_Model::getInstanceById($document->id, "Documents");
+                $relationController = new MailManager_Relate_Action();
+                $mailrecord =  clone $mail;
+                $mailrecord->_attachments = array($attachment);
+                $relationController->__SaveAttachements($mailrecord, $linkModule, $recordModelDocument);
+            }  
+            return null;
+        }
 }
 ?>
\ No newline at end of file
diff --git a/modules/Potentials/PotentialsPDFController.php b/modules/Potentials/PotentialsPDFController.php
index 25b3328..28c3191 100644
--- a/modules/Potentials/PotentialsPDFController.php
+++ b/modules/Potentials/PotentialsPDFController.php
@@ -22,13 +22,13 @@ class SalesPlatform_PotentialsPDFController extends SalesPlatform_PDF_SPPDFContr
 
             $this->generateEntityModel($this->focus, 'Potentials', 'potential_', $model);
 
-            $entity = new Accounts();
+            $entity = CRMEntity::getInstance('Accounts');
             if($this->focusColumnValue('related_to')) {
                 $entity->retrieve_entity_info($this->focusColumnValue('related_to'), 'Accounts');
             }
             $this->generateEntityModel($entity, 'Accounts', 'account_', $model);
 
-            $entity = new Contacts();
+            $entity = CRMEntity::getInstance('Contacts');
             if($this->focusColumnValue('contact_id')) {
                 $entity->retrieve_entity_info($this->focusColumnValue('contact_id'), 'Contacts');
             }
diff --git a/modules/PriceBooks/models/ListView.php b/modules/PriceBooks/models/ListView.php
index f34855d..16b9794 100644
--- a/modules/PriceBooks/models/ListView.php
+++ b/modules/PriceBooks/models/ListView.php
@@ -97,7 +97,14 @@ class PriceBooks_ListView_Model extends Vtiger_ListView_Model {
 				}
 			}
 		}
-
+                
+                if ($this->has('src_record')){
+                    $split = preg_split('/ where /i', $listQuery);
+                    $innerString = " INNER JOIN vtiger_pricebookproductrel ON vtiger_pricebook.pricebookid=vtiger_pricebookproductrel.pricebookid ";
+                    $listQuery =  $split[0] . $innerString . ' WHERE vtiger_pricebookproductrel.productid=' . $this->get('src_record') . ' AND ' . $split[1];
+
+                }
+                
 		$startIndex = $pagingModel->getStartIndex();
 		$pageLimit = $pagingModel->getPageLimit();
 
diff --git a/modules/SMSNotifier/providers/SigmaSMS.php b/modules/SMSNotifier/providers/SigmaSMS.php
index ee27a0d..73d47b9 100644
--- a/modules/SMSNotifier/providers/SigmaSMS.php
+++ b/modules/SMSNotifier/providers/SigmaSMS.php
@@ -1,210 +1,289 @@
-<?php
-/***********************************************************************************
- * PINstudio #Binizik
- ************************************************************************************/
-include_once 'vtlib/Vtiger/Net/Client.php';
-
-class SMSNotifier_SigmaSMS_Provider implements SMSNotifier_ISMSProvider_Model {
-
-    private $_username;
-    private $_password;
-    private $_parameters = array();
-    private $_errorsMsg = array(
-            1 => 'ошибка авторизации',
-            2 => 'недостаточно денежных средств',
-            3 => 'запрос отвергнут провайдером',
-            4 => 'неверный запрос',
-            5 => 'неверный тип запроса',
-            6 => 'неверные параметры сообщения',
-            7 => 'запрос с неизвестного IP адреса',
-            8 => 'сообщение не найдено в БД',
-            9 => 'неверный адрес отправителя',
-            10 => 'неверный текст сообщения',
-            11 => 'неверный параметр validity_period',
-            13 => 'превышено максимальное количество номеров за один запрос',
-            14 => 'неверный тип группы',
-            15 => 'ошибка сохранения в БД',
-            16 => 'неверный формат даты',
-            17 => 'неверный формат даты и времени',
-            99 => 'внутренняя ошибка системы'
-        );
-
-    const SENDER_PARAM = 'Отправитель';
-
-    private static $REQUIRED_PARAMETERS = array(self::SENDER_PARAM);
-
-    function __construct() {
-    }
-
-    public function getName() {
-        return 'SigmaSMS';
-    }
-
-    public function setAuthParameters($username, $password) {
-        $this->_username = $username;
-        $this->_password = $password;
-    }
-
-    public function setParameter($key, $value) {
-        $this->_parameters[$key] = $value;
-    }
-
-    public function getParameter($key, $defvalue = false)  {
-        if(isset($this->_parameters[$key])) {
-            return $this->_parameters[$key];
-        }
-        return $defvalue;
-    }
-
-    public function getRequiredParams() {
-        return self::$REQUIRED_PARAMETERS;
-    }
-
-    public function getServiceURL($type = false) {
-        return false;
-    }
-
-    public function send($message, $tonumbers) {
-        if (!is_array($tonumbers)) {
-            $tonumbers = array($tonumbers);
-        }
-        $message = htmlspecialchars($message);
-        $results = array();
-        $fields = array();
-
-        foreach ($tonumbers as $to) {
-            $fields['target'] .= $to.',';
-        }
-        
-        $fields['target'] = urlencode( rtrim($fields['target'], ',') );
-        $fields['user'] = urlencode( $this->_username );
-        $fields['pass'] = urlencode( md5($this->_password) );
-        $fields['type'] = urlencode('SMS');
-        $fields['action'] = urlencode('post');
-        $fields['message'] = urlencode( htmlspecialchars($message) );
-        $fields['sender'] = urlencode( $this->getParameter(self::SENDER_PARAM) );
-
-
-        $responseXml = $this->curl_send($fields, 'http://gates.sigmasms.ru/http/gate.cgi');
-        $response = simplexml_load_string($responseXml);
-
-        if (empty($response->result->error)) {
-            foreach ($response->result->message as $k => $v) {
-                $result['id'] = $v->attributes()['id'];
-                $result['to'] = $v->attributes()['target'];
-                $result['status'] = self::MSG_STATUS_PROCESSING;
-                $result['statusmessage'] = "Передано в MSGC на отправку - в очереди отправки MSGC";
-
-                $results[] = $result;
-            }
-
-            if (!empty($response->errors)) {
-                foreach ($response->errors->error as $k => $v) {
-                    $result['id'] = time()-rand(0, 2244); // Random id
-                    $result['to'] = $v->attributes()['target'];
-                    $result['error'] = true;
-                    $result['status'] = self::MSG_STATUS_ERROR;
-                    $result['statusmessage'] = $v;
-
-                    $results[] = $result;
-                }
-            } 
-        } else {
-            foreach (explode(',', $fields['target']) as $k => $v) {
-                $result['id'] = time()-rand(0, 2244); // Random id
-                $result['to'] = $v;
-                $result['error'] = true;
-                $result['status'] = self::MSG_STATUS_ERROR;
-                $result['statusmessage'] = $this->_errorsMsg[ (int)$response->result->error ];
-
-                $results[] = $result;
-            }
-        }
-
-        return $results;
-    }
-
-    public function query($messageId) {
-        if (empty($messageId)){
-            $result['error'] = true;
-            $result['needlookup'] = 0;
-            $result['statusmessage'] = 'Пустой идентификатор сообщения';
-            $result['status'] = self::MSG_STATUS_ERROR;
-
-            return $result;
-        }
-
-        $fields['user'] = urlencode( $this->_username );
-        $fields['pass'] = urlencode( md5($this->_password) );
-        $fields['message_id'] = urlencode($messageId);
-        $fields['action'] = urlencode('status');
-
-        $responseXml = $this->curl_send($fields, 'http://gates.sigmasms.ru/http/gate.cgi');
-        $response = simplexml_load_string($responseXml);
-
-        if (!empty($response->result->error)) {
-            $result['error'] = true;
-            $result['needlookup'] = 0;
-            $result['status'] = self::MSG_STATUS_ERROR;
-            $result['statusmessage'] = $this->_errorsMsg[ (int)$response->result->error ];
-        } else {
-            switch($response->MESSAGES->MESSAGE->MSGSTC_CODE) {
-                case 'delivered':
-                    // Сообщение было доставлено. Конечный статус (не меняется со временем)
-                    $result['statusmessage'] = "Сообщение было доставлено";
-                    $result['status'] = self::MSG_STATUS_DELIVERED;
-                    $result['needlookup'] = 0;
-                    $result['error'] = false;
-
-                    break;
-                case 'wait':
-                    // Не конечный статус (меняется со временем).
-                    $result['statusmessage'] = "Передано в MSGC на отправку - в очереди отправки MSGC";
-                    $result['status'] = self::MSG_STATUS_PROCESSING;
-                    $result['needlookup'] = 1;
-                    $result['error'] = false;
-
-                    break;
-                case 'failed':
-                    // Сообщение не было доставлено. Конечный статус (не меняется со временем)
-                    $result['statusmessage'] = "Сообщение не было доставлено";
-                    $result['status'] = self::MSG_STATUS_FAILED;
-                    $result['needlookup'] = 0;
-                    $result['error'] = true;
-
-                    break;
-                default:
-                    $result['statusmessage'] = "Неизвестный статус: ".$response->MESSAGES->MESSAGE->MSGSTC_CODE;
-                    $result['status'] = self::MSG_STATUS_ERROR;
-                    $result['needlookup'] = 0;
-                    $result['error'] = true;
-
-                    break;
-            }
-        }
-
-        return $result;
-    }
-
-    private function curl_send($fields, $url) {
-        foreach ($fields as $k => $v) {
-            $data .= $k.'='.$v.'&';
-        }
-        rtrim($data,'&');
-
-        $ch = curl_init();
-        curl_setopt($ch, CURLOPT_HTTPHEADER, array('Content-Type: application/x-www-form-urlencoded; charset=utf-8'));
-        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
-        curl_setopt($ch, CURLOPT_CRLF, true);
-        curl_setopt($ch, CURLOPT_POST, true);
-        curl_setopt($ch, CURLOPT_SSLVERSION,3);
-        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);
-        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 2);
-        curl_setopt($ch, CURLOPT_POSTFIELDS, $data);
-        curl_setopt($ch, CURLOPT_URL, $url);
-        $response = curl_exec($ch);
-        curl_close($ch);
-
-        return $response;
-    }
-}
+<?php
+/*+**********************************************************************************
+ * PINstudio #Binizik
+ ************************************************************************************/
+include_once 'vtlib/Vtiger/Net/Client.php';
+
+class SMSNotifier_SigmaSMS_Provider implements SMSNotifier_ISMSProvider_Model {
+
+    private $_username;
+    private $_password;
+    private $_parameters = array();
+    private static $MSGS = [
+        'PROCESSING' => 'Передано на отправку'
+    ];
+    
+    private $_errorsMsg = array(
+            1 => 'ошибка авторизации',
+            2 => 'недостаточно денежных средств',
+            3 => 'запрос отвергнут провайдером',
+            4 => 'неверный запрос',
+            5 => 'неверный тип запроса',
+            6 => 'неверные параметры сообщения',
+            7 => 'запрос с неизвестного IP адреса',
+            8 => 'сообщение не найдено в БД',
+            9 => 'неверный адрес отправителя',
+            10 => 'неверный текст сообщения',
+            11 => 'неверный параметр validity_period',
+            13 => 'превышено максимальное количество номеров за один запрос',
+            14 => 'неверный тип группы',
+            15 => 'ошибка сохранения в БД',
+            16 => 'неверный формат даты',
+            17 => 'неверный формат даты и времени',
+            99 => 'внутренняя ошибка системы'
+        );
+
+    const SENDER_PARAM = 'Отправитель';
+    const HOST = 'https://online.sigmasms.ru/';
+
+    private static $REQUIRED_PARAMETERS = array(self::SENDER_PARAM);
+
+    function __construct() {
+    }
+
+    public function getName() {
+        return 'SigmaSMS';
+    }
+
+    public function setAuthParameters($username, $password) {
+        $this->_username = $username;
+        $this->_password = $password;
+    }
+
+    public function setParameter($key, $value) {
+        $this->_parameters[$key] = $value;
+    }
+
+    public function getParameter($key, $defvalue = false)  {
+        if (isset($this->_parameters[$key])) {
+            return $this->_parameters[$key];
+        }
+        return $defvalue;
+    }
+
+    public function getRequiredParams() {
+        return self::$REQUIRED_PARAMETERS;
+    }
+
+    public function getServiceURL($type = false) {
+        return false;
+    }
+
+    public function query($messageId)
+    {
+        $result = [
+            'needlookup' => 0
+        ];
+        if (empty($messageId)){
+            $result['error'] = true;
+            $result['statusmessage'] = 'Пустой идентификатор сообщения';
+            $result['status'] = self::MSG_STATUS_ERROR;
+
+            return $result;
+        }
+
+        $response = $this->queryNG($messageId);
+
+        if (!empty($response['error'])) {
+            $result['error'] = true;
+            $result['status'] = self::MSG_STATUS_ERROR;
+            $result['statusmessage'] = $response['error'];
+            return $result;
+        }
+
+        switch ($response['status']) {
+            case 'succeed':
+            case 'delivered':
+            case 'seen':
+                $result['statusmessage'] = "Сообщение было доставлено";
+                $result['status'] = self::MSG_STATUS_DELIVERED;
+                $result['error'] = false;
+
+                break;
+            case 'failed':
+                $result['statusmessage'] = "Сообщение не было доставлено";
+                $result['status'] = self::MSG_STATUS_FAILED;
+                $result['error'] = true;
+
+                break;
+            case 'processing':
+            case 'sent':
+            case 'pending':
+                // Не конечный статус (меняется со временем).
+                $result['needlookup'] = 1;
+                $result['statusmessage'] = "Передано в MSGC на отправку - в очереди отправки MSGC";
+                $result['status'] = self::MSG_STATUS_PROCESSING;
+                $result['error'] = false;
+                break;
+            default:
+                $result['statusmessage'] = "Неизвестный статус: {$response['status']}/{$response['msg']}";
+                $result['status'] = self::MSG_STATUS_ERROR;
+                $result['error'] = true;
+
+                break;
+        }
+
+        return $result;
+    }
+
+    //GET https://set.sigmasms.ru/api/sendings/[ID СООБЩЕНИЯ]
+    public function queryNG($msgid)
+    {
+        $response = $this->sigmaRequest('sendings/'.$msgid);
+
+        if (!in_array('id', array_keys($response))) return false;
+
+        return [
+            'id'     => $response['id'],
+            'status' => $response['state']['status'],
+            'msg'    => '',
+        ];
+    }
+
+    public function send($msg, $to)
+    {
+        $tgt = is_array($to)?implode(',', $to):$to;
+        $body = [
+            "type"      => "sms",
+            "recipient" => $tgt,
+            "payload"   => [
+                "sender" => $this->getParameter(self::SENDER_PARAM),
+                "text"   => $msg
+            ]
+        ];
+
+        $response = $this->sigmaRequest('sendings', $body);
+
+        if (is_bool($response)) return false;
+
+        /*
+        //Sample error message
+        "data":[{
+            "type":"string",
+            "field":"payload.sender",
+            "message":"The \'payload.sender\' field must be a string!"
+        }]
+         */
+        if (empty($response['id'])) {
+            $msg = [];
+            if (array_key_exists('error', $response)) {
+                $msg[] = 'Error: ' . $response['error'];
+            }
+            if (array_key_exists('message', $response)) {
+                $msg[] = $response['message'];
+            }
+
+            return implode('; ', $msg);
+        }
+
+        $result = [
+            'id' => $response['id'],
+            'to' => $tgt,
+            'status' => $response['status'],
+            'statusmessage' => self::$MSGS['PROCESSING'],
+            'raw' => $response
+        ];
+
+        return [$result];
+    }
+
+    /**
+     * Wrapper to lowlevel curl request
+     *
+     * @param str   $op   operation
+     * @param array $data post data
+     *
+     * @return curl request results
+     */
+    public function sigmaRequest($op, $data = [])
+    {
+        $auth = $this->_getToken();
+        $gotToken = is_array($auth) && array_key_exists('token', $auth);
+        if (!$gotToken) {
+            return 'No token';
+        }
+
+        $token = $auth['token'];
+        $query = '';
+
+        $gotData = !empty($data);
+        if ($gotData) {
+            $query = json_encode($data);
+        }
+
+        $headers = [
+            'Authorization: ' . $token,
+        ];
+
+        return $this->_curl($op, $query, $headers);
+    }
+    
+    /**
+     * GET request
+     * TODO token caching
+     *
+     * @return array
+     */
+    private function _getToken()
+    {
+        $args = [
+            'username' => $this->_username,
+            'password' => $this->_password
+        ];
+        return $this->_curl(
+            'login',
+            json_encode($args)
+        );
+    }
+
+    /**
+     * Request
+     *
+     * @param str   $op      sigmasms operation
+     * @param str   $data    post data as a string
+     * @param array $head    extra headers
+     * @param int   $timeout defaults to 10 seconds
+     *
+     * @return mixed decoded json response
+     */
+    private function _curl($op, $data = '', $head = [], $timeout = 10)
+    {
+        $svcUrl = self::HOST . 'api/' . $op;
+
+        $common = [
+            'Content-type: application/json',
+            'Referer: ' . self::HOST,
+        ];
+
+        $headers = array_merge($common, $head);
+
+        $curl = curl_init();
+        curl_setopt($curl, CURLOPT_URL, $svcUrl);
+        curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, false);
+        curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, false);
+        if (!empty($data)) {
+            $headers[] = 'Content-length: ' . strlen($data);
+            curl_setopt($curl, CURLOPT_POST, true);
+            curl_setopt($curl, CURLOPT_POSTFIELDS, $data);
+        }
+        curl_setopt($curl, CURLOPT_HTTPHEADER, $headers);
+        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
+        curl_setopt($curl, CURLOPT_TIMEOUT, $timeout);
+        curl_setopt($curl, CURLOPT_VERBOSE, true);
+        $response = curl_exec($curl);
+
+        $decoded = json_decode($response, 1);
+        if (json_last_error() != JSON_ERROR_NONE) return false;
+
+        $stats = [
+            'code'  => curl_getinfo($curl, CURLINFO_HTTP_CODE),
+            'error' => curl_error($curl),
+            'data'  => $decoded,
+        ];
+
+        curl_close($curl);
+
+        return $decoded;    
+    }
+}
+?>
\ No newline at end of file
diff --git a/modules/SPDynamicBlocks/resources/SPDynamicBlocks.js b/modules/SPDynamicBlocks/resources/SPDynamicBlocks.js
index 173eb93..3edb7fd 100644
--- a/modules/SPDynamicBlocks/resources/SPDynamicBlocks.js
+++ b/modules/SPDynamicBlocks/resources/SPDynamicBlocks.js
@@ -128,8 +128,13 @@ jQuery.Class("SPDynamicBlocks_Js", {}, {
         var form = jQuery('#detailView');
         var formBlocks = form.find('.block');
         formBlocks.show();
-        jQuery.each(blocksToHide, function (key, blockToHide) {            
-            jQuery(".block_" + blockToHide.split(' ')[0], form).hide();
+        jQuery.each(blocksToHide, function (key, blockToHide) {   
+            $.each(formBlocks, function(index, formBlock) {
+                var blockLabel = $(formBlock).data("block");
+                if(blockLabel === blockToHide) {
+                    $(formBlock).hide();
+                }
+            }) ;
         });
     },
     
diff --git a/modules/SPTips/SPTips.php b/modules/SPTips/SPTips.php
index 4865b8a..35f0a10 100644
--- a/modules/SPTips/SPTips.php
+++ b/modules/SPTips/SPTips.php
@@ -25,24 +25,22 @@ class SPTips {
             
             /* Create field in module settings */
             $sql = "set @lastfieldid = (select `id` from `vtiger_settings_field_seq`);";
-            $adb->pquery($sql,array());
+            $adb->query($sql);
             $sql = "set @blockid = (select `blockid` from `vtiger_settings_blocks` where `label` = 'LBL_INTEGRATION');";
-            $adb->pquery($sql,array());
+            $adb->query($sql);
             $sql = "set @maxseq = (select max(`sequence`) from `vtiger_settings_field` where `blockid` = @blockid);";
-            $adb->pquery($sql,array());
+            $adb->query($sql);
             $sql = "INSERT INTO `vtiger_settings_field` (`fieldid`, `blockid`, `name`, `iconpath`, `description`, `linkto`, `sequence`, `active`) "
                     . " VALUES (@lastfieldid+1, @blockid, 'LBL_TIPS', NULL, NULL, 'index.php?module=SPTips&view=Index&parent=Settings', @maxseq+1, 0);";
-            $adb->pquery($sql,array());
+            $adb->query($sql);
             $sql = "UPDATE `vtiger_settings_field_seq` SET `id` = @lastfieldid+1;";
-            $adb->pquery($sql,array());
+            $adb->query($sql);
             
-            $sql = "INSERT INTO sp_tips_providers (provider_name, api_key, token) VALUES ('DaData', '', '')";
-            $adb->pquery($sql,array());
-            $sql = "INSERT INTO sp_tips_providers (provider_name, api_key) VALUES ('Google', '')";
-            $adb->pquery($sql,array());
+            $sql = "INSERT INTO sp_tips_providers (provider_name, settings) VALUES ('DaData', '{\"api_key\":\"\"}')";
+            $adb->query($sql);
+            $sql = "INSERT INTO sp_tips_providers (provider_name, api_key) VALUES ('Google', '{\"api_key\":\"\"}')";
+            $adb->query($sql);
             
-            $sql = "INSERT INTO sp_tips_cur_provider SET cur_provider = (SELECT provider_id FROM sp_tips_providers WHERE provider_name = 'Google')";
-            $adb->pquery($sql,array());
             
             $this->addResources();
             
diff --git a/modules/SPTips/actions/GetBindingFields.php b/modules/SPTips/actions/GetBindingFields.php
new file mode 100644
index 0000000..328a48a
--- /dev/null
+++ b/modules/SPTips/actions/GetBindingFields.php
@@ -0,0 +1,47 @@
+<?php
+
+/*+**********************************************************************************
+ * The contents of this file are subject to the vtiger CRM Public License Version 1.1
+ * ("License"); You may not use this file except in compliance with the License
+ * The Original Code is: SalesPlatform Ltd
+ * The Initial Developer of the Original Code is SalesPlatform Ltd.
+ * All Rights Reserved.
+ * If you have any questions or comments, please email: devel@salesplatform.ru
+ ************************************************************************************/
+
+class SPTips_GetBindingFields_Action extends Vtiger_Action_Controller {
+    
+    public function checkPermission(Vtiger_Request $request) {
+		$currentUser = Users_Record_Model::getCurrentUserModel();
+        $privileges = $currentUser->getPrivileges();
+        if(!$privileges->hasModulePermission(getTabid('SPTips'))) {
+            throw new AppException(vtranslate('LBL_PERMISSION_DENIED', 'Vtiger'));
+        }
+	}
+    
+    public function process (Vtiger_Request $request) {
+        $moduleName = $request->get('sourceModule');
+        
+        $response = new Vtiger_Response();
+        $rulesList = [];
+        $moduleRules = Settings_SPTips_Rule_Model::getAllForModule($moduleName);
+        foreach($moduleRules as $ruleModel) {
+            $rulesList[] = $this->getRuleForResponse($ruleModel);
+        }
+        
+        $response->setResult($rulesList);
+        $response->emit();
+    }
+    
+    /**
+     * 
+     * @param Settings_SPTips_Rule_Model $ruleModel
+     */
+    private function getRuleForResponse($ruleModel) {
+        return [
+            'ruleId' => $ruleModel->getId(),
+            'autocomplete' => $ruleModel->getTipFieldName()
+        ];
+    }
+    
+}
\ No newline at end of file
diff --git a/modules/SPTips/actions/Search.php b/modules/SPTips/actions/Search.php
new file mode 100644
index 0000000..2b8b39f
--- /dev/null
+++ b/modules/SPTips/actions/Search.php
@@ -0,0 +1,69 @@
+<?php
+
+/*+**********************************************************************************
+ * The contents of this file are subject to the vtiger CRM Public License Version 1.1
+ * ("License"); You may not use this file except in compliance with the License
+ * The Original Code is: SalesPlatform Ltd
+ * The Initial Developer of the Original Code is SalesPlatform Ltd.
+ * All Rights Reserved.
+ * If you have any questions or comments, please email: devel@salesplatform.ru
+ ************************************************************************************/
+
+class SPTips_Search_Action extends Vtiger_Action_Controller {
+    
+    public function checkPermission(Vtiger_Request $request) {
+		$currentUser = Users_Record_Model::getCurrentUserModel();
+        $privileges = $currentUser->getPrivileges();
+        if(!$privileges->hasModulePermission(getTabid('SPTips'))) {
+            throw new AppException(vtranslate('LBL_PERMISSION_DENIED', 'Vtiger'));
+        }
+	}
+    
+    public function process (Vtiger_Request $request) {
+        $response = new Vtiger_Response();
+        
+        $ruleModel = Settings_SPTips_Rule_Model::getInstanceById($request->get('ruleId'));
+        if($ruleModel == null) {
+            $response->setError(vtranslate('LBL_INVALID_RULE', $request->getModule()));
+            $response->emit();
+            return;
+        }
+        
+        $provider = $ruleModel->getProvider();
+        if ($provider == null) {
+            $response->setError(vtranslate('LBL_NO_PROVIDER', $request->getModule()));
+            $response->emit();
+            return;
+        }
+        
+        $realizationModel = $provider->getConcreteRealization();
+        
+        switch($ruleModel->getType()) {
+            
+            case SPTips_SearchType_Model::ADDRESS:
+                $response->setResult(
+                    $realizationModel->searchAddress(
+                        $request->get('search'), 
+                        $ruleModel->getDependentFields()
+                    )
+                );
+                break;
+            
+            case SPTips_SearchType_Model::ORGANIZATION:
+                $response->setResult(
+                    $realizationModel->searchOrganization(
+                        $request->get('search'), 
+                        $ruleModel->getDependentFields()
+                    )
+                );
+                break;
+            
+            default:
+                $response->setError(vtranslate('LBL_INVALID_TYPE'));
+                break;
+        }
+        
+        
+        $response->emit();
+    }
+}
\ No newline at end of file
diff --git a/modules/SPTips/models/AbstractProvider.php b/modules/SPTips/models/AbstractProvider.php
index 13acb0c..30ea84f 100644
--- a/modules/SPTips/models/AbstractProvider.php
+++ b/modules/SPTips/models/AbstractProvider.php
@@ -10,21 +10,16 @@
  ************************************************************************************/
 
 abstract class SPTips_AbstractProvider_Model {
-    
-    protected $name;
-    
-    /**
-     * Returns name of the provider
-     * @return String
-     */
-    public function getName() {
-        return $this->name;
-    }
-    
+
     /**
      * returns array with adresses info
      * @return Array
      */
-    public abstract function searchAddress($searchParam);
+    public abstract function searchAddress($search, $dependentFieldsList);
+    
+    public abstract function searchOrganization($search, $dependentFields);
+    
+    public abstract function getProviderFields($type);
     
+    public abstract function getSupportedSearchTypes();
 }
\ No newline at end of file
diff --git a/modules/SPTips/models/AddressAggregator.php b/modules/SPTips/models/AddressAggregator.php
deleted file mode 100644
index 9110359..0000000
--- a/modules/SPTips/models/AddressAggregator.php
+++ /dev/null
@@ -1,54 +0,0 @@
-<?php
-
-/*+**********************************************************************************
- * The contents of this file are subject to the vtiger CRM Public License Version 1.1
- * ("License"); You may not use this file except in compliance with the License
- * The Original Code is: SalesPlatform Ltd
- * The Initial Developer of the Original Code is SalesPlatform Ltd.
- * All Rights Reserved.
- * If you have any questions or comments, please email: devel@salesplatform.ru
- ************************************************************************************/
-
-class SPTips_AddressAggregator_Model {
-    
-    private $provider;
-    private $searchParam;
-    private $vtigerFields;
-    private $providerFields; // fields, that are in rule
-    
-    public function __construct($providerObj, $searchParam, $vtigerFields, $providerFields) {
-        $this->provider = $providerObj;
-        $this->searchParam = $searchParam;
-        $this->vtigerFields = $vtigerFields;
-        $this->providerFields = $providerFields;
-    }
-    
-    public function getIntersectionBetweenFields($providerAnswer) {
-        if (count($this->vtigerFields) !== count($this->providerFields)) {
-            return null;
-        }
-        
-        $resultArr = array();
-        
-        foreach ($providerAnswer as $key => $addressInfo) {
-            foreach ($addressInfo as $providerKey => $item) {
-                if (in_array($providerKey, $this->providerFields)) {
-                    $vtigerField = array_keys($this->providerFields, $providerKey);
-                    foreach ($vtigerField as $foundField) {
-                        $resultArr[$key][$foundField] = $item;
-                    }
-                }
-            }
-        }
-        return $resultArr;
-    }
-    
-    public function searchAddress() {
-        $provider = $this->provider;
-        $providerAnswer = $provider->searchAddress($this->searchParam);
-        
-        $resultArray = $this->getIntersectionBetweenFields($providerAnswer);
-        return $resultArray;
-    }
-}
-
diff --git a/modules/SPTips/models/AvailableProviders.php b/modules/SPTips/models/AvailableProviders.php
deleted file mode 100644
index b114301..0000000
--- a/modules/SPTips/models/AvailableProviders.php
+++ /dev/null
@@ -1,22 +0,0 @@
-<?php
-
-/*+**********************************************************************************
- * The contents of this file are subject to the vtiger CRM Public License Version 1.1
- * ("License"); You may not use this file except in compliance with the License
- * The Original Code is: SalesPlatform Ltd
- * The Initial Developer of the Original Code is SalesPlatform Ltd.
- * All Rights Reserved.
- * If you have any questions or comments, please email: devel@salesplatform.ru
- ************************************************************************************/
-
-class SPTips_AvailableProviders_Model {
-    
-    public function getAvailvableProviders() {
-        // add new providers below
-        return array(
-            'DaData',
-            'Google'
-        );
-    }
-}
-
diff --git a/modules/SPTips/models/CurrentProvider.php b/modules/SPTips/models/CurrentProvider.php
deleted file mode 100644
index 350a90b..0000000
--- a/modules/SPTips/models/CurrentProvider.php
+++ /dev/null
@@ -1,30 +0,0 @@
-<?php
-
-/*+**********************************************************************************
- * The contents of this file are subject to the vtiger CRM Public License Version 1.1
- * ("License"); You may not use this file except in compliance with the License
- * The Original Code is: SalesPlatform Ltd
- * The Initial Developer of the Original Code is SalesPlatform Ltd.
- * All Rights Reserved.
- * If you have any questions or comments, please email: devel@salesplatform.ru
- ************************************************************************************/
-
-class SPTips_CurrentProvider_Model {
-    
-    public function getProviderInstance() {
-        $currentProviderModel = Settings_SPTips_Provider_Model::getInstance();
-        $providerName = $currentProviderModel->get('provider_name');
-        $APIKey = $currentProviderModel->get('api_key');
-        $secretKey = $currentProviderModel->get('token');
-        
-        if (stristr($providerName, 'DaData')) {
-            return new SPTips_DaDataProvider_Model($providerName, $APIKey, $secretKey);
-        }
-        else if (stristr($providerName, 'Google')) {
-            return new SPTips_GoogleProvider_Model($providerName, $APIKey, $secretKey);
-        }
-        // add new providers below
-        
-        return false;
-    }
-}
\ No newline at end of file
diff --git a/modules/SPTips/models/DaDataProvider.php b/modules/SPTips/models/DaDataProvider.php
index 270df45..d468ee5 100644
--- a/modules/SPTips/models/DaDataProvider.php
+++ b/modules/SPTips/models/DaDataProvider.php
@@ -12,12 +12,11 @@
 class SPTips_DaDataProvider_Model extends SPTips_AbstractProvider_Model {
     
     private $APIKey;
-    private $secretKey;
+    private $partnerValue;
     
-    public function __construct($name, $APIKey, $secretKey) {
-        $this->name = $name;
-        $this->APIKey = $APIKey;
-        $this->secretKey = $secretKey;
+    public function __construct($settings) {
+        $this->APIKey = $settings['api_key'];
+        $this->partnerValue = 'SALESPLATFORM';
     }
     
     public function getAPIKey() {
@@ -28,16 +27,243 @@ class SPTips_DaDataProvider_Model extends SPTips_AbstractProvider_Model {
         return $this->secretKey;
     }
     
-    public function getSearchAddressURL() {
+    /**
+     * 
+     * @param string $search
+     * @param Settings_SPTips_RuleDependentField_Model[] $dependentFields
+     * @return type
+     */
+    public function searchAddress($search, $dependentFields) {
+        $response = $this->executeRequest($this->getSearchAddressURL(), ['query' => $search]);
+        $result = [];
+        foreach ($response['suggestions'] as $value) {
+            $providerData = $value['data'];
+            $result[] = [
+                'tip' => $value['value'],
+                'fill' => $this->getFillData($providerData, $dependentFields)
+            ];
+        }
+        
+        return $result;
+    }
+    
+    public function searchOrganization($search, $dependentFields) {
+        $response = $this->executeRequest($this->getSearchOrganizationURL(), ['query' => $search]);
+        $result = [];
+        foreach ($response['suggestions'] as $value) {
+            $providerData = $value['data'];
+            $result[] = [
+                'tip' => $value['value'],
+                'fill' => $this->getSearchOrganizationFillData($providerData, $dependentFields)
+            ];
+        }
+        
+        return $result;
+    }
+    
+    public function getSupportedSearchTypes() {
+        return [
+            SPTips_SearchType_Model::ADDRESS,
+            SPTips_SearchType_Model::ORGANIZATION
+        ];
+    }
+    
+    /**
+     * 
+     * @param array $providerData
+     * @param Settings_SPTips_RuleDependentField_Model[] $dependentFields
+     */
+    private function getSearchOrganizationFillData($providerData, $dependentFields) {
+        $fillData = [];
+        foreach($dependentFields as $fieldModel) {
+            $providerFieldName = $fieldModel->getProviderFieldName();
+            $fillData[] = [
+                'vtigerField' => $fieldModel->getVtigerFieldName(),
+                'value' => $this->getDependentDataValue($providerData, $providerFieldName)
+            ];
+        }
+        
+        return $fillData;
+    }
+    
+    private function getOrganizationDataPath($providerFieldName) {
+        return explode(".", $providerFieldName);
+    }
+    
+    private function getDependentDataValue($providerData, $providerFieldName) {
+        if(empty($providerFieldName)) {
+            return null;
+        }
+        
+        $searchValue = $providerData;
+        $notFound = false;
+        foreach($this->getOrganizationDataPath($providerFieldName) as $levelFieldName) {
+            if(!array_key_exists($levelFieldName, $searchValue)) {
+                $notFound = true;
+                break;
+            }
+            
+            $searchValue = $searchValue[$levelFieldName];
+        }
+        
+        if($notFound) {
+            return null;
+        }
+        
+        return $searchValue;
+    }
+    
+    private function getFillData($providerData, $dependentFields) {
+        $fillData = [];
+        foreach($dependentFields as $dependentField) {
+            $providerFieldName = $dependentField->getProviderFieldName();
+            $providerValue = '';
+            if(array_key_exists($providerFieldName, $providerData)) {
+                $providerValue = $providerData[$providerFieldName];
+            }
+
+            $fillData[] = [
+                'vtigerField' => $dependentField->getVtigerFieldName(),
+                'value' => $providerValue
+            ];
+        }
+        
+        return $fillData;
+    }
+    
+    public function getProviderFields($type) {
+        switch($type) {
+            
+            case SPTips_SearchType_Model::ADDRESS:
+                return [
+                    'postal_code' => 'Postal code',
+                    'country' => 'Country',
+                    'region_fias_id' => 'FIAS region code',
+                    'region_kladr_id' => 'KLADR region code',
+                    'region_with_type' => 'Region with type',
+                    'region_type' => 'Region type (short)',
+                    'region_type_full' => 'Region type (full)',
+                    'region' => 'Region',
+                    'area_fias_id' => 'FIAS region code in the region',
+                    'area_kladr_id' => 'KLADR region code in the region',
+                    'area_with_type' => 'Area in the region with type',
+                    'area_type' => 'Area in the region with type (short)',
+                    'area_type_full' => 'Area in the region with type (full)',
+                    'area' => 'Area in the region',
+                    'city_fias_id' => 'FIAS code of the city',
+                    'city_kladr_id' => 'KLADR code of the city',
+                    'city_with_type' => 'City with type',
+                    'city_type' => 'Type of city (short)',
+                    'city_type_full' => 'Type of city (full)',
+                    'city' => 'City',
+                    'city_area' => 'Administrative district (only for Moscow)',
+                    'city_district_fias_id' => 'FIAS code of the ciry district (only if the district is in FIAS)',
+                    'city_district_kladr_id' => 'KLADR district code of the city (do not fill out)',
+                    'city_district_with_type' => 'City district with type',
+                    'city_district_type' => 'Type of city district (short)',
+                    'city_district_type_full' => 'Type of city district (long)',
+                    'city_district' => 'City district',
+                    'settlement_fias_id' => 'FIAS code of the settlement',
+                    'settlement_kladr_id' => 'KLADR code of the settlement',
+                    'settlement_with_type' => 'Settlement with type',
+                    'settlement_type' => 'Type of settlement (short)',
+                    'settlement_type_full' => 'Type of settlement (full)',
+                    'settlement' => 'Settlement',
+                    'street_fias_id' => 'FIAS street code',
+                    'street_kladr_id' => 'KLADR street code',
+                    'street_with_type' => 'Street with type',
+                    'street_type' => 'Street type (short)',
+                    'street_type_full' => 'Street type (full)',
+                    'street' => 'Street',
+                    'house_fias_id' => 'FIAS house code',
+                    'house_kladr_id' => 'KLADR house code',
+                    'house_type' => 'Type of house (short)',
+                    'house_type_full' => 'Type of house (long)',
+                    'house' => 'House',
+                    'block_type' => 'Type of house/block (short)',
+                    'block_type_full' => 'Type of house/block (long)',
+                    'block' => 'Block',
+                    'flat_type' => 'Type of appartment (short)',
+                    'flat_type_full' => 'Type of appartment (long)',
+                    'flat' => 'Appartment',
+                    'flat_area' => 'Appartment area',
+                    'square_meter_price' => 'Market value m²',
+                    'flat_price' => 'Market value of an appartment',
+                    'postal_box' => 'Postal box',
+                    'fias_id' => 'FIAS code',
+                    'fias_code' => 'Hierarchical address code in FIAS',
+                    'fias_level' => 'Detail level which address is found in FIAS',
+                    'fias_actuality_state' => 'Sign of relevance of the address in FIAS',
+                    'kladr_id' => 'KLADR code',
+                    'capital_marker' => 'Sing of the center of a district of region',
+                    'okato' => 'OKATO code',
+                    'oktmo' => 'OKTMO code',
+                    'tax_office' => 'Individual tax code for natural persons',
+                    'tax_office_legal' => 'Individual tax code for legal personality',
+                    'timezone' => 'Timezone',
+                    'geo_lat' => 'Geocode: latitude',
+                    'geo_lon' => 'Geocode: longitude',
+                    'beltway_hit' => 'Inside Koltsevaya line?',
+                    'beltway_distance' => 'Distance from Koltsevaya line in km',
+                    'qc_geo' => 'Coordinate precision code',
+                    'qc_complete' => 'Code of eligibility for dispatch',
+                    'qc_house' => 'Home in FIAS?',
+                    'qc' => 'Address verification code',
+                    'unparsed_parts' => 'Unrecognized part of the address',
+                    'metro' => 'List of nearest metro stations (<= 3)'
+                ];
+                
+            case SPTips_SearchType_Model::ORGANIZATION:
+                return [
+                    'address.value' => 'Address',
+                    'address.unrestricted_value' => 'Full address',
+                    'address.data.source' => 'EGRUL address',
+                    'branch_count' => 'Branch count',
+                    'branch_type' => 'Branch type',
+                    'inn' => 'INN',
+                    'kpp' => 'KPP',
+                    'ogrn' => 'OGRN',
+                    'ogrn_date' => 'OGRN date',
+                    'management.name' => 'Managment name',
+                    'management.post' => 'Managment post',
+                    'name.full_with_opf' => 'Full name with opf',
+                    'name.short_with_opf' => 'Short name with opf',
+                    'name.full' => 'Full name',
+                    'name.short' => 'Short name',
+                    'okved' => 'OKVED',
+                    'okved_type' => 'OKVED type',
+                    'opf.code' => 'OPF code',
+                    'opf.full' => 'OPF full name',
+                    'opf.short' => 'OPF short name',
+                    'opf.type' => 'OPF type',
+                    'state.actuality_date' => 'Data actual date',
+                    'state.registration_date' => 'Registration date',
+                    'state.liquidation_date' => 'Liquidation date',
+                    'state.status' => 'Status',
+                    'type' => 'Organization type'
+                ];
+                
+            default:
+                return [];
+        }
+        
+        
+    }  
+    
+    private function getSearchAddressURL() {
         return "http://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/address";
     }
     
-    public function getHeaders() {
+    private function getSearchOrganizationURL() {
+        return "http://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/party";
+    }
+    
+    private function getHeaders() {
         return array(
             'Content-Type: application/json',
             'Accept: application/json',
             'Authorization: Token ' . $this->APIKey,
-            'X-Secret: ' . $this->secretKey
+            'X-Partner: ' . $this->partnerValue
         );
     }
     
@@ -58,100 +284,4 @@ class SPTips_DaDataProvider_Model extends SPTips_AbstractProvider_Model {
         }
         return $result;
     }
-    
-    public function searchAddress($searchParam) {
-        $requestData = array('query' => $searchParam);
-        $res = $this->getAllAdresses($requestData);
-        return $res;
-    }
-    
-    public function getAllAdresses($requestData) {
-        $dadataJson = $this->executeRequest($this->getSearchAddressURL(), $requestData);
-        $result = array();
-        foreach ($dadataJson['suggestions'] as $value) {
-            $description = $value['value'];
-            $result[$description] = $value['data'];
-        }
-        return $result;
-    }
-    
-    public function getProviderFields() {
-        return array(
-            'postal_code' => 'Postal code',
-            'country' => 'Country',
-            'region_fias_id' => 'FIAS region code',
-            'region_kladr_id' => 'KLADR region code',
-            'region_with_type' => 'Region with type',
-            'region_type' => 'Region type (short)',
-            'region_type_full' => 'Region type (full)',
-            'region' => 'Region',
-            'area_fias_id' => 'FIAS region code in the region',
-            'area_kladr_id' => 'KLADR region code in the region',
-            'area_with_type' => 'Area in the region with type',
-            'area_type' => 'Area in the region with type (short)',
-            'area_type_full' => 'Area in the region with type (full)',
-            'area' => 'Area in the region',
-            'city_fias_id' => 'FIAS code of the city',
-            'city_kladr_id' => 'KLADR code of the city',
-            'city_with_type' => 'City with type',
-            'city_type' => 'Type of city (short)',
-            'city_type_full' => 'Type of city (full)',
-            'city' => 'City',
-            'city_area' => 'Administrative district (only for Moscow)',
-            'city_district_fias_id' => 'FIAS code of the ciry district (only if the district is in FIAS)',
-            'city_district_kladr_id' => 'KLADR district code of the city (do not fill out)',
-            'city_district_with_type' => 'City district with type',
-            'city_district_type' => 'Type of city district (short)',
-            'city_district_type_full' => 'Type of city district (long)',
-            'city_district' => 'City district',
-            'settlement_fias_id' => 'FIAS code of the settlement',
-            'settlement_kladr_id' => 'KLADR code of the settlement',
-            'settlement_with_type' => 'Settlement with type',
-            'settlement_type' => 'Type of settlement (short)',
-            'settlement_type_full' => 'Type of settlement (full)',
-            'settlement' => 'Settlement',
-            'street_fias_id' => 'FIAS street code',
-            'street_kladr_id' => 'KLADR street code',
-            'street_with_type' => 'Street with type',
-            'street_type' => 'Street type (short)',
-            'street_type_full' => 'Street type (full)',
-            'street' => 'Street',
-            'house_fias_id' => 'FIAS house code',
-            'house_kladr_id' => 'KLADR house code',
-            'house_type' => 'Type of house (short)',
-            'house_type_full' => 'Type of house (long)',
-            'house' => 'House',
-            'block_type' => 'Type of house/block (short)',
-            'block_type_full' => 'Type of house/block (long)',
-            'block' => 'Block',
-            'flat_type' => 'Type of appartment (short)',
-            'flat_type_full' => 'Type of appartment (long)',
-            'flat' => 'Appartment',
-            'flat_area' => 'Appartment area',
-            'square_meter_price' => 'Market value m²',
-            'flat_price' => 'Market value of an appartment',
-            'postal_box' => 'Postal box',
-            'fias_id' => 'FIAS code',
-            'fias_code' => 'Hierarchical address code in FIAS',
-            'fias_level' => 'Detail level which address is found in FIAS',
-            'fias_actuality_state' => 'Sign of relevance of the address in FIAS',
-            'kladr_id' => 'KLADR code',
-            'capital_marker' => 'Sing of the center of a district of region',
-            'okato' => 'OKATO code',
-            'oktmo' => 'OKTMO code',
-            'tax_office' => 'Individual tax code for natural persons',
-            'tax_office_legal' => 'Individual tax code for legal personality',
-            'timezone' => 'Timezone',
-            'geo_lat' => 'Geocode: latitude',
-            'geo_lon' => 'Geocode: longitude',
-            'beltway_hit' => 'Inside Koltsevaya line?',
-            'beltway_distance' => 'Distance from Koltsevaya line in km',
-            'qc_geo' => 'Coordinate precision code',
-            'qc_complete' => 'Code of eligibility for dispatch',
-            'qc_house' => 'Home in FIAS?',
-            'qc' => 'Address verification code',
-            'unparsed_parts' => 'Unrecognized part of the address',
-            'metro' => 'List of nearest metro stations (<= 3)'
-        );
-    }
 }
\ No newline at end of file
diff --git a/modules/SPTips/models/GoogleProvider.php b/modules/SPTips/models/GoogleProvider.php
index 62c830f..976b422 100644
--- a/modules/SPTips/models/GoogleProvider.php
+++ b/modules/SPTips/models/GoogleProvider.php
@@ -13,30 +13,31 @@ class SPTips_GoogleProvider_Model extends SPTips_AbstractProvider_Model {
     
     private $APIKey;
     
-    public function __construct($name, $APIKey) {
-        $this->name = $name;
-        $this->APIKey = $APIKey;
+    public function __construct($settings) {
+        $this->APIKey = $settings['api_key'];
         $this->curLanguage = Vtiger_Language_Handler::getShortLanguageName();
     }
-    
-    public function getHeaders() {
-        return array(
-            'Content-Type: application/json',
-            'Accept: application/json',
-        );
-    }
-    
-    private function prepareRequest($curl) {
-        curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
-        curl_setopt($curl, CURLOPT_HTTPHEADER, $this->getHeaders());
-        curl_setopt($curl, CURLOPT_GET, 1);
+
+    public function getProviderFields($type) {
+        switch($type) {
+            case SPTips_SearchType_Model::ADDRESS:
+                return [
+                    'street_number' => 'Street number',
+                    'route' => 'Street',
+                    'locality' => 'City',
+                    'country' => 'Country',
+                    'postal_code' => 'Postal code'
+                ];
+            
+            default:
+                return [];
+        }
     }
     
-    public function searchAddress($searchParam) {
-        $result = false;
-        $resultsArr = array();
+    public function searchAddress($search, $dependentFields) {
+        $response = [];
 
-        $url = $this->getAPIAutocompleteUrl($searchParam);
+        $url = $this->getAPIAutocompleteUrl($search);
         if ($curl = curl_init($url)) {
             $this->prepareRequest($curl);
             $json = curl_exec($curl);
@@ -45,66 +46,98 @@ class SPTips_GoogleProvider_Model extends SPTips_AbstractProvider_Model {
         }
         
         foreach ($result['predictions'] as $prediction) {
-            $description = $prediction['description'];
             $placeId = $prediction['place_id'];
             $detailInfo = $this->searchDetailAddress($placeId);
-            $detailAddressArray = $this->makeArrayForCurrentAddress($detailInfo);
-            $resultsArr[$description] = $detailAddressArray;
+            
+            $tipData = [
+                'tip' => $prediction['description']
+            ];
+            if(!empty($dependentFields)) {
+                $tipData['fill'] = $this->getFillData($detailInfo, $dependentFields);
+            }
+            
+            $response[] = $tipData;
         }
-        return $resultsArr;
+        return $response;
+    }
+    
+    public function getSupportedSearchTypes() {
+        return [
+            SPTips_SearchType_Model::ADDRESS
+        ];
+    }
+
+    public function searchOrganization($search, $dependentFields) {
+        /* Not supported */
+        return [];
+    }
+    
+    private function getHeaders() {
+        return array(
+            'Content-Type: application/json',
+            'Accept: application/json',
+        );
+    }
+    
+    private function prepareRequest($curl) {
+        curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
+        curl_setopt($curl, CURLOPT_HTTPHEADER, $this->getHeaders());
+        curl_setopt($curl, CURLOPT_GET, 1);
     }
     
-    public function searchDetailAddress($placeId) {
+    private function searchDetailAddress($placeId) {
         $url = $this->getAPIDetailsUrl($placeId);
+        $result = [];
         if ($curl = curl_init($url)) {
             $this->prepareRequest($curl);
             $json = curl_exec($curl);
             $result = json_decode($json, true);
             curl_close($curl);
         }
+        
         return $result;
     }
     
-    public function makeArrayForCurrentAddress($detailInfo) {
-        $searchingKeys = array_keys($this->getProviderFields());
-        $result = array();
+    /**
+     * 
+     * @param type $detailInfo
+     * @param Settings_SPTips_RuleDependentField_Model[] $dependentFields
+     * @return type
+     */
+    private function getFillData($detailInfo, $dependentFields) {
+        $fillMap = [];
+        foreach($dependentFields as $dependentField) {
+            $fillMap[$dependentField->getProviderFieldName()] = $dependentField->getVtigerFieldName();
+        }
+        
+        $result = [];
         foreach ($detailInfo["result"]["address_components"] as $value) {
             $answerLocationTypes = $value['types'];
-            $intersectedKeys = array_intersect($answerLocationTypes, $searchingKeys);
-            $currentKey = $intersectedKeys[0];
-            
-            if (empty($currentKey)) {
-                continue;
+            foreach($answerLocationTypes as $locationType) {
+                if(array_key_exists($locationType, $fillMap)) {
+                    $result[] = [
+                        'vtigerField' => $fillMap[$locationType],
+                        'value' => $value['long_name']
+                    ];
+                }
             }
-            $result[$currentKey] = $value['long_name'];
         }
+        
         return $result;
     }
     
-    /*
-     * this type request returns json with name and place_id.
-     * if we need details info, use getAPIDetailsUrl with that place_id
-     */
-    public function getAPIAutocompleteUrl($searchParam, $types = "address", $format = "json") {
+    private function getAPIAutocompleteUrl($searchParam, $types = "address", $format = "json") {
         $url = "https://maps.googleapis.com/maps/api/place/autocomplete/";
         $url .= $format . "?input=" . urlencode($searchParam) . "&types=" . $types . "&language=" . $this->curLanguage . "&key=" . $this->APIKey;
         return $url;
     }
     
-    public function getAPIDetailsUrl($placeId, $format = "json") {
+    private function getAPIDetailsUrl($placeId, $format = "json") {
         $url = "https://maps.googleapis.com/maps/api/place/details/";
         $url .= $format . "?placeid=" . $placeId . "&language=" . $this->curLanguage . "&key=" . $this->APIKey;
         return $url;
     }
+
     
-    public function getProviderFields() {
-        return array(
-            'street_number' => 'Street number',
-            'route' => 'Street',
-            'locality' => 'City',
-            'country' => 'Country',
-            'postal_code' => 'Postal code'
-        );
-    }
 }
 
diff --git a/modules/SPTips/models/SearchType.php b/modules/SPTips/models/SearchType.php
new file mode 100644
index 0000000..28b063c
--- /dev/null
+++ b/modules/SPTips/models/SearchType.php
@@ -0,0 +1,19 @@
+<?php
+
+/*
+ * To change this license header, choose License Headers in Project Properties.
+ * To change this template file, choose Tools | Templates
+ * and open the template in the editor.
+ */
+
+/**
+ * Description of SearchType
+ *
+ * @author alex
+ */
+class SPTips_SearchType_Model {
+    
+    const ADDRESS = 'address';
+    const ORGANIZATION = 'organization';
+    
+}
diff --git a/modules/SPTips/resources/SPTips.js b/modules/SPTips/resources/SPTips.js
index 0808418..582c076 100644
--- a/modules/SPTips/resources/SPTips.js
+++ b/modules/SPTips/resources/SPTips.js
@@ -8,120 +8,56 @@
  ************************************************************************************/
 
 jQuery.Class("SPTips_Js", {}, {
-    
-    registerEventForEditProvider : function() {
-        var thisInstance = this;
-        jQuery('#editProvider').on('click', function() {
-            var selectedProviderId = thisInstance.getSelectedProvderId();
-            if (selectedProviderId) {
-                location.href = "index.php?module=SPTips&view=EditProvider&parent=Settings&providerId=" + selectedProviderId;
-            }
-        });
-    },
-    
-    registerEventForAddNewRule : function() {
-        var thisInstance = this;
-        jQuery('#addRule').on('click', function() {
-            var selectedProviderId = thisInstance.getSelectedProvderId();
-            if (selectedProviderId) {
-                location.href = "index.php?module=SPTips&view=EditRules&parent=Settings&providerId=" + selectedProviderId;
-            }
-        });
-    },
-    
-    getSelectedProvderId : function() {
-        var selectedProviderOption = jQuery('[name="existingProviders"]').find(':selected');
-        var selectedProviderId = selectedProviderOption.attr('data-provider_id');
-        return selectedProviderId;
-    },
-    
-    registerEventForLoadRulesTable : function() {
-        var thisInstance = this;
-        jQuery('#assignedToRoleTab').on('click', function() {
-            thisInstance.loadRulesTable();
-        });
-    },
-    
-    loadRulesTable : function(selectedProvider) {
+
+    makeFieldBinding : function(bindData) {
         var thisInstance = this;
-        var params = {
-            module: 'Settings:SPTips',
-            view: 'ListRules'
-        };
-        
-        if (typeof(selectedProvider) !== 'undefined') {
-            params['selectedProvider'] = selectedProvider;
-        }
+        var ruleId = bindData.ruleId;
+        var autocompleteFieldName = bindData.autocomplete;
         
-        var aDeferred = jQuery.Deferred();
-        app.request.post({data:params}).then(
-            function(err, response){
-                if (empty(err) && !empty(response)) {
-                    jQuery('.rulesTable').html(response);
-                    // register another events
-                    thisInstance.registerEventForChangingProviderInListRules();
-                    thisInstance.registerEventForDeleteRule();
-                }
-                aDeferred.resolve(response);
-            },
-            function(error){
-                aDeferred.reject();
-            }
-        );
-        return aDeferred.promise();
-    },
-    
-    getCurrentModuleName : function() {
-        return jQuery('[name="module"]').val();
-    },
-    
-    makeFieldBinding : function(fieldName) {
-        var thisInstance = this;
-        var jsonFromServer;
-        var aDeferred = jQuery.Deferred();
-        var fieldElem = jQuery('[name="' + fieldName + '"]');
+        var fieldElem = jQuery('[name="' + autocompleteFieldName + '"]');
         fieldElem.autocomplete({
-            'minLength' : '4',
-            'wordCount' : '1', // need for textarea elements
-            'source' : function(request, response){
-                var searchParam = request.term;
-                thisInstance.fillInFields(searchParam, fieldName).then(function(dataFromServer) {
-                    var reponseDataList = new Array();
-                    for (var item in dataFromServer) {
-                        reponseDataList.push(item);
+            minLength : 3,
+            wordCount : 1, // need for textarea elements
+            source : function(request, response){
+                var search = request.term;
+                thisInstance.search(search, ruleId).then(
+                    function(responseData) {
+                        var source = [];
+                        jQuery.each(responseData, function(index, item) {
+                            source.push({
+                               label : item.tip,
+                               value : item.tip,
+                               fill : item.fill
+                            });
+                        }); 
+                        
+                        response(source);
+                    },
+                    function() {
+                        response();
                     }
-                    jsonFromServer = dataFromServer;
-                    response(reponseDataList);
-                    
-                });
+                );
             },
-            'select' : function(event, ui) {
-                var selectedValue = ui.item.value;
-                var addressObject = jsonFromServer[selectedValue];
-                if (addressObject.length === 0) {
-                    return;
-                }
-                for (var item in addressObject) {
-                    if (addressObject[item] !== undefined) {
-                        jQuery('[name="' + item +'"]').val(addressObject[item]);
+            
+            select : function(event, ui) {
+                var fillData = ui.item.fill;
+                jQuery.each(fillData, function(index, fillMapping) {
+                    var value = fillMapping.value;
+                    if(!empty(value)) {
+                        jQuery('[name="' + fillMapping.vtigerField + '"]').val(value);
                     }
-                }
-                return false;
-            },
+                });
+            }
         });
-        return aDeferred;
     },
     
-    fillInFields : function(searchParam, fieldName) {
+    search : function(value, ruleId) {
         var checkResult = jQuery.Deferred();
-        var sourceModuleName = this.getCurrentModuleName();
-        
         var data = {
-            searchParam: searchParam,
-            module: 'Settings:SPTips',
-            action: 'SearchAddress',
-            currentModule : sourceModuleName,
-            currentField : fieldName
+            search: value,
+            module: 'SPTips',
+            action: 'Search',
+            ruleId : ruleId
         };
         app.request.post({'data': data}).then(
             function (error, responseObj) {
@@ -141,291 +77,30 @@ jQuery.Class("SPTips_Js", {}, {
     checkModuleForTipsRule : function() {
         var thisInstace = this;
         if (app.getViewName() === 'Edit') {
-            var aDeferred = jQuery.Deferred();
-            var moduleName = this.getCurrentModuleName();
-            
             var params = {
-                sourceModule : moduleName,
+                sourceModule : app.getModuleName(),
                 action : 'GetBindingFields',
-                module : 'Settings:SPTips'
+                module : 'SPTips'
             };
             
             app.request.post({data:params}).then(
                 function(err, response){
-                    if (empty(err) && !empty(response)) {
-                        thisInstace.makeFieldBinding(response);
-                    }
-                    aDeferred.resolve(response);
-                },
-                function(error){
-                    aDeferred.reject();
-                }
-            );
-        }
-    },
-    
-    registerEventForSelectProvider : function() {
-        jQuery("#selectProvider").on('click', function(e) {
-            var selectedProviderElem = jQuery("#existingProviders").find(":selected");
-            var data = {
-                module: 'SPTips',
-                action: 'SelectProvider',
-                parent: 'Settings',
-                record: selectedProviderElem.attr("data-provider_id")
-            };
-            
-            app.request.post({'data': data}).then(
-                function (error, responseObj) {
-                    if (empty(error) && !empty(responseObj)) {
-                        if (responseObj['success']) {
-                            app.helper.showSuccessNotification({
-                                message: app.vtranslate('JS_SUCCESSFULL')
-                            });
-                            location.reload();
-                        }
-                    }
-                    else {
-                        app.helper.showErrorNotification({
-                            message: app.vtranslate('JS_UNSUCCESSFULL')
+                    if (err === null) {
+                        jQuery.each(response, function(index, data) {
+                            thisInstace.makeFieldBinding(data);
                         });
                     }
                 },
-                function error(error) {
-                    console.log(error);
-                }
-            );
-            
-        });
-    },
-    
-    registerEventForChangingModule : function() {
-        var thisInstance = this;
-        var form = jQuery("#rulesForm");
-        form.find('[name="sourceModule"]').on('change', function() {
-            var selectedModule = form.find('[name="sourceModule"]').val();
-            var currentModule = thisInstance.getCurrentModuleName();
-            thisInstance.loadFieldsForNewModule(selectedModule, currentModule).then(
-                function(data) {
-                    thisInstance.registerEventForChangingModule();
-                    thisInstance.registerEventForAddingNewField();
-                }
-            );
-        });
-    },
-    
-    loadFieldsForNewModule : function(selectedModule, currentModule) {
-        var aDeferred = jQuery.Deferred();
-        var recordId = jQuery('[name="record"]').val();
-        var providerId = jQuery('[name="providerId"]').val();
-        app.helper.showProgress();
-        var data = {
-            module: currentModule,
-            parent: app.getParentModuleName(),
-            view: 'EditRules',
-            operation: 'loadFieldsForNewModule',
-            editRuleId: recordId,
-            sourceModule: selectedModule,
-            providerId: providerId
-        };
-        
-        app.request.pjax({data: data}).then(
-            function(error, data) {
-                app.helper.hideProgress();
-                var container = jQuery('.settingsPageDiv div');
-                container.html(data);
-                //register all select2 Elements
-                vtUtils.showSelect2ElementView(container.find('select.select2'));
-                aDeferred.resolve(data);
-            },
-            function(error) {
-                app.helper.hideProgress();
-                aDeferred.reject(error);
-            }
-        );
-        return aDeferred.promise();
-        
-    },
-    
-    registerEventForDeletingProvider : function() {
-        var thisInstance = this;
-        jQuery('#deleteProviderBtn').on('click', function() {
-            var recordId = jQuery('[name="record"]').val();
-            if (recordId !== undefined) {
-                var data = {
-                    module: thisInstance.getCurrentModuleName(),
-                    parent: 'Settings',
-                    action: 'DeleteProvider',
-                    record: recordId
-                };
                 
-                app.request.post({'data': data}).then(
-                    function (error, responseObj) {
-                        if (empty(error) && !empty(responseObj)) {
-                            if (responseObj['success']) {
-                                var refererUrl = window.location.protocol + window.location.pathname;
-                                refererUrl += "?module=SPTips&view=Index&parent=Settings";
-                                location.href = refererUrl;
-                            }
-                        }
-                        else {
-                            app.helper.showErrorNotification({
-                                message: app.vtranslate('JS_UNSUCCESSFULL')
-                            });
-                        }
-                    },
-                    function error(error) {
-                    }
-                );
-            }
-            else {
-                app.helper.showErrorNotification({
-                    message: app.vtranslate('JS_UNSUCCESSFULL')
-                });  
-            }
-        });
-    },
-    
-    registerEventForAddingNewField : function() {
-        var thisInstance = this;
-        var lineItemCopy = jQuery('.lineItemCopy');
-        // before copy we need to disable select2 on the select element
-        lineItemCopy.find('select').each(function(index, elem) {
-            jQuery(elem).select2('destroy');
-            jQuery(elem).attr('disabled','disabled');
-        });
-        
-        jQuery("#addDependendField").on('click', function(e) {
-            // restore select2 after copy
-            var newElement = lineItemCopy.clone().appendTo('.editViewContents');
-            newElement.find('select').each(function(index, elem) {
-                jQuery(elem).select2();
-                jQuery(elem).removeAttr('disabled');
-            });
-            
-            newElement.removeClass('lineItemCopy');
-            newElement.removeClass('hide');
-            
-            thisInstance.registerEventForDeleteFieldsItemLine();
-        });
-    },
-    
-    registerEventForDeleteFieldsItemLine : function() {
-        jQuery('.deleteFieldsItemLine').on('click', function(e) {
-            var lineWithItems = jQuery(e.currentTarget).closest('div.form-group');
-            lineWithItems.remove();
-        });
-    },
-    
-    registerEventForDeleteRule : function() {
-        jQuery('.deleteRule').on('click', function(e) {
-            var ruleId = jQuery(e.currentTarget).attr('data-rule-id');
-            if (ruleId !== undefined) {
-                var data = {
-                    module: 'SPTips',
-                    parent: 'Settings',
-                    action: 'DeleteRule',
-                    record: ruleId
-                };
-            }
-            
-            app.request.post({'data': data}).then(
-                function(error, responseObj) {
-                    if (empty(error) && !empty(responseObj)) {
-                        if (responseObj['success']) {
-                            var refererUrl = window.location.protocol + window.location.pathname;
-                            refererUrl += "?module=SPTips&view=Index&parent=Settings";
-                            location.href = refererUrl;
-                        }
-                    }
-                    else {
-                        app.helper.showErrorNotification({
-                            message: app.vtranslate('JS_UNSUCCESSFULL')
-                        });
-                    }
-                }, 
-                function error(error) {
-                    
-                });
-        });
-    },
-    
-    loadFieldsForNewProvider : function(selectedProvider) {
-        var aDeferred = jQuery.Deferred();
-        app.helper.showProgress();
-        var sourceModule = jQuery('[name="sourceModule"]').val();
-        var data = {
-            module: this.getCurrentModuleName(),
-            parent: app.getParentModuleName(),
-            view: 'EditRules',
-            selectedProvider: selectedProvider,
-            sourceModule: sourceModule
-        };
-        
-        app.request.pjax({data: data}).then(
-            function(error, data) {
-                app.helper.hideProgress();
-                var container = jQuery('.settingsPageDiv div');
-                container.html(data);
-                //register all select2 Elements
-                vtUtils.showSelect2ElementView(container.find('select.select2'));
-                aDeferred.resolve(data);
-            },
-            function(error) {
-                app.helper.hideProgress();
-                aDeferred.reject(error);
-            }
-        );
-        return aDeferred.promise();
-    },
-    
-    registerEventForChangingProviderInListRules : function() {
-        var thisInstance = this;
-        jQuery('[name="existingProviders"]').on('change', function() {
-           var selectedProvider = jQuery('[name="existingProviders"] option:selected').text();
-           thisInstance.loadRulesTable(selectedProvider).then(
-                function() {
-                    //thisInstance.registerEventForChangingProviderInListRules();
-                    //thisInstance.registerEventForDeleteRule();
+                function(error){
+
                 }
             );
-        });
-    },
-    
-    loadRulesForNewProvider : function(selectedProvider) {
-        var aDeferred = jQuery.Deferred();
-        app.helper.showProgress();
-        var data = {
-            module: 'SPTips',
-            parent: app.getParentModuleName(),
-            view: 'ListRules',
-            selectedProvider: selectedProvider
-        };
-        
-        app.request.pjax({data: data}).then(
-            function(error, data) {
-                app.helper.hideProgress();
-                var container = jQuery('.settingsPageDiv div');
-                container.html(data);
-                aDeferred.resolve(data);
-            },
-            function(error) {
-                app.helper.hideProgress();
-                aDeferred.reject(error);
-            }
-        );
-        return aDeferred.promise();
+        }
     },
     
     registerEvents: function () {
-        this.registerEventForSelectProvider();
-        this.registerEventForChangingModule();
         this.checkModuleForTipsRule();
-        this.registerEventForDeletingProvider();
-        this.registerEventForAddingNewField();
-        this.registerEventForLoadRulesTable();
-        this.registerEventForEditProvider();
-        this.registerEventForAddNewRule();
-        this.registerEventForDeleteFieldsItemLine();
     }
 });
 
diff --git a/modules/SPVoipIntegration/actions/IntegrationActions.php b/modules/SPVoipIntegration/actions/IntegrationActions.php
index 5811e3c..fd298e3 100644
--- a/modules/SPVoipIntegration/actions/IntegrationActions.php
+++ b/modules/SPVoipIntegration/actions/IntegrationActions.php
@@ -8,12 +8,21 @@ class SPVoipIntegration_IntegrationActions_Action extends Vtiger_Action_Controll
 		parent::__construct();
 		$this->exposeMethod('startOutgoingCall');
         $this->exposeMethod('getOutgoingPermissions');
+        $this->exposeMethod("checkClickToCall");
 	}
     
     function checkPermission(Vtiger_Request $request) {
 		return;
 	}
     
+    public function checkClickToCall(Vtiger_Request $request) {
+        $response = new Vtiger_Response();
+        $response->setResult(array(
+            'enabled' => Settings_SPVoipIntegration_Record_Model::isClickToCallEnabled()
+        ));
+        $response->emit();
+    }
+    
     public function startOutgoingCall(Vtiger_Request $request) {
         $response = new Vtiger_Response();
         try {
@@ -30,18 +39,10 @@ class SPVoipIntegration_IntegrationActions_Action extends Vtiger_Action_Controll
     
     public function getOutgoingPermissions(Vtiger_Request $request) {
         $response = new Vtiger_Response();
-        $responsePermission = false;
-        $permission = PBXManager_Server_Model::checkPermissionForOutgoingCall();
-        if ($permission) {
-            $responsePermission = 'full_permission';
-        } else {
-            Users_Privileges_Model::getCurrentUserPrivilegesModel();
-            $permission = Users_Privileges_Model::isPermitted('PBXManager', 'MakeOutgoingCalls');
-            if ($permission) {
-                $responsePermission = 'outgoing';
-            }
-        }
-        $response->setResult(array('success' => true, 'permission' => $responsePermission));
+        Users_Privileges_Model::getCurrentUserPrivilegesModel();
+        $permission = Users_Privileges_Model::isPermitted('PBXManager', 'MakeOutgoingCalls');
+
+        $response->setResult(array('success' => true, 'permission' => $permission));
         $response->emit();
     }
 
diff --git a/modules/SPVoipIntegration/controllers/CallsController.php b/modules/SPVoipIntegration/controllers/CallsController.php
index 4bb5329..ddb67f9 100644
--- a/modules/SPVoipIntegration/controllers/CallsController.php
+++ b/modules/SPVoipIntegration/controllers/CallsController.php
@@ -45,16 +45,11 @@ class CallsController {
         if ($request->get('provider') == ProvidersEnum::ZADARMA) {
             return ProvidersEnum::ZADARMA;
         }
-
+        
         if (strpos($_SERVER['REQUEST_URI'], "sipuni") !== FALSE) {
             return ProvidersEnum::SIPUNI;
         }
 
-        if (strpos($_SERVER['REQUEST_URI'], "mango") !== FALSE) {
-            return ProvidersEnum::MANGO;
-        }
-
-
         // check for rostelecom
         $clientIdHeader = $_SERVER['HTTP_X_CLIENT_ID'];
         $clientSignHeader = $_SERVER['HTTP_X_CLIENT_SIGN'];
@@ -69,7 +64,12 @@ class CallsController {
         if (!empty($token) && $token === \Settings_SPVoipIntegration_Record_Model::getGravitelCrmToken()) {
             return ProvidersEnum::GRAVITEL;
         }
-
+        
+        $mangoKey = $request->get('vpbx_api_key');
+        if(!empty($mangoKey) && $mangoKey === \Settings_SPVoipIntegration_Record_Model::getMangoKey()) {
+            return ProvidersEnum::MANGO;
+        }
+        
         if (!empty($token) && $token === \Settings_SPVoipIntegration_Record_Model::getMegafonCrmToken()) {
             return ProvidersEnum::MEGAFON;
         }
diff --git a/modules/SPVoipIntegration/mango/notifications/MangoNotification.php b/modules/SPVoipIntegration/mango/notifications/MangoNotification.php
index c6baeba..a02755d 100755
--- a/modules/SPVoipIntegration/mango/notifications/MangoNotification.php
+++ b/modules/SPVoipIntegration/mango/notifications/MangoNotification.php
@@ -84,5 +84,16 @@ abstract class MangoNotification extends AbstractNotification {
             $this->set('sp_user', $userModel->getId());
         }
     }
+    
+    public static function getUserByNumber($number) {
+        $db = \PearDatabase::getInstance();
+
+        $result = $db->pquery("SELECT id FROM vtiger_users WHERE sp_mango_extension=?", array($number));
+        $userModel = null;
+        if ($result && $resRow = $db->fetchByAssoc($result)) {
+            $userModel = \Users_Record_Model::getInstanceById($resRow['id'], 'Users');
+        }
+        return $userModel;
+    }
 
 }
diff --git a/modules/SPVoipIntegration/resources/SPVoipIntegration.js b/modules/SPVoipIntegration/resources/SPVoipIntegration.js
index 67570f1..36fc40f 100644
--- a/modules/SPVoipIntegration/resources/SPVoipIntegration.js
+++ b/modules/SPVoipIntegration/resources/SPVoipIntegration.js
@@ -16,25 +16,11 @@ jQuery.Class("SPVoipIntegration_Js", {}, {
         params['module'] = 'SPVoipIntegration';        
         params['action'] = 'IntegrationActions';
         app.request.post({data: params}).then(function (e, result) {
-            var permission = result.permission;            
-            if (permission == 'full_permission') {
+            if(result.permission) {
                 Vtiger_PBXManager_Js.makeOutboundCall = function(number, record){
                     thisInstance.click2Call(number);
                 };
-            } else if (permission == 'outgoing') {
-                var form = jQuery('#detailView');       
-                form.on('click','.value',function(e){                    
-                    var currentTarget = jQuery(e.currentTarget);	
-                    if (currentTarget.data('fieldType') == 'phone') {
-                        params = {
-                            text : app.vtranslate('JS_PBX_OUTGOING_CALL'),
-                            type : 'info'
-                        }
-                        Vtiger_PBXManager_Js.showPnotify(params);
-                        thisInstance.click2Call(jQuery.trim(currentTarget.text()));
-                    }           
-                });
-            }
+            }            
         });        
     },
     
@@ -60,8 +46,21 @@ jQuery.Class("SPVoipIntegration_Js", {}, {
         });
     },
     
+    checkRegisterClick2Call : function() {
+        var thisInstance = this;
+        app.request.post({data: {
+            module : 'SPVoipIntegration',
+            action : 'IntegrationActions',
+            mode : 'checkClickToCall'
+        }}).then(function (error, response) {
+            if(response.enabled) {
+                thisInstance.registerClick2Call();  
+            }
+        });
+    },
+    
     registerEvents : function () {              
-        this.registerClick2Call();    
+        this.checkRegisterClick2Call();    
     }
 });
 
diff --git a/modules/Settings/SPDynamicBlocks/actions/Index.php b/modules/Settings/SPDynamicBlocks/actions/Index.php
index 335cfde..f945534 100644
--- a/modules/Settings/SPDynamicBlocks/actions/Index.php
+++ b/modules/Settings/SPDynamicBlocks/actions/Index.php
@@ -10,6 +10,14 @@
 
 class Settings_SPDynamicBlocks_Index_Action extends Settings_Vtiger_Basic_Action {
     
+    public function checkPermission(Vtiger_Request $request) {
+        $currentUser = Users_Record_Model::getCurrentUserModel();
+        $privileges = $currentUser->getPrivileges();
+        if(!$privileges->hasModulePermission(getTabid('SPDynamicBlocks'))) {
+            throw new AppException(vtranslate('LBL_PERMISSION_DENIED', 'Vtiger'));
+        }
+    }
+    
     function __construct() {
         parent::__construct();
         $this->exposeMethod('getPicklists');
diff --git a/modules/Settings/SPTips/actions/DeleteProvider.php b/modules/Settings/SPTips/actions/DeleteProvider.php
deleted file mode 100644
index e1934ac..0000000
--- a/modules/Settings/SPTips/actions/DeleteProvider.php
+++ /dev/null
@@ -1,41 +0,0 @@
-<?php
-
-/*+**********************************************************************************
- * The contents of this file are subject to the vtiger CRM Public License Version 1.1
- * ("License"); You may not use this file except in compliance with the License
- * The Original Code is: SalesPlatform Ltd
- * The Initial Developer of the Original Code is SalesPlatform Ltd.
- * All Rights Reserved.
- * If you have any questions or comments, please email: devel@salesplatform.ru
- ************************************************************************************/
-
-class Settings_SPTips_DeleteProvider_Action extends Settings_Vtiger_Index_Action {
-    
-    const providersTable = 'sp_tips_providers';
-    
-    public function process (Vtiger_Request $request) {
-        $response = new Vtiger_Response();
-        $record = $request->get('record');
-        if ($record) {
-            $result = $this->deleteProvider($record);
-            if ($result) {
-               $response->setResult(array('success' => true)); 
-            }
-            else {
-                $response->setError('JS_UNSUCCESFULL');
-            }
-        } else {
-            $response->setError('JS_NO_RECORD_IN_REQUEST');
-        }
-        $response->emit();
-    }
-    
-    public function deleteProvider($record) {
-        $db = PearDatabase::getInstance();
-        $tableName = Settings_SPTips_DeleteProvider_Action::providersTable;
-        $sql = 'DELETE FROM ' . $tableName . ' WHERE provider_id = ?';
-        $result = $db->pquery($sql, array($record));
-        return $result;
-    }
-   
-}
\ No newline at end of file
diff --git a/modules/Settings/SPTips/actions/DeleteRule.php b/modules/Settings/SPTips/actions/DeleteRule.php
index 54a981c..04e525e 100644
--- a/modules/Settings/SPTips/actions/DeleteRule.php
+++ b/modules/Settings/SPTips/actions/DeleteRule.php
@@ -11,47 +11,13 @@
 
 class Settings_SPTips_DeleteRule_Action extends Settings_Vtiger_Index_Action {
     
-    const rulesTable = 'sp_tips_module_rules';
-    const dependentFieldsTable = 'sp_tips_dependent_fields';
-    
     public function process (Vtiger_Request $request) {
-        $response = new Vtiger_Response();
-        $record = $request->get('record');
-        if ($record) {
-            $result = $this->deleteRule($record);
-            if ($result) {
-                $response->setResult(array('success' => true));
-            }
-            else {
-                $response->setError('JS_UNSUCCESSFULL');
-            }
-        } else {
-            $response->setError('JS_NO_RECORD_IN_REQUEST');
+        $ruleModel = Settings_SPTips_Rule_Model::getInstanceById($request->get('record'));
+        if($ruleModel != null) {
+            $ruleModel->delete();
         }
+        $response = new Vtiger_Response();
+        $response->setResult(['success' => true]);
         $response->emit();
     }
-    
-    public function deleteRule($record) {
-        if (!$this->ruleExists($record)) {
-            return false;
-        }
-        
-        $db = PearDatabase::getInstance();
-        $tableName = Settings_SPTips_DeleteRule_Action::rulesTable;
-        $sql = 'DELETE FROM ' . $tableName . ' WHERE rule_id = ?';
-        $result = $db->pquery($sql, array($record));
-        return $result;
-    }
-    
-    public function ruleExists($ruleId) {
-        $db = PearDatabase::getInstance();
-        $tableName = Settings_SPTips_DeleteRule_Action::rulesTable;
-        $sql = 'SELECT * FROM ' . $tableName . ' WHERE rule_id = ?';
-        $result = $db->pquery($sql, array($ruleId));
-        if ($result) {
-            return $db->num_rows($result);
-        }
-        return false;
-    }
-   
 }
\ No newline at end of file
diff --git a/modules/Settings/SPTips/actions/GetBindingFields.php b/modules/Settings/SPTips/actions/GetBindingFields.php
deleted file mode 100644
index 36ed120..0000000
--- a/modules/Settings/SPTips/actions/GetBindingFields.php
+++ /dev/null
@@ -1,37 +0,0 @@
-<?php
-
-/*+**********************************************************************************
- * The contents of this file are subject to the vtiger CRM Public License Version 1.1
- * ("License"); You may not use this file except in compliance with the License
- * The Original Code is: SalesPlatform Ltd
- * The Initial Developer of the Original Code is SalesPlatform Ltd.
- * All Rights Reserved.
- * If you have any questions or comments, please email: devel@salesplatform.ru
- ************************************************************************************/
-
-class Settings_SPTips_GetBindingFields_Action extends Settings_Vtiger_Index_Action {
-    public function process (Vtiger_Request $request) {
-        $response = new Vtiger_Response();
-        
-        $moduleName = $request->get('sourceModule');
-        if (isset($moduleName)) {
-            $currentProvider = SPTips_CurrentProvider_Model::getProviderInstance();
-            if (!$currentProvider) {
-                $response->setError('Can\'t load provider');
-                $response->emit();
-                return;
-            }
-        }
-        $providerId = Settings_SPTips_Provider_Model::getProviderIdByName($currentProvider->getName());
-        $fieldForBinding = Settings_SPTips_Rule_Model::getBindingFieldForModule($moduleName, $providerId);
-        
-        if (empty($fieldForBinding)) {
-            $response->setError('JS_FIELD_NOT_FOUND');
-        }
-        else {
-            $response->setResult($fieldForBinding);
-        }
-        $response->emit();
-    }
-    
-}
\ No newline at end of file
diff --git a/modules/Settings/SPTips/actions/SaveProvider.php b/modules/Settings/SPTips/actions/SaveProvider.php
index 585ff3a..d3a148d 100644
--- a/modules/Settings/SPTips/actions/SaveProvider.php
+++ b/modules/Settings/SPTips/actions/SaveProvider.php
@@ -14,26 +14,19 @@ class Settings_SPTips_SaveProvider_Action extends Settings_Vtiger_Index_Action {
     const providersTable = 'sp_tips_providers';
     
     public function process (Vtiger_Request $request) {
-        $recordId = $request->get('record');
-        
-        if ($recordId) {
-            $this->editProvider($request, $recordId);
+        $recordId = $request->get('record'); 
+        $provider = Settings_SPTips_Provider_Model::getInstanceById($recordId);
+        if($provider != null) {
+            foreach($provider->getSettingsFields() as $fieldName) {
+                if($request->has($fieldName)) {
+                    $provider->setSetting($fieldName, $request->get($fieldName));
+                }
+            }
+            
+            $provider->save();
         }
         
         header("Location: index.php?module=SPTips&view=Index&parent=Settings");
     }
-    
-    public function editProvider(Vtiger_Request $request, $recordId) {
-        $db = PearDatabase::getInstance();
-        $tableName = Settings_SPTips_SaveProvider_Action::providersTable;
-        $sql = 'UPDATE ' . $tableName . ' SET api_key = ?, token = ? ';
-        $sql .= 'WHERE provider_id = ?';
-        
-        $params = array(
-            $request->get('api_key'),
-            $request->get('token'),
-            $recordId
-        );
-        $db->pquery($sql, $params);
-    }
+
 }
\ No newline at end of file
diff --git a/modules/Settings/SPTips/actions/SaveRule.php b/modules/Settings/SPTips/actions/SaveRule.php
index 73a01e1..0a1c5d6 100644
--- a/modules/Settings/SPTips/actions/SaveRule.php
+++ b/modules/Settings/SPTips/actions/SaveRule.php
@@ -15,81 +15,38 @@ class Settings_SPTips_SaveRule_Action extends Settings_Vtiger_Index_Action {
     const dependentFieldsTable = 'sp_tips_dependent_fields';
     
     public function process (Vtiger_Request $request) {
-        
         $record = $request->get('record');
-        if ($record) {
-            $this->editRule($request, $record);
-        } else {
-            $this->addRule($request);
+        $ruleModel = Settings_SPTips_Rule_Model::getInstanceById($record);
+        if($ruleModel == null) {
+            $ruleModel = Settings_SPTips_Rule_Model::getCleanInstance();
         }
-        
-        header("Location: index.php?module=SPTips&view=Index&parent=Settings");
-    }
-    
-    public function addRule(Vtiger_Request $request) {
-        $db = PearDatabase::getInstance();
-        
-        $sourceModule = $request->get('sourceModule');
-        $sourceField = $request->get('sourceField');
-        $sourceProviderField = $request->get('sourceProviderField');
-        
-        // create rule without selected provider
-        if (empty($sourceProviderField) || empty($sourceField)) {
-            return;
+        $providerModel = Settings_SPTips_Provider_Model::getInstanceById($request->get('providerId'));
+        if($providerModel == null) {
+            throw new AppException(vtranslate('LBL_PERMISSION_DENIED'));
         }
         
+        $ruleModel->set('module', $request->get('sourceModule'));
+        $ruleModel->set('field', $request->get('sourceField'));
+        $ruleModel->set('provider_id', $providerModel->getId());
+        $ruleModel->set('type', $request->get('type'));
+        
+        /* Prepare auto-fill fields */
         $dependentFields = $request->get('dependentFields');
         $providerFields = $request->get('providerFields');
-        
-        $providerId = $request->get('providerId');
-        if (empty($providerId)) {
-            return;
-        }
-        
-        $sql = 'INSERT INTO ' . Settings_SPTips_SaveRule_Action::rulesTable . ' (module, field, provider_field, provider_id) VALUES (?,?,?,?)';
-        $result = $db->pquery($sql, array($sourceModule, $sourceField, $sourceProviderField, $providerId));
-        
-        if ($result && $dependentFields && $providerFields) {
-            $newRuleId = Settings_SPTips_SaveRule_Action::getLatestRuleId();
-            foreach ($dependentFields as $key => $field) {
-                $sql = 'INSERT INTO ' . Settings_SPTips_SaveRule_Action::dependentFieldsTable . ' (vtiger_fieldname, provider_fieldname, rule_id) VALUES (?,?,?)';
-                $result = $db->pquery($sql, array($field, $providerFields[$key], $newRuleId));
+        $saveMapping = [];
+        if(!empty($dependentFields)) {
+            foreach($dependentFields as $position => $vtigerFieldName) {
+                $providerFieldName = $providerFields[$position];
+                $ruleDependentFieldModel = new Settings_SPTips_RuleDependentField_Model();
+                $ruleDependentFieldModel->set('vtiger_fieldname', $vtigerFieldName);
+                $ruleDependentFieldModel->set('provider_fieldname', $providerFieldName);
+                $saveMapping[] = $ruleDependentFieldModel;
             }
         }
-    }
-    
-    public function editRule(Vtiger_Request $request, $record) {
-        $db = PearDatabase::getInstance();
-        
-        $sourceModule = $request->get('sourceModule');
-        $sourceField = $request->get('sourceField');
-        $sourceProviderField = $request->get('sourceProviderField');
-        $dependentFields = $request->get('dependentFields');
-        $providerFields = $request->get('providerFields');
-        $providerId = $request->get('providerId');
-        
-        $sql = 'UPDATE ' . Settings_SPTips_SaveRule_Action::rulesTable . ' SET module=?, field=?, provider_field=?, provider_id=? WHERE rule_id=?';
-        $result = $db->pquery($sql, array($sourceModule, $sourceField, $sourceProviderField, $providerId, $record));
         
+        $ruleModel->setDependentFieldsForSave($saveMapping);
+        $ruleModel->save();
         
-        if ($result) {
-            // delete old rows for this rule_id
-            $sql = 'DELETE FROM ' . Settings_SPTips_SaveRule_Action::dependentFieldsTable;
-            $sql .= ' WHERE rule_id = ?';
-            $deleteOldResult = $db->pquery($sql, array($record));
-            
-            // create new rows for this rule_id
-            foreach ($dependentFields as $key => $field) {
-                $sql = 'INSERT INTO ' . Settings_SPTips_SaveRule_Action::dependentFieldsTable . ' (vtiger_fieldname,provider_fieldname,rule_id) VALUES (?,?,?)';
-                $result = $db->pquery($sql, array($field, $providerFields[$key], $record));
-            }
-        }
-    }
-    
-    public function getLatestRuleId() {
-        $db = PearDatabase::getInstance();
-        $tableName = Settings_SPTips_SaveRule_Action::rulesTable;
-        $result = $db->query('SELECT MAX(rule_id) FROM ' . $tableName);
-        return $db->query_result($result, 'max(id)');
+        header("Location: index.php?module=SPTips&view=Index&parent=Settings");
     }
 }
\ No newline at end of file
diff --git a/modules/Settings/SPTips/actions/SelectProvider.php b/modules/Settings/SPTips/actions/SelectProvider.php
index 3b67b1b..d4b3526 100644
--- a/modules/Settings/SPTips/actions/SelectProvider.php
+++ b/modules/Settings/SPTips/actions/SelectProvider.php
@@ -11,52 +11,22 @@
 
 class Settings_SPTips_SelectProvider_Action extends Settings_Vtiger_Index_Action {
     
-    const currentProviderTable = 'sp_tips_cur_provider';
-    
     public function process (Vtiger_Request $request) {
         $response = new Vtiger_Response();
-        
         $record = $request->get('record');
-        $successOperation = false;
         if ($record) {
-            $successOperation = $this->selectProvider(intval($record));
-            if ($successOperation) {
-                $response->setResult(array('success' => true));
-            }
-            else {
+            $providerModel = Settings_SPTips_Provider_Model::getInstanceById($record);
+            if($providerModel !== null) {
+                $providerModel->set('is_default', 1);
+                $providerModel->save();
+                $response->setResult(['success' => true]);
+            } else {
                 $response->setError('JS_UNSUCCESSFULL'); 
             }
-        }
-        else {
+        } else {
             $response->setError('JS_NO_RECORD_IN_REQUEST');
         }
+        
         $response->emit();
     }
-    
-    public function selectProvider($providerId) {
-        $db = PearDatabase::getInstance();
-        $tableName = Settings_SPTips_SelectProvider_Action::currentProviderTable;
-        $selectedProviderId = Settings_SPTips_SelectProvider_Action::getSelectedProviderId();
-        if (empty($selectedProviderId)) {
-            $sql = 'INSERT INTO ' . $tableName . ' (cur_provider) VALUES (?)';
-            $result = $db->pquery($sql, array($providerId));
-        }
-        else {
-            $sql = 'UPDATE ' . $tableName . ' set cur_provider=? WHERE cur_provider=?';
-            $result = $db->pquery($sql, array($providerId, $selectedProviderId));
-        }
-        return $result; 
-    }
-    
-    public function getSelectedProviderId() {
-        $db = PearDatabase::getInstance();
-        $tableName = Settings_SPTips_SelectProvider_Action::currentProviderTable;
-        $sql = 'SELECT * FROM ' . $tableName;
-        $result = $db->pquery($sql, array());
-        $selectedProviderId = null;
-        if ($result) {
-            $selectedProviderId = $db->query_result($result, 0, 'cur_provider');
-        }
-        return $selectedProviderId;
-    }
 }
\ No newline at end of file
diff --git a/modules/Settings/SPTips/models/Provider.php b/modules/Settings/SPTips/models/Provider.php
index ad7d6b3..cce7672 100644
--- a/modules/Settings/SPTips/models/Provider.php
+++ b/modules/Settings/SPTips/models/Provider.php
@@ -11,122 +11,121 @@
 
 class Settings_SPTips_Provider_Model extends Settings_Vtiger_Record_Model {
     
-    const currentProviderTable = 'sp_tips_cur_provider';
-    const providersTable = 'sp_tips_providers';
+    const PROVIDERS_TABLE_NAME = 'sp_tips_providers';
+    
+    private $settingsMap = [];
     
     public function getId() {
-        $db = PearDatabase::getInstance();
-        $tableName = Settings_SPTips_Provider_Model::currentProviderTable;
-        $sql = 'SELECT * FROM ' . $tableName;
-        $result = $db->pquery($sql, array());
-        if ($result) {
-            return $db->query_result($result, 0, 'cur_provider');
-        }
-        return null;
+        return $this->get('provider_id');
     }
-    
+
     public function getName() {
-        $db = PearDatabase::getInstance();
-        $tableName = Settings_SPTips_Provider_Model::providersTable;
-        $id =  $this->get('id');
-        if ($id) {
-            $sql = 'SELECT * FROM ' . $tableName .' WHERE provider_id =?';
-            $result = $db->pquery($sql, array($id));
-            return $db->query_result($result, 0, 'provider_name');
-        }
-        return null;
+        return $this->get('provider_name');
     }
     
-    public function getProviderIdByName($name) {
-        $db = PearDatabase::getInstance();
-        $tableName = Settings_SPTips_Provider_Model::providersTable;
-        $sql = 'SELECT provider_id FROM ' . $tableName . ' WHERE provider_name=?';
-        $result = $db->pquery($sql, array($name));
-        if ($result) {
-            return $db->query_result($result, 0, 'provider_id');
-        }
-        else {
-            return null;
+    public function getSettingsMap() {
+        return $this->settingsMap;
+    }
+    
+    public function getSettingsFields() {
+        return array_keys($this->settingsMap);
+    }
+    
+    public function setSetting($name, $value) {
+        $this->settingsMap[$name] = $value;
+    }
+    
+    public function save() {
+        $id = $this->getId();
+        if($id == null) {
+            throw new AppException(vtranslate('LBL_USUPPORTED_CREATE'));
         }
+        
+        $this->serializeSettings();
+        $db = PearDatabase::getInstance();
+        $db->pquery(
+            "UPDATE " . Settings_SPTips_Provider_Model::PROVIDERS_TABLE_NAME . " SET settings=? WHERE provider_id=?", 
+            [$this->get('settings'), $id]
+        );
     }
-
-    /*
-     * returns instance of current provider in system
+    
+    /**
+     * 
+     * @return \SPTips_DaDataProvider_Model|\SPTips_Google_Model
+     * @throws AppException
      */
-    public static function getInstance() {
-        $db = PearDatabase::getInstance();
-        $tableName = Settings_SPTips_Provider_Model::providersTable;
-        
-        $sql = 'SELECT * FROM ' . $tableName . ' WHERE provider_id = ?';
-        $curProviderId = Settings_SPTips_Provider_Model::getId();
-        $curProviderResult = $db->pquery($sql, array($curProviderId));
-        
-        $instance = new Settings_SPTips_Provider_Model();
-        
-        if($db->num_rows($curProviderResult) > 0) {
-            $row = $db->query_result_rowdata($curProviderResult,0);
-            $instance->setData($row);
+    public function getConcreteRealization() {
+        switch($this->getName()) {
+            case 'DaData':
+                return new SPTips_DaDataProvider_Model($this->settingsMap);
+                
+            case 'Google':
+                return new SPTips_GoogleProvider_Model($this->settingsMap);
+            
+            default:
+                throw new AppException('Unsupported provider');
         }
-        return $instance;
     }
     
-    /*
-     * returns providers instance by id
+    /**
+     * 
+     * @param integer $providerId
+     * @return \Settings_SPTips_Provider_Model
+     * @throws AppException
      */
-    public function getInstanceById($providerId) {
+    public static function getInstanceById($providerId) {
         $db = PearDatabase::getInstance();
-        $tableName = Settings_SPTips_Provider_Model::providersTable;
-        
-        $sql = 'SELECT * FROM ' . $tableName . ' WHERE provider_id = ?';
-        $curProviderResult = $db->pquery($sql, array($providerId));
+        $sql = 'SELECT * FROM ' . Settings_SPTips_Provider_Model::PROVIDERS_TABLE_NAME . ' WHERE provider_id = ?';
+        $result = $db->pquery($sql, array($providerId));
         
-        $instance = new Settings_SPTips_Provider_Model();
+        if(!$result) {
+            throw new AppException(vtranslate('LBL_DATABASE_QUERY_ERROR'));
+        }
         
-        if($db->num_rows($curProviderResult) > 0) {
-            $row = $db->query_result_rowdata($curProviderResult,0);
-            $instance->setData($row);
+        $instance = null;
+        $resultRow = $db->fetchByAssoc($result);
+        if($resultRow != null) {
+            $instance = new Settings_SPTips_Provider_Model();
+            $instance->setData($resultRow);
+            $instance->initSettingsAfterFind();
         }
+
         return $instance;
     }
     
-    public function getCleanInstance() {
-        $self = new self();
-        $self->set('provider_id', '')
-                ->set('provider_name', '')
-                ->set('api_key', '')
-                ->set('token', '');
-        return $self;
-    }
-    
-    public function getAllProviders() {
+    /**
+     * 
+     * @return \Settings_SPTips_Provider_Model[]
+     * @throws AppException
+     */
+    public static function getAll() {
         $db = PearDatabase::getInstance();
-        $sql = 'SELECT * FROM ' . Settings_SPTips_Provider_Model::providersTable;
+        $sql = 'SELECT * FROM ' . Settings_SPTips_Provider_Model::PROVIDERS_TABLE_NAME;
         $result = $db->query($sql);
         
-        $existingProviders = array();
-        if($db->getRowCount($result) > 0){
-            while ($row = $db->fetchByAssoc($result)) {
-                $existingProviders[$row['provider_id']] = $row['provider_name']; 
-            }
+        if(!$result) {
+            throw new AppException(vtranslate('LBL_DATABASE_QUERY_ERROR'));
+        }
+        
+        $providersList = [];
+        while($resultRow = $db->fetchByAssoc($result)) {
+            $instance = new Settings_SPTips_Provider_Model();
+            $instance->setData($resultRow);
+            $instance->initSettingsAfterFind();
+            $providersList[] = $instance;
         }
-        return $existingProviders;
+        
+        return $providersList;
     }
     
-    public function getProviderClassName($providerName) {
-        return 'SPTips_' . $providerName . 'Provider_Model';
+    private function serializeSettings() {
+        $this->set('settings', json_encode($this->settingsMap));
     }
     
-    public function isProviderExists($providerId) {
-        $db = PearDatabase::getInstance();
-        $tableName = Settings_SPTips_Provider_Model::providersTable;
-        
-        $sql = 'SELECT * FROM ' . $tableName . ' WHERE provider_id = ?';
-        $result = $db->pquery($sql, array($providerId));
-        if ($db->num_rows($result)) {
-            return true;
+    private function initSettingsAfterFind() {
+        $this->settingsMap = json_decode(decode_html($this->get('settings')), true);
+        if($this->settingsMap == null) {
+            $this->settingsMap = [];
         }
-        return false;
     }
-    
-}
-
+}
\ No newline at end of file
diff --git a/modules/Settings/SPTips/models/Rule.php b/modules/Settings/SPTips/models/Rule.php
index 27bdd25..c6f80bf 100644
--- a/modules/Settings/SPTips/models/Rule.php
+++ b/modules/Settings/SPTips/models/Rule.php
@@ -11,15 +11,121 @@
 
 class Settings_SPTips_Rule_Model extends Settings_Vtiger_Record_Model {
     
-    const rulesTable = 'sp_tips_module_rules';
-    const dependendFieldsTable = 'sp_tips_dependent_fields';
+    const RULES_TABLE_NAME = 'sp_tips_module_rules';
+    
+    private $dependentsFieldsForSave = [];
     
     public function getName() {
         return '';
     }
     
     public function getId() {
-        return '';
+        return $this->get('rule_id');
+    }
+    
+    public function getModuleName() {
+        return $this->get('module');
+    }
+    
+    public function getTipFieldName() {
+        return $this->get('field');
+    }
+    
+    public function getType() {
+        return $this->get('type');
+    }
+    
+    /**
+     * 
+     * @return Settings_SPTips_Provider_Model
+     */
+    public function getProvider() {
+        return Settings_SPTips_Provider_Model::getInstanceById($this->get('provider_id'));
+    }
+    
+    /**
+     * 
+     * @return Vtiger_Field_Model
+     */
+    public function getTipFieldModel() {
+        $moduleModel = Vtiger_Module_Model::getInstance($this->getModuleName());
+        if($moduleModel) {
+            return $moduleModel->getField($this->getTipFieldName());
+        }
+        
+        return null;
+    }
+    
+    /**
+     * 
+     * @param string $moduleName
+     */
+    public static function getAllForModule($moduleName) {
+        $db = PearDatabase::getInstance();
+        $result = $db->pquery(
+            "SELECT * FROM " . Settings_SPTips_Rule_Model::RULES_TABLE_NAME . " WHERE module=?",
+            [$moduleName]
+        );
+        
+        $rulesList = [];
+        while($resultRow = $db->fetchByAssoc($result)) {
+            $rulesList[] = new Settings_SPTips_Rule_Model($resultRow);
+        }
+        
+        return $rulesList;
+    }
+    
+    /**
+     * 
+     * @param type $ruleId
+     * @return \Settings_SPTips_Rule_Model
+     */
+    public static function getInstanceById($ruleId) {
+        $db = PearDatabase::getInstance();
+        $result = $db->pquery("SELECT * FROM " . Settings_SPTips_Rule_Model::RULES_TABLE_NAME . " WHERE rule_id=? LIMIT 1", [$ruleId]);
+        $resultRow = $db->fetchByAssoc($result);
+        $instance = null;
+        if($resultRow != null) {
+            $instance = new Settings_SPTips_Rule_Model($resultRow);
+        }
+        
+        return $instance;
+    }
+    
+    /**
+     * 
+     * @param type $providerId
+     * @return \Settings_SPTips_Rule_Model[]
+     */
+    public static function getAllProviderRules($providerId) {
+        $db = PearDatabase::getInstance();
+        $result = $db->pquery("SELECT * FROM " . Settings_SPTips_Rule_Model::RULES_TABLE_NAME . " WHERE provider_id=?", [$providerId]);
+        $providers = [];
+        while($resultRow = $db->fetchByAssoc($result)) {
+            $providers[] = new Settings_SPTips_Rule_Model($resultRow);
+        }
+        
+        return $providers;
+    }
+    
+    /**
+     * 
+     * @return \Vtiger_Base_Model[]
+     */
+    public function getDependentFields() {
+        $db = PearDatabase::getInstance();
+        $result = $db->pquery("SELECT * FROM " . Settings_SPTips_RuleDependentField_Model::DEPENDENT_FIELDS_TABLE_NAME . " WHERE rule_id=?", [$this->getId()]);
+        
+        $dependentFields = [];
+        while($resultRow = $db->fetchByAssoc($result)) {
+            $dependentFields[] = new Settings_SPTips_RuleDependentField_Model($resultRow);
+        }
+        
+        return $dependentFields;
+    }
+    
+    public function setDependentFieldsForSave($dependentFieldsList) {
+        $this->dependentsFieldsForSave = $dependentFieldsList;
     }
     
     public function getAvailablePicklistModules() {
@@ -67,75 +173,40 @@ class Settings_SPTips_Rule_Model extends Settings_Vtiger_Record_Model {
     }
     
     public static function getCleanInstance() {
-        $self = new self();
-        $self->set('ruleId', '')
-                ->set('sourceModule', '')
-                ->set('sourceField', '')
-                ->set('sourceProviderField', '')
-                ->set('targetFields', '')
-                ->set('targetProviderFields', '')
-                ->set('providerId');
-        return $self;
-    }
-    
-    public static function getInstance($ruleId = false, $module=false, 
-            $sourceField=false, $sourceProviderField=false,$targetFields=false, $providerFields=false,$providerId=false) {
-        $self = new self();
-        $self->set('ruleId', $ruleId)
-                ->set('sourceModule', $module)
-                ->set('sourceField', $sourceField)
-                ->set('sourceProviderField', $sourceProviderField)
-                ->set('targetFields', $targetFields)
-                ->set('targetProviderFields', $providerFields)
-                ->set('providerId', $providerId);
-        return $self;
-    }
-    
-    public function getInstanceById($ruleId) {
-        $adb = PearDatabase::getInstance();
-        $tableName = Settings_SPTips_Rule_Model::rulesTable;
-        $sql = 'SELECT * FROM '. $tableName . ' WHERE rule_id = ?';
-        $result = $adb->pquery($sql, array($ruleId));
-        
-        if ($result) {
-            $moduleName = $adb->query_result($result, 0, 'module');
-            $sourceField = $adb->query_result($result, 0, 'field');
-            $sourceProviderField = $adb->query_result($result, 0, 'provider_field');
-            $providerId = $adb->query_result($result, 0, 'provider_id');
-            $dependentFields = Settings_SPTips_ListRules_View::getAllDependentFieldsForCurrentModule($ruleId, $moduleName);
-            $providerFields = Settings_SPTips_ListRules_View::getProviderFieldsForSelectedRule($ruleId);
-            return Settings_SPTips_Rule_Model::getInstance($ruleId, $moduleName, $sourceField, $sourceProviderField, $dependentFields, $providerFields, $providerId);
-        }
-        return Settings_SPTips_Rule_Model::getCleanInstance();
+        return new Settings_SPTips_Rule_Model();
     }
     
-    public function getInstanceByNameAndProvider($name, $id) {
-        $adb = PearDatabase::getInstance();
-        $tableName = Settings_SPTips_Rule_Model::rulesTable;
-        $sql = 'SELECT * FROM ' . $tableName . ' WHERE module = ? AND provider_id=?';
-        $result = $adb->pquery($sql, array($name, $id));
-        if ($result) {
-            $ruleId = $adb->query_result($result, 0, 'rule_id');
-            $instance = Settings_SPTips_Rule_Model::getInstanceById($ruleId);
-            return $instance;
+    public function save() {
+        $db = PearDatabase::getInstance();
+        if($this->getId() != null) {
+            $db->pquery(
+                "UPDATE " . Settings_SPTips_Rule_Model::RULES_TABLE_NAME . " SET module=?, field=?, type=?, provider_id=? WHERE rule_id=?", 
+                [$this->getModuleName(), $this->getTipFieldName(), $this->getType(), $this->get('provider_id'), $this->getId()]
+            );
+        } else {
+            $this->set('rule_id', $db->getUniqueID(Settings_SPTips_Rule_Model::RULES_TABLE_NAME));
+            $db->pquery(
+                "INSERT INTO " . Settings_SPTips_Rule_Model::RULES_TABLE_NAME . "(rule_id,module,field,type,provider_id) VALUES(?,?,?,?,?)",
+                [$this->getId(), $this->getModuleName(), $this->getTipFieldName(), $this->getType(), $this->get('provider_id')]
+            );
+        }
+        
+        $db->pquery("DELETE FROM " . Settings_SPTips_RuleDependentField_Model::DEPENDENT_FIELDS_TABLE_NAME . " WHERE rule_id=?", [$this->getId()]);
+        foreach($this->dependentsFieldsForSave as $ruleDependentField) {
+            $ruleDependentField->set('rule_id', $this->getId());
+            $ruleDependentField->save();
         }
-        return Settings_SPTips_Rule_Model::getCleanInstance();
-    }
-    
-    public function getBindingFieldForModule($moduleName, $providerId) {
-        $adb = PearDatabase::getInstance();
-        $tableName = Settings_SPTips_Rule_Model::rulesTable;
-        $sql = 'SELECT * FROM ' . $tableName . ' WHERE module = ? AND provider_id=?';
-        $result = $adb->pquery($sql, array($moduleName, $providerId));
-        return $adb->query_result($result, 0, 'field');
     }
     
-    public function getProviderFieldForSourceField($moduleName, $providerId) {
-        $adb = PearDatabase::getInstance();
-        $tableName = Settings_SPTips_Rule_Model::rulesTable;
-        $sql = 'SELECT * FROM ' . $tableName . ' WHERE module = ? AND provider_id=?';
-        $result = $adb->pquery($sql, array($moduleName, $providerId));
-        return $adb->query_result($result, 0, 'provider_field');
+    public function delete() {
+        if($this->getId() != null) {
+            $db = PearDatabase::getInstance();
+            $db->pquery("DELETE FROM " . Settings_SPTips_Rule_Model::RULES_TABLE_NAME . " WHERE rule_id=?",[$this->getId()]);
+            
+            foreach($this->getDependentFields() as $dependentFieldModel) {
+                $dependentFieldModel->delete();
+            }
+        }
     }
     
 }
\ No newline at end of file
diff --git a/modules/Settings/SPTips/models/RuleDependentField.php b/modules/Settings/SPTips/models/RuleDependentField.php
new file mode 100644
index 0000000..5e03383
--- /dev/null
+++ b/modules/Settings/SPTips/models/RuleDependentField.php
@@ -0,0 +1,85 @@
+<?php
+/*+**********************************************************************************
+ * The contents of this file are subject to the vtiger CRM Public License Version 1.1
+ * ("License"); You may not use this file except in compliance with the License
+ * The Original Code is: SalesPlatform Ltd
+ * The Initial Developer of the Original Code is SalesPlatform Ltd.
+ * All Rights Reserved.
+ * If you have any questions or comments, please email: devel@salesplatform.ru
+ ************************************************************************************/
+
+class Settings_SPTips_RuleDependentField_Model extends Settings_Vtiger_Record_Model {
+    
+    const DEPENDENT_FIELDS_TABLE_NAME = 'sp_tips_dependent_fields';
+    
+    public function getId() {
+        return $this->get('field_id');
+    }
+
+    public function getName() {
+        return "";
+    }
+    
+    public function getModuleName() {
+        $ruleModel = $this->getRule();
+        if($ruleModel != null) {
+            return $ruleModel->getModuleName();
+        }
+        
+        return null;
+    }
+    
+    public function getProviderFieldName() {
+        return $this->get('provider_fieldname');
+    }
+    
+    public function getVtigerFieldName() {
+        return $this->get('vtiger_fieldname');
+    }
+
+    public function getVtigerField() {
+        $ruleModel = $this->getRule();
+        if($ruleModel != null) {
+            $moduleModel = Vtiger_Module_Model::getInstance($ruleModel->getModuleName());
+            if($moduleModel) {
+                return $moduleModel->getField($this->getVtigerFieldName());
+            }
+        }
+        
+        return null;
+    }
+    
+    /**
+     * 
+     * @return Settings_SPTips_Rule_Model
+     */
+    public function getRule() {
+        return Settings_SPTips_Rule_Model::getInstanceById($this->get('rule_id'));
+    }
+    
+    
+    public function save() {
+        $db = PearDatabase::getInstance();
+        if($this->getId() != null) {
+            $db->pquery(
+                "UPDATE " . Settings_SPTips_RuleDependentField_Model::DEPENDENT_FIELDS_TABLE_NAME . 
+                " SET vtiger_fieldname=?, provider_fieldname=?, rule_id=? WHERE field_id=?", 
+                [$this->getVtigerFieldName(), $this->getProviderFieldName(), $this->get('rule_id'), $this->getId()]
+            );
+        } else {
+           $this->set('field_id', $db->getUniqueID(Settings_SPTips_RuleDependentField_Model::DEPENDENT_FIELDS_TABLE_NAME));
+           $db->pquery(
+               "INSERT INTO " . Settings_SPTips_RuleDependentField_Model::DEPENDENT_FIELDS_TABLE_NAME . 
+               " VALUES(?,?,?,?)",
+               [$this->getId(), $this->getVtigerFieldName(), $this->getProviderFieldName(), $this->get('rule_id')]
+            );
+        }
+    }
+    
+    public function delete() {
+        if($this->getId() != null) {
+            $db = PearDatabase::getInstance();
+            $db->pquery("DELETE FROM " . Settings_SPTips_RuleDependentField_Model::DEPENDENT_FIELDS_TABLE_NAME . " WHERE field_id=?", [$this->getId()]);
+        }
+    }
+}
diff --git a/modules/Settings/SPTips/views/EditProvider.php b/modules/Settings/SPTips/views/EditProvider.php
index b6db7c0..1cdf241 100644
--- a/modules/Settings/SPTips/views/EditProvider.php
+++ b/modules/Settings/SPTips/views/EditProvider.php
@@ -12,22 +12,16 @@
 class Settings_SPTips_EditProvider_View extends Settings_Vtiger_Index_View {
     
     public function process(Vtiger_Request $request) {
+        $qualifiedModuleName = $request->getModule(false);
         $providerId = $request->get('providerId');
-        
-        if ($providerId && Settings_SPTips_Provider_Model::isProviderExists($providerId)) {
-            $recordInstance = Settings_SPTips_Provider_Model::getInstanceById($providerId); 
-        } else {
-            // returns provider instance, selected in system
-            $recordInstance = Settings_SPTips_Provider_Model::getInstance();
+        $provider = Settings_SPTips_Provider_Model::getInstanceById($providerId);
+        if($provider == null) {
+            throw new AppException(vtranslate('LBL_PERMISSION_DENIED'));
         }
-        
-        $qualifiedModuleName = $request->getModule(false);
-        $availableForAddingProviders = SPTips_AvailableProviders_Model::getAvailvableProviders();
-        
+
         $viewer = $this->getViewer($request);
         $viewer->assign('QUALIFIED_MODULE', $qualifiedModuleName);
-        $viewer->assign('RECORD_STRUCTURE', $recordInstance);
-        $viewer->assign('AVAILABLE_PROVIDERS', $availableForAddingProviders);
+        $viewer->assign('PROVIDER', $provider);
         $viewer->view('EditProvider.tpl',$qualifiedModuleName);
     }
 }
\ No newline at end of file
diff --git a/modules/Settings/SPTips/views/EditRules.php b/modules/Settings/SPTips/views/EditRules.php
index 6bc9852..3d8bc9f 100644
--- a/modules/Settings/SPTips/views/EditRules.php
+++ b/modules/Settings/SPTips/views/EditRules.php
@@ -1,72 +1,78 @@
 <?php
 
-/*+**********************************************************************************
+/* +**********************************************************************************
  * The contents of this file are subject to the vtiger CRM Public License Version 1.1
  * ("License"); You may not use this file except in compliance with the License
  * The Original Code is: SalesPlatform Ltd
  * The Initial Developer of the Original Code is SalesPlatform Ltd.
  * All Rights Reserved.
  * If you have any questions or comments, please email: devel@salesplatform.ru
- ************************************************************************************/
+ * ********************************************************************************** */
 
 class Settings_SPTips_EditRules_View extends Settings_Vtiger_Index_View {
-    
+
     public function process(Vtiger_Request $request) {
-        $qualifiedModuleName = $request->getModule(false);        
+        $qualifiedModuleName = $request->getModule(false);
         $availableModules = Settings_SPTips_Rule_Model::getAvailablePicklistModules();
-        
         $record = $request->get('record');
-        if(!empty($record)) {
+        $providerId = $request->get('providerId');
+        $selectedModule = $request->get('sourceModule');
+        $type = $request->get('type');
+        $skipRecordDependentFields = false;
+        
+        
+        /* Check provider */
+        $viewer = $this->getViewer($request);
+        $provider = Settings_SPTips_Provider_Model::getInstanceById($providerId);
+        if ($provider == null) {
+            $viewer->view('Error.tpl', $qualifiedModuleName);
+            return;
+        }
+        $providerImplementation = $provider->getConcreteRealization();
+        $tipTypes = $providerImplementation->getSupportedSearchTypes();
+        
+        
+        /* Prepare for display */
+        if (!empty($record)) {
             $recordModel = Settings_SPTips_Rule_Model::getInstanceById($record);
-            $selectedModule = $recordModel->get('sourceModule');
-            $providerId = $recordModel->get('providerId');
         } else {
-            $sourceField = $request->get('sourcefield');
-            $selectedModule = $request->get('sourceModule');
-            if (empty($selectedModule)) {
-                $selectedModule = $availableModules[0]->name;
-            }
-            
-            $targetField = $request->get('targetfield');
-            $providerFields = $request->get('providerField');
-            $providerId = $request->get('providerId');
-            $recordModel = Settings_SPTips_Rule_Model::getInstance(null, $selectedModule, $sourceField, $targetField, $providerFields, $providerId);
+            $recordModel = Settings_SPTips_Rule_Model::getCleanInstance();
+            $recordModel->set('provider_id', $providerId);
+            $firstModule = current($availableModules);
+            $recordModel->set('module', $firstModule->name);
+            $recordModel->set('type', current($tipTypes));
         }
         
-        $availableFields = Settings_SPTips_Rule_Model::getAvailableModuleFields($selectedModule);
-        $existingProviders = Settings_SPTips_Provider_Model::getAllProviders();
-        
-        $ruleId = false;
-        // first condition: edit rule without changing module
-        if ($record) {
-            $ruleId = $record;
+        if(!empty($selectedModule) || !empty($type)) {
+            $recordModel->set('field', null);
+            $skipRecordDependentFields = true;
         }
-        // second condition: edit rule and changed source module
-        else if ($request->get('operation') == 'loadFieldsForNewModule') {
-            $ruleId = $request->get('editRuleId');
+        if(!empty($type)) {
+            $recordModel->set('type', $type);
         }
-        
-        $viewer = $this->getViewer($request);
-        // include file contains provider class
-        $providerInstance = Settings_SPTips_Provider_Model::getInstanceById($providerId);
-        $providerName = $providerInstance->get('provider_name');
-        if (!$providerName) {
-            $viewer->view('Error.tpl',$qualifiedModuleName);
-            return;
+        if(!empty($selectedModule)) {
+            $recordModel->set('module', $selectedModule);
         }
-        $providerClassName = Settings_SPTips_Provider_Model::getProviderClassName($providerName);
-        $viewer->assign('PROVIDER_PICKLIST_FIELDS', $providerClassName::getProviderFields());
         
+        
+        
+        /* Prepare display */
+        $availableFields = Settings_SPTips_Rule_Model::getAvailableModuleFields($recordModel->getModuleName());
+        $viewer->assign('PROVIDER_PICKLIST_FIELDS', $providerImplementation->getProviderFields($recordModel->getType()));
         $viewer->assign('QUALIFIED_MODULE', $qualifiedModuleName);
         $viewer->assign('AVAILABLE_MODULES', $availableModules);
-        $viewer->assign('SELECTED_MODULE',$selectedModule);
-        $viewer->assign('PICKLIST_FIELDS',$availableFields);
-        
-        $viewer->assign('EXISTING_PROVIDERS', $existingProviders);
-        $viewer->assign('CURRENT_PROVIDER_ID', $providerId);
-        $viewer->assign('PROVIDER_NAME', $providerName);
-        $viewer->assign('RULE_ID', $ruleId);
-        $viewer->assign('RECORD_MODEL',$recordModel);
-        $viewer->view('EditRules.tpl',$qualifiedModuleName);
+        $viewer->assign('SUPPORTED_TYPES', $tipTypes);
+        $viewer->assign('PICKLIST_FIELDS', $availableFields);
+        $viewer->assign('PROVIDER', $provider);
+        $viewer->assign('RECORD_MODEL', $recordModel);
+        $viewer->assign('SKIP_DEPENDENT', $skipRecordDependentFields);
+        $viewer->view('EditRules.tpl', $qualifiedModuleName);
     }
+    
+    public function getHeaderScripts(Vtiger_Request $request) {
+            $moduleName = $request->getModule();
+            $jsScriptInstances = $this->checkAndConvertJsScripts(["modules.Settings.$moduleName.resources.EditRules"]);
+            return array_merge(parent::getHeaderScripts($request), $jsScriptInstances);
+    }
+
 }
diff --git a/modules/Settings/SPTips/views/Index.php b/modules/Settings/SPTips/views/Index.php
index b8e3f77..d6557bf 100644
--- a/modules/Settings/SPTips/views/Index.php
+++ b/modules/Settings/SPTips/views/Index.php
@@ -1,27 +1,27 @@
 <?php
-/*+**********************************************************************************
+/* +**********************************************************************************
  * The contents of this file are subject to the vtiger CRM Public License Version 1.1
  * ("License"); You may not use this file except in compliance with the License
  * The Original Code is: SalesPlatform Ltd
  * The Initial Developer of the Original Code is SalesPlatform Ltd.
  * All Rights Reserved.
  * If you have any questions or comments, please email: devel@salesplatform.ru
- ************************************************************************************/
+ * ********************************************************************************** */
 
 class Settings_SPTips_Index_View extends Settings_Vtiger_Index_View {
-    
+
     public function process(Vtiger_Request $request) {
-            $qualifiedModuleName = $request->getModule(false);  //full name in Settings module
-            
-            $existingProviders = Settings_SPTips_Provider_Model::getAllProviders();
-            $currentProviderInstance = Settings_SPTips_Provider_Model::getInstance();
-            $currentProviderid = $currentProviderInstance->get('provider_id');
-            
-            $viewer = $this->getViewer($request);
-            $viewer->assign('QUALIFIED_MODULE', $qualifiedModuleName);
-            $viewer->assign('EXISTING_PROVIDERS', $existingProviders);
-            
-            $viewer->assign('CURRENT_PROVIDER_ID', $currentProviderid);
-            $viewer->view('Index.tpl', $qualifiedModuleName);
+        $qualifiedModuleName = $request->getModule(false);
+        $providersList = Settings_SPTips_Provider_Model::getAll();
+        $selectedProider = current($providersList);
+        
+        $viewer = $this->getViewer($request);
+        $viewer->assign('QUALIFIED_MODULE', $qualifiedModuleName);
+        $viewer->assign('EXISTING_PROVIDERS', Settings_SPTips_Provider_Model::getAll());
+        $viewer->assign('EXISTING_RULES', Settings_SPTips_Rule_Model::getAllProviderRules($selectedProider->getId()));
+        $viewer->assign('SELECTED_PROVIDER', $selectedProider);
+
+        $viewer->view('Index.tpl', $qualifiedModuleName);
     }
+
 }
diff --git a/modules/Settings/SPTips/views/ListRules.php b/modules/Settings/SPTips/views/ListRules.php
index 7558cf2..a4e6937 100644
--- a/modules/Settings/SPTips/views/ListRules.php
+++ b/modules/Settings/SPTips/views/ListRules.php
@@ -15,58 +15,19 @@ class Settings_SPTips_ListRules_View extends Settings_Vtiger_Index_View {
     const dependentFieldsTable = 'sp_tips_dependent_fields';
     
     public function process(Vtiger_Request $request) {
-        
         $qualifiedModuleName = $request->getModule(false);
-        
-        $existingProviders = Settings_SPTips_Provider_Model::getAllProviders();
-        if (!$request->get('selectedProvider')) {
-            $currentProviderInstance = Settings_SPTips_Provider_Model::getInstance();
-            $providerId = $currentProviderInstance->get('provider_id');
-        }
-        else {
-            $providerId = Settings_SPTips_Provider_Model::getProviderIdByName($request->get('selectedProvider'));
+        $providerModel = Settings_SPTips_Provider_Model::getInstanceById($request->get('selectedProvider'));
+        if($providerModel == null) {
+            throw new AppException(vtranslate('LBL_PERMISSION_DENIED'));
         }
         
-        $existingRules = $this->getAllRulesByProvider($providerId);
-        
         $viewer = $this->getViewer($request);
         $viewer->assign('QUALIFIED_MODULE', $qualifiedModuleName);
-        $viewer->assign('EXISTING_RULES', $existingRules);
-        
-        $viewer->assign('EXISTING_PROVIDERS', $existingProviders);
-        $viewer->assign('CURRENT_PROVIDER_ID', $providerId);
+        $viewer->assign('EXISTING_RULES', Settings_SPTips_Rule_Model::getAllProviderRules($providerModel->getId()));
+
         $viewer->view('RulesTable.tpl',$qualifiedModuleName);
     }
-    
-    public function getAllRulesByProvider($providerId) {
-        $adb = PearDatabase::getInstance();
-        $sql = 'SELECT * FROM ' . Settings_SPTips_ListRules_View::moduleRuleTable . ' WHERE provider_id=?';
-        
-        $result = $adb->pquery($sql, array($providerId));
-        $existingRules = array();
-        while($row = $adb->fetch_array($result)) {
-            $ruleId = $row['rule_id'];
-            $moduleName = $row['module'];
-            
-            $sourceFieldLabel = $this->getLabelForCurrentField($row['field'], $moduleName);
-            if (isset($sourceFieldLabel)) {
-                $sourceField = $sourceFieldLabel;
-            }
-            else {
-                $sourceField = $row['field'];
-            }
-            $sourceProviderField = $row['provider_field'];
-            $dependentFields = $this->getAllDependentFieldsForCurrentModule($ruleId, $moduleName);
-            $providerFields = $this->getProviderFieldsForSelectedRule($ruleId);
-            
-            $recordModel = Settings_SPTips_Rule_Model::getInstance($ruleId, $moduleName, $sourceField, $sourceProviderField, $dependentFields, $providerFields);
-            $existingRules[] = $recordModel;
-            
-        }
-        return $existingRules;
-        
-    }
-    
+     
     public function getAllDependentFieldsForCurrentModule($ruleId, $moduleName) {
         $adb = PearDatabase::getInstance();
         
diff --git a/modules/Settings/SPVoipIntegration/models/Record.php b/modules/Settings/SPVoipIntegration/models/Record.php
index 7efc9c6..f681f55 100644
--- a/modules/Settings/SPVoipIntegration/models/Record.php
+++ b/modules/Settings/SPVoipIntegration/models/Record.php
@@ -4,7 +4,10 @@ class Settings_SPVoipIntegration_Record_Model extends Settings_Vtiger_Record_Mod
 
     const settingsTable = 'vtiger_sp_voipintegration_settings';
     const defaultProvideTable = 'vtiger_sp_voip_default_provider';
-
+    const optionsTable = 'vtiger_sp_voipintegration_options';
+    
+    const USE_CLICK_TO_CALL_FIELD = 'use_click_to_call';
+    
     public function getId() {
         return $this->get('id');
     }
@@ -12,7 +15,28 @@ class Settings_SPVoipIntegration_Record_Model extends Settings_Vtiger_Record_Mod
     public function getName() {
         return $this->get('id');
     }
-
+    
+    public static function isOutgoingCallsEnabled() {
+        Users_Privileges_Model::getCurrentUserPrivilegesModel();
+        $permission = Users_Privileges_Model::isPermitted('PBXManager', 'MakeOutgoingCalls');
+        
+        return $permission && self::isClickToCallEnabled();
+    }
+    
+    public static function isClickToCallEnabled() {
+        $db = PearDatabase::getInstance();
+        $result = $db->pquery("SELECT value FROM " . self::optionsTable . " WHERE name=?", array(
+            self::USE_CLICK_TO_CALL_FIELD
+        ));
+        
+        if($result) {
+            $resultRow = $db->fetchByAssoc($result);
+            return ($resultRow != null && $resultRow['value'] == 1);
+        }
+        
+        return false;
+    }
+    
     public static function getInstance() {
         $db = PearDatabase::getInstance();
 
@@ -70,6 +94,11 @@ class Settings_SPVoipIntegration_Record_Model extends Settings_Vtiger_Record_Mod
         } else {
             $db->pquery("UPDATE " . self::defaultProvideTable . " SET default_provider=?", array($request->get('default_provider')));
         }
+        
+        $isClickToCall = ($request->get('use_click_to_call') == "on" || $request->get('use_click_to_call') == 1);
+        $db->pquery("UPDATE " . self::optionsTable . " SET value=? WHERE name=?", array(
+            ($isClickToCall ? 1 : 0), self::USE_CLICK_TO_CALL_FIELD
+        ));
     }
 
     public function getProviderFieldObject() {
@@ -94,7 +123,7 @@ class Settings_SPVoipIntegration_Record_Model extends Settings_Vtiger_Record_Mod
     public static function getMangoKey() {
         return self::getVoipSettingsFieldValue('mango_key');
     }
-
+    
     public static function getMangoAPIUrl() {
         return self::getVoipSettingsFieldValue('mango_url');
     }
diff --git a/modules/Settings/Workflows/models/Field.php b/modules/Settings/Workflows/models/Field.php
index a69059e..eb0b191 100644
--- a/modules/Settings/Workflows/models/Field.php
+++ b/modules/Settings/Workflows/models/Field.php
@@ -112,6 +112,8 @@ class Settings_Workflows_Field_Model extends Vtiger_Field_Model {
 			'image' => array('is', 'is not', 'contains', 'does not contain', 'starts with', 'ends with', 'is empty', 'is not empty'),
 			'percentage' => array('equal to', 'less than', 'greater than', 'does not equal', 'less than or equal to', 'greater than or equal to', 'has changed', 'is not empty'),
 			'currencyList' => array('is', 'is not', 'has changed', 'has changed to', 'has changed from'),
+            'SPTextArea' => array('is', 'is not', 'contains', 'does not contain', 'starts with', 'ends with', 'has changed', 'is empty', 'is not empty'),
+            'file' => array('is', 'is not', 'contains', 'does not contain', 'starts with', 'ends with', 'has changed', 'is empty', 'is not empty'),
 		);
 	}
 
diff --git a/modules/Users/Users.php b/modules/Users/Users.php
index b8afc57..9fb282f 100644
--- a/modules/Users/Users.php
+++ b/modules/Users/Users.php
@@ -1844,10 +1844,7 @@ class Users extends CRMEntity {
 						}
 					} else if($fieldName == 'roleid') {
 						foreach($allRoles as $role) {
-                                                    // SalesPlatform.ru begin
-							//if(strtolower($fieldValue) == strtolower($role->getName())) {
-                                                    if(strtolower($fieldValue) == strtolower($role->getId())) {
-                                                    // SalesPlatform.ru end
+                                                    if(strtolower($fieldValue) == strtolower($role->getName())) {
 								$roleId = $role->getId();
 								break;
 							}
diff --git a/modules/Users/actions/ExportData.php b/modules/Users/actions/ExportData.php
index 0da49be..4e5570d 100644
--- a/modules/Users/actions/ExportData.php
+++ b/modules/Users/actions/ExportData.php
@@ -53,9 +53,16 @@ class Users_ExportData_Action extends Vtiger_ExportData_Action {
 			}
 
 			$entries = array();
+                        $allRoles = Settings_Roles_Record_Model::getAll();
 			for ($i=0; $i<$db->num_rows($result); $i++) {
-				$entries[] = $db->fetchByAssoc($result, $i);
+				$entries[$i] = $db->fetchByAssoc($result, $i);
+                                $role =  $allRoles[$entries[$i]['roleid']];
+                                if(!empty($role)) {
+                                         $entries[$i]['roleid'] = $role->getName();
+                                }
 			}
+                        
+                        
 
 			return $this->output($request, $translatedHeaders, $entries);
 		}
diff --git a/modules/Vtiger/actions/ExportData.php b/modules/Vtiger/actions/ExportData.php
index c71d663..f9b85c4 100644
--- a/modules/Vtiger/actions/ExportData.php
+++ b/modules/Vtiger/actions/ExportData.php
@@ -384,6 +384,7 @@ class Vtiger_ExportData_Action extends Vtiger_Mass_Action {
 				$value = str_replace('&nbsp;','',$value);
 				array_push($new_arr,$value);
 			}
+                        $value = str_replace('"', '""', $value);
 		}
 		return $arr;
 	}
diff --git a/modules/Vtiger/actions/Save.php b/modules/Vtiger/actions/Save.php
index 555a2d1..0cc67dc 100644
--- a/modules/Vtiger/actions/Save.php
+++ b/modules/Vtiger/actions/Save.php
@@ -38,6 +38,9 @@ class Vtiger_Save_Action extends Vtiger_Action_Controller {
 	public function process(Vtiger_Request $request) {
 		try {
 			$recordModel = $this->saveRecord($request);
+                        if ($request->get('msgno') && $request->get('foldername')) {
+                            MailManager_Relation_View::saveAttachments($request->get('msgno'), $request->get('foldername'), $recordModel);
+                        }
 			if ($request->get('returntab_label')){
 				$loadUrl = 'index.php?'.$request->getReturnURL();
 			} else if($request->get('relationOperation')) {
diff --git a/modules/Vtiger/views/Edit.php b/modules/Vtiger/views/Edit.php
index a63f784..1dda2be 100644
--- a/modules/Vtiger/views/Edit.php
+++ b/modules/Vtiger/views/Edit.php
@@ -76,6 +76,10 @@ Class Vtiger_Edit_View extends Vtiger_Index_View {
 
 	public function process(Vtiger_Request $request) {
 		$viewer = $this->getViewer ($request);
+                if ($request->get('msgno') && $request->get('foldername')) {
+                    $viewer->assign('MSG_NO', $request->get('msgno'));
+                    $viewer->assign('FOLDER_NAME', $request->get('foldername'));
+                }
 		$moduleName = $request->getModule();
 		$record = $request->get('record');
 		if(!empty($record) && $request->get('isDuplicate') == true) {
diff --git a/modules/Vtiger/views/FindDuplicates.php b/modules/Vtiger/views/FindDuplicates.php
index 1f994c9..0ce8b35 100644
--- a/modules/Vtiger/views/FindDuplicates.php
+++ b/modules/Vtiger/views/FindDuplicates.php
@@ -92,10 +92,13 @@ class Vtiger_FindDuplicates_View extends Vtiger_List_View {
 		$ignoreEmptyValue = false;
 		if($ignoreEmpty == 'on' || $ignoreEmpty == 'true' || $ignoreEmpty == '1') $ignoreEmptyValue = true;
 		$dataModelInstance->set('ignoreEmpty', $ignoreEmptyValue);
-
+                //SalesPlatfrorm.ru begin
+                $listViewEntries = $dataModelInstance->getListViewEntries($pagingModel);
 		if(!$this->listViewEntries) {
-			$this->listViewEntries = $dataModelInstance->getListViewEntries($pagingModel);
+		//$this->listViewEntries = $dataModelInstance->getListViewEntries($pagingModel);
+                    $this->listViewEntries = $listViewEntries;
 		}
+                //SalesPlatform.ru end
 
 		if(!$this->listViewHeaders){
 			$this->listViewHeaders = $dataModelInstance->getListViewHeaders();
@@ -111,10 +114,12 @@ class Vtiger_FindDuplicates_View extends Vtiger_List_View {
 				$rowCount++;
 			}
 		}
+                //SalesPlatfoem.ru begin
 		//for calculating the page range
-		for($i=0; $i<$rowCount; $i++) $dummyListEntries[] = $i;
-		$pagingModel->calculatePageRange($dummyListEntries);
-
+		//for($i=0; $i<$rowCount; $i++) $dummyListEntries[] = $i;
+		//$pagingModel->calculatePageRange($dummyListEntries);
+                //SalesPlatform.ru end
+                
 		$viewer->assign('IGNORE_EMPTY', $ignoreEmpty);
 		$viewer->assign('LISTVIEW_ENTRIES_COUNT', $rowCount);
 		$viewer->assign('LISTVIEW_HEADERS', $this->listViewHeaders);
diff --git a/modules/Vtiger/views/QuickCreateAjax.php b/modules/Vtiger/views/QuickCreateAjax.php
index 6b3dda0..1fe741c 100644
--- a/modules/Vtiger/views/QuickCreateAjax.php
+++ b/modules/Vtiger/views/QuickCreateAjax.php
@@ -18,8 +18,45 @@ class Vtiger_QuickCreateAjax_View extends Vtiger_IndexAjax_View {
 		}
 	}
 
+        private function emailRelated($moduleName, $email){
+            $db = PearDatabase::getInstance();
+            $fieldsMap = [];
+            $recordModel = Vtiger_Record_Model::getCleanInstance($moduleName);
+            $module = $recordModel->getModule();
+            
+            foreach($module->getFields() as $fieldModel) {
+                if($fieldModel->uitype == 13 && $fieldModel->isActiveField()) {
+                    $fieldsMap[$fieldModel->table][] = $fieldModel->column;
+                }
+            }
+            foreach($fieldsMap as $table => $fields){
+                $sql = "SELECT " . $module->basetableid . " FROM " . $table ." INNER JOIN vtiger_crmentity ON vtiger_crmentity.crmid = " 
+                        . $table . "." . $module->basetableid . " WHERE vtiger_crmentity.deleted = 0 AND (";
+                $parameters = array();
+                foreach($fields as $field) {
+                    $sql .= $field . " = ?";
+                    if (!next($fields)){
+                        $sql .= ")";
+                    } else {
+                        $sql .=" OR ";
+                    }
+                    $parameters[] = $email;
+                }
+                $result = $db->pquery($sql, $parameters);
+                if ($result) {
+                    $emailRelatedId = $db->query_result($result, 0, $module->basetableid);
+                    if ($emailRelatedId != null){
+                        return $emailRelatedId;
+                    }
+                }
+            }
+            
+            return null;
+        }
+        
 	public function process(Vtiger_Request $request) {
 		$moduleName = $request->getModule();
+                $db = PearDatabase::getInstance();
 
 		$recordModel = Vtiger_Record_Model::getCleanInstance($moduleName);
 		$moduleModel = $recordModel->getModule();
@@ -27,6 +64,14 @@ class Vtiger_QuickCreateAjax_View extends Vtiger_IndexAjax_View {
 		$fieldList = $moduleModel->getFields();
 		$requestFieldList = array_intersect_key($request->getAll(), $fieldList);
 
+                if ($request->get('email')){
+                    $emailAddress = $request->get('email');
+                    $requestFieldList['contact_id'] = $this->emailRelated('Contacts', $emailAddress);
+                    $requestFieldList['related_to'] = $this->emailRelated('Accounts', $emailAddress);
+                    $msgNo = $request->get('_msgno');
+                    $folderName = $request->get('_folder');
+                }
+                
 		foreach($requestFieldList as $fieldName => $fieldValue){
 			$fieldModel = $fieldList[$fieldName];
 			if($fieldModel->isEditable()) {
@@ -40,9 +85,17 @@ class Vtiger_QuickCreateAjax_View extends Vtiger_IndexAjax_View {
 		}
 
 		$recordStructureInstance = Vtiger_RecordStructure_Model::getInstanceFromRecordModel($recordModel, Vtiger_RecordStructure_Model::RECORD_STRUCTURE_MODE_QUICKCREATE);
-		$picklistDependencyDatasource = Vtiger_DependencyPicklist::getPicklistDependencyDatasource($moduleName);
+                $picklistDependencyDatasource = Vtiger_DependencyPicklist::getPicklistDependencyDatasource($moduleName);
 
 		$viewer = $this->getViewer($request);
+                if ($msgNo && $folderName) {
+                    $viewer->assign('MSG_NO', $msgNo);
+                    $viewer->assign('FOLDER_NAME', $folderName);
+                }
+          	$recordStructure = $recordStructureInstance->getStructure();
+                if (!array_key_exists('contact_id', $recordStructure)) {
+                    $viewer->assign('CONTACT_ID', $requestFieldList['contact_id']);
+                }
 		$viewer->assign('PICKIST_DEPENDENCY_DATASOURCE', Vtiger_Functions::jsonEncode($picklistDependencyDatasource));
 		$viewer->assign('CURRENTDATE', date('Y-n-j'));
 		$viewer->assign('MODULE', $moduleName);
diff --git a/packages/vtiger/optional/SPTips.zip b/packages/vtiger/optional/SPTips.zip
index fe2cf40..c957472 100644
Binary files a/packages/vtiger/optional/SPTips.zip and b/packages/vtiger/optional/SPTips.zip differ
diff --git a/spServicePackVersion.txt b/spServicePackVersion.txt
index 6e2f12d..61d0bdb 100644
--- a/spServicePackVersion.txt
+++ b/spServicePackVersion.txt
@@ -1 +1 @@
-7.1.0-201803
+7.1.0-201803 Service Pack 01
